#===----------------------------------------------------------------------===##
#
# Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
#===----------------------------------------------------------------------===##

# HACK: We set the base image in the docker-compose file depending on the final target (buildkite vs github actions).
# This means we have a much slower container build, but we can use the same Dockerfile for both targets.
ARG BASE_IMAGE
FROM $BASE_IMAGE AS runner-lite

# Make sure apt-get doesn't try to prompt for stuff like our time zone, etc.
ENV DEBIAN_FRONTEND=noninteractive

# HACK: The github actions runner image already has sudo and requires its use. The buildkite base image does not.
# Reconcile this.
RUN <<EOF
  apt-get update || true
  apt-get install -y sudo || true
  echo "ALL ALL = (ALL) NOPASSWD: ALL" | tee /etc/sudoers || true
EOF

RUN sudo apt-get update \
    && sudo apt-get install -y \
        python3 \
        python3-distutils \
        python3-psutil \
        python3-venv \
        python3-pip \
        git \
        gpg \
        wget \
        bash \
        curl \
        python3 \
        python3-dev \
        libpython3-dev \
        uuid-dev \
        libncurses5-dev \
        lsb-release \
        wget \
        unzip \
        software-properties-common \
    && sudo rm -rf /var/lib/apt/lists/*


ENV PATH="/home/runner/.local/bin:${PATH}"
COPY ci-requirements.in /tmp/ci-requirements.in

RUN python3 -m pip install --upgrade pip && python3 -m pip install pip-tools

# Compile down the requirements.in file into an exact requirements.txt file. Use that to install the packages.
RUN pip-compile /tmp/ci-requirements.in --output-file /tmp/ci-requirements.txt && \
    python3 -m pip install -r /tmp/ci-requirements.txt

# Create a default virtual environment for the runner user.
RUN cd /home/runner && python3 -m venv ./pyenv && \
    echo "source /home/runner/pyenv/bin/activate" >> /home/runner/.bashrc && \
    . ./pyenv/bin/activate && \
    python3 -m pip install -r /tmp/ci-requirements.txt \

# Install 'act' for running github actions locally. This provides an alternative to the run-buildbot script
# while still providing reproducability.
RUN curl -s https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash

WORKDIR /home/runner
USER runner



