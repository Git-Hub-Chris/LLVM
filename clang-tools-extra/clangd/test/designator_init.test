//# RUN: rm -rf %t.dir/* && mkdir -p %t.dir
//# RUN: echo '[{"directory": "%/t.dir", "command": "clang -x c -c %s", "file": "%s"}]' > %t.dir/compile_commands.json
//# RUN: clangd --compile-commands-dir=%t.dir --check=%s 2>&1 | FileCheck %s
//# UNSUPPORTED: system-windows
typedef struct S {
  unsigned char id;
  union {
    unsigned int mask;
    struct {
      unsigned int unused:10;
      unsigned int reserved:3;
      unsigned int rest:19;
    };
  };
} __attribute__((packed)) S_t;

typedef struct H {
  unsigned char hid;
  unsigned int val;
} handler_t;

struct S
get_foo (handler_t *h)
{
  S_t retval =
    {.id=h->hid,
     .mask=h->val};
  return retval;
}

// CHECK: All checks completed, 0 errors
