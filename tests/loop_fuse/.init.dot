digraph "CFG for 'init' function" {
	label="CFG for 'init' function";

	Node0x560bdf31b3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %smax = call i32 @llvm.smax.i32(i32 %n, i32 0)\l  %wide.trip.count = zext i32 %smax to i64\l  br label %for.cond\l}"];
	Node0x560bdf31b3a0 -> Node0x560bdf31bd10;
	Node0x560bdf31bd10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]\l  %exitcond = icmp ne i64 %indvars.iv, %wide.trip.count\l  br i1 %exitcond, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x560bdf31bd10:s0 -> Node0x560bdf31c140;
	Node0x560bdf31bd10:s1 -> Node0x560bdf31c220;
	Node0x560bdf31c140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %0 = shl nuw nsw i64 %indvars.iv, 1\l  %arrayidx = getelementptr inbounds i32, i32* %c, i64 %indvars.iv\l  %1 = trunc i64 %0 to i32\l  store i32 %1, i32* %arrayidx, align 4\l  %2 = trunc i64 %indvars.iv to i32\l  %mul = mul nsw i32 %2, %2\l  %arrayidx2 = getelementptr inbounds i32, i32* %b, i64 %indvars.iv\l  store i32 %mul, i32* %arrayidx2, align 4\l  br label %for.inc\l}"];
	Node0x560bdf31c140 -> Node0x560bdf31bec0;
	Node0x560bdf31bec0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  br label %for.cond, !llvm.loop !4\l}"];
	Node0x560bdf31bec0 -> Node0x560bdf31bd10;
	Node0x560bdf31c220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end:                                          \l  br label %for.cond4\l}"];
	Node0x560bdf31c220 -> Node0x560bdf31d730;
	Node0x560bdf31d730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond4:                                        \l  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.inc14 ], [ 0, %for.end ]\l  %exitcond11 = icmp ne i64 %indvars.iv8, 10\l  br i1 %exitcond11, label %for.body6, label %for.end30\l|{<s0>T|<s1>F}}"];
	Node0x560bdf31d730:s0 -> Node0x560bdf31da60;
	Node0x560bdf31d730:s1 -> Node0x560bdf31dae0;
	Node0x560bdf31da60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body6:                                        \l  %arrayidx8 = getelementptr inbounds i32, i32* %b, i64 %indvars.iv8\l  %i = load i32, i32* %arrayidx8, align 4\l  %arrayidx10 = getelementptr inbounds i32, i32* %c, i64 %indvars.iv8\l  %i1 = load i32, i32* %arrayidx10, align 4\l  %add11 = add nsw i32 %i, %i1\l  %arrayidx13 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv8\l  store i32 %add11, i32* %arrayidx13, align 4\l  br label %for.body20\l}"];
	Node0x560bdf31da60 -> Node0x560bdf31e460;
	Node0x560bdf31d8a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc14:                                        \l  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1\l  br label %for.cond4, !llvm.loop !6\l}"];
	Node0x560bdf31d8a0 -> Node0x560bdf31d730;
	Node0x560bdf31e460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body20:                                       \l  %arrayidx22 = getelementptr inbounds i32, i32* %b, i64 %indvars.iv8\l  %i2 = load i32, i32* %arrayidx22, align 4\l  %arrayidx24 = getelementptr inbounds i32, i32* %c, i64 %indvars.iv8\l  %i3 = load i32, i32* %arrayidx24, align 4\l  %add25 = add nsw i32 %i2, %i3\l  %arrayidx27 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv8\l  store i32 %add25, i32* %arrayidx27, align 4\l  br label %for.inc14\l}"];
	Node0x560bdf31e460 -> Node0x560bdf31d8a0;
	Node0x560bdf31dae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end30:                                        \l  %wide.trip.count19 = zext i32 %smax to i64\l  br label %for.cond32\l}"];
	Node0x560bdf31dae0 -> Node0x560bdf31ed40;
	Node0x560bdf31ed40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond32:                                       \l  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.inc42 ], [ 0, %for.end30 ]\l  %exitcond20 = icmp ne i64 %indvars.iv16, %wide.trip.count19\l  br i1 %exitcond20, label %for.body34, label %for.end44\l|{<s0>T|<s1>F}}"];
	Node0x560bdf31ed40:s0 -> Node0x560bdf31f070;
	Node0x560bdf31ed40:s1 -> Node0x560bdf31f0c0;
	Node0x560bdf31f070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body34:                                       \l  %arrayidx36 = getelementptr inbounds i32, i32* %b, i64 %indvars.iv16\l  %i4 = load i32, i32* %arrayidx36, align 4\l  %arrayidx38 = getelementptr inbounds i32, i32* %c, i64 %indvars.iv16\l  %i5 = load i32, i32* %arrayidx38, align 4\l  %add39 = add nsw i32 %i4, %i5\l  %arrayidx41 = getelementptr inbounds i32, i32* %a, i64 %indvars.iv16\l  store i32 %add39, i32* %arrayidx41, align 4\l  br label %for.inc42\l}"];
	Node0x560bdf31f070 -> Node0x560bdf31eeb0;
	Node0x560bdf31eeb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc42:                                        \l  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1\l  br label %for.cond32, !llvm.loop !7\l}"];
	Node0x560bdf31eeb0 -> Node0x560bdf31ed40;
	Node0x560bdf31f0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end44:                                        \l  ret void\l}"];
}
