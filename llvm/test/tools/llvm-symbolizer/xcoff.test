
RUN: llvm-symbolizer --obj=%p/Inputs/xcoff-dwarf.o 'DATA 0x60' \
RUN:    'DATA 0x61' 'DATA 0x64' 'DATA 0X68' 'DATA 0x90' 'DATA 0x94' \
RUN:    'DATA 0X98' | FileCheck %s

CHECK: bss_global
CHECK-NEXT: 96 4
CHECK-NEXT: ??:?
CHECK-EMPTY:

CHECK: bss_global
CHECK-NEXT: 96 4
CHECK-NEXT: ??:?
CHECK-EMPTY:

CHECK: data_global
CHECK-NEXT: 100 4
CHECK-NEXT: ??:?
CHECK-EMPTY:

CHECK: str
CHECK-NEXT: 104 4
CHECK-NEXT: ??:?
CHECK-EMPTY:

FIXME: fix the wrong size 152
CHECK: f()::function_global
CHECK-NEXT: 144 152
CHECK-NEXT: ??:?
CHECK-EMPTY:

FIXME: fix the wrong size 152
CHECK: beta
CHECK-NEXT: 148 152
CHECK-NEXT: ??:?
CHECK-EMPTY:

FIXME: fix the wrong size 152
CHECK: alpha
CHECK-NEXT: 152 152
CHECK-NEXT: ??:?
CHECK-EMPTY:

The case is from `test/tools/llvm-symbolizer/data-location.yaml`, compiled with:
 clang++ -g -gdwarf-3 -O3 t.cpp  -nostdlib  -target powerpc-aix-ibm-xcoff \
   -mllvm -ppc-global-merge=false

     cat t.cpp
     1	int bss_global;
     2	int data_global = 2;
     3
     4	const char* str =
     5	  "12345678";
     6
     7	int* f() {
     8	  static int function_global;
     9	  return &function_global;
    10	}
    11
    12	static int alpha;
    13	static int beta;
    14	int *f(bool b) { return beta ? &alpha : &beta; }
    15
