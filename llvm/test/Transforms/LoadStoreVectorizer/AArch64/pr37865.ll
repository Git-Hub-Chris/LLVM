; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -mtriple=aarch64 -passes=load-store-vectorizer -S %s | FileCheck %s

define i32 @load_cycle(ptr %x) {
; CHECK-LABEL: define i32 @load_cycle(
; CHECK-SAME: ptr [[X:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[GEP_X_1:%.*]] = getelementptr inbounds [2 x i32], ptr [[X]], i32 0, i32 1
; CHECK-NEXT:    [[LOAD_X_1:%.*]] = load i32, ptr [[GEP_X_1]], align 4
; CHECK-NEXT:    [[REM:%.*]] = urem i32 [[LOAD_X_1]], 1
; CHECK-NEXT:    [[GEP_X_2:%.*]] = getelementptr inbounds [2 x i32], ptr [[X]], i32 [[REM]], i32 0
; CHECK-NEXT:    [[LOAD_X_2:%.*]] = load i32, ptr [[GEP_X_2]], align 4
; CHECK-NEXT:    [[RET:%.*]] = add i32 [[LOAD_X_2]], [[LOAD_X_1]]
; CHECK-NEXT:    ret i32 [[RET]]
;
entry:
  %gep.x.1 = getelementptr inbounds [2 x i32], ptr %x, i32 0, i32 1
  %load.x.1 = load i32, ptr %gep.x.1
  %rem = urem i32 %load.x.1, 1
  %gep.x.2 = getelementptr inbounds [2 x i32], ptr %x, i32 %rem, i32 0
  %load.x.2 = load i32, ptr %gep.x.2
  %ret = add i32 %load.x.2, %load.x.1
  ret i32 %ret
}
