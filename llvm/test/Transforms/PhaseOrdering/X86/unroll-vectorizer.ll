; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt < %s -O3 -S | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%Zip = type { { ptr, ptr }, { [32 x i8], { i64, i64 } } }

define void @foo(ptr %a, <32 x i8> %_0) #0 {
; CHECK-LABEL: define void @foo(
; CHECK-SAME: ptr nocapture writeonly [[A:%.*]], <32 x i8> [[_0:%.*]]) local_unnamed_addr #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  start:
; CHECK-NEXT:    [[_34I:%.*]] = getelementptr i8, ptr [[A]], i64 1
; CHECK-NEXT:    [[Z_SROA_0_16_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 0
; CHECK-NEXT:    store i8 [[Z_SROA_0_16_VEC_EXTRACT]], ptr [[A]], align 1
; CHECK-NEXT:    [[_34I_1:%.*]] = getelementptr i8, ptr [[A]], i64 2
; CHECK-NEXT:    [[Z_SROA_0_17_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 1
; CHECK-NEXT:    store i8 [[Z_SROA_0_17_VEC_EXTRACT]], ptr [[_34I]], align 1
; CHECK-NEXT:    [[_34I_2:%.*]] = getelementptr i8, ptr [[A]], i64 3
; CHECK-NEXT:    [[Z_SROA_0_18_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 2
; CHECK-NEXT:    store i8 [[Z_SROA_0_18_VEC_EXTRACT]], ptr [[_34I_1]], align 1
; CHECK-NEXT:    [[_34I_3:%.*]] = getelementptr i8, ptr [[A]], i64 4
; CHECK-NEXT:    [[Z_SROA_0_19_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 3
; CHECK-NEXT:    store i8 [[Z_SROA_0_19_VEC_EXTRACT]], ptr [[_34I_2]], align 1
; CHECK-NEXT:    [[_34I_4:%.*]] = getelementptr i8, ptr [[A]], i64 5
; CHECK-NEXT:    [[Z_SROA_0_20_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 4
; CHECK-NEXT:    store i8 [[Z_SROA_0_20_VEC_EXTRACT]], ptr [[_34I_3]], align 1
; CHECK-NEXT:    [[_34I_5:%.*]] = getelementptr i8, ptr [[A]], i64 6
; CHECK-NEXT:    [[Z_SROA_0_21_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 5
; CHECK-NEXT:    store i8 [[Z_SROA_0_21_VEC_EXTRACT]], ptr [[_34I_4]], align 1
; CHECK-NEXT:    [[_34I_6:%.*]] = getelementptr i8, ptr [[A]], i64 7
; CHECK-NEXT:    [[Z_SROA_0_22_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 6
; CHECK-NEXT:    store i8 [[Z_SROA_0_22_VEC_EXTRACT]], ptr [[_34I_5]], align 1
; CHECK-NEXT:    [[_34I_7:%.*]] = getelementptr i8, ptr [[A]], i64 8
; CHECK-NEXT:    [[Z_SROA_0_23_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 7
; CHECK-NEXT:    store i8 [[Z_SROA_0_23_VEC_EXTRACT]], ptr [[_34I_6]], align 1
; CHECK-NEXT:    [[_34I_8:%.*]] = getelementptr i8, ptr [[A]], i64 9
; CHECK-NEXT:    [[Z_SROA_0_24_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 8
; CHECK-NEXT:    store i8 [[Z_SROA_0_24_VEC_EXTRACT]], ptr [[_34I_7]], align 1
; CHECK-NEXT:    [[_34I_9:%.*]] = getelementptr i8, ptr [[A]], i64 10
; CHECK-NEXT:    [[Z_SROA_0_25_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 9
; CHECK-NEXT:    store i8 [[Z_SROA_0_25_VEC_EXTRACT]], ptr [[_34I_8]], align 1
; CHECK-NEXT:    [[_34I_10:%.*]] = getelementptr i8, ptr [[A]], i64 11
; CHECK-NEXT:    [[Z_SROA_0_26_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 10
; CHECK-NEXT:    store i8 [[Z_SROA_0_26_VEC_EXTRACT]], ptr [[_34I_9]], align 1
; CHECK-NEXT:    [[_34I_11:%.*]] = getelementptr i8, ptr [[A]], i64 12
; CHECK-NEXT:    [[Z_SROA_0_27_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 11
; CHECK-NEXT:    store i8 [[Z_SROA_0_27_VEC_EXTRACT]], ptr [[_34I_10]], align 1
; CHECK-NEXT:    [[_34I_12:%.*]] = getelementptr i8, ptr [[A]], i64 13
; CHECK-NEXT:    [[Z_SROA_0_28_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 12
; CHECK-NEXT:    store i8 [[Z_SROA_0_28_VEC_EXTRACT]], ptr [[_34I_11]], align 1
; CHECK-NEXT:    [[_34I_13:%.*]] = getelementptr i8, ptr [[A]], i64 14
; CHECK-NEXT:    [[Z_SROA_0_29_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 13
; CHECK-NEXT:    store i8 [[Z_SROA_0_29_VEC_EXTRACT]], ptr [[_34I_12]], align 1
; CHECK-NEXT:    [[_34I_14:%.*]] = getelementptr i8, ptr [[A]], i64 15
; CHECK-NEXT:    [[Z_SROA_0_30_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 14
; CHECK-NEXT:    store i8 [[Z_SROA_0_30_VEC_EXTRACT]], ptr [[_34I_13]], align 1
; CHECK-NEXT:    [[_34I_15:%.*]] = getelementptr i8, ptr [[A]], i64 16
; CHECK-NEXT:    [[Z_SROA_0_31_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 15
; CHECK-NEXT:    store i8 [[Z_SROA_0_31_VEC_EXTRACT]], ptr [[_34I_14]], align 1
; CHECK-NEXT:    [[_34I_16:%.*]] = getelementptr i8, ptr [[A]], i64 17
; CHECK-NEXT:    [[Z_SROA_0_32_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 16
; CHECK-NEXT:    store i8 [[Z_SROA_0_32_VEC_EXTRACT]], ptr [[_34I_15]], align 1
; CHECK-NEXT:    [[_34I_17:%.*]] = getelementptr i8, ptr [[A]], i64 18
; CHECK-NEXT:    [[Z_SROA_0_33_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 17
; CHECK-NEXT:    store i8 [[Z_SROA_0_33_VEC_EXTRACT]], ptr [[_34I_16]], align 1
; CHECK-NEXT:    [[_34I_18:%.*]] = getelementptr i8, ptr [[A]], i64 19
; CHECK-NEXT:    [[Z_SROA_0_34_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 18
; CHECK-NEXT:    store i8 [[Z_SROA_0_34_VEC_EXTRACT]], ptr [[_34I_17]], align 1
; CHECK-NEXT:    [[_34I_19:%.*]] = getelementptr i8, ptr [[A]], i64 20
; CHECK-NEXT:    [[Z_SROA_0_35_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 19
; CHECK-NEXT:    store i8 [[Z_SROA_0_35_VEC_EXTRACT]], ptr [[_34I_18]], align 1
; CHECK-NEXT:    [[_34I_20:%.*]] = getelementptr i8, ptr [[A]], i64 21
; CHECK-NEXT:    [[Z_SROA_0_36_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 20
; CHECK-NEXT:    store i8 [[Z_SROA_0_36_VEC_EXTRACT]], ptr [[_34I_19]], align 1
; CHECK-NEXT:    [[_34I_21:%.*]] = getelementptr i8, ptr [[A]], i64 22
; CHECK-NEXT:    [[Z_SROA_0_37_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 21
; CHECK-NEXT:    store i8 [[Z_SROA_0_37_VEC_EXTRACT]], ptr [[_34I_20]], align 1
; CHECK-NEXT:    [[_34I_22:%.*]] = getelementptr i8, ptr [[A]], i64 23
; CHECK-NEXT:    [[Z_SROA_0_38_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 22
; CHECK-NEXT:    store i8 [[Z_SROA_0_38_VEC_EXTRACT]], ptr [[_34I_21]], align 1
; CHECK-NEXT:    [[_34I_23:%.*]] = getelementptr i8, ptr [[A]], i64 24
; CHECK-NEXT:    [[Z_SROA_0_39_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 23
; CHECK-NEXT:    store i8 [[Z_SROA_0_39_VEC_EXTRACT]], ptr [[_34I_22]], align 1
; CHECK-NEXT:    [[_34I_24:%.*]] = getelementptr i8, ptr [[A]], i64 25
; CHECK-NEXT:    [[Z_SROA_0_40_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 24
; CHECK-NEXT:    store i8 [[Z_SROA_0_40_VEC_EXTRACT]], ptr [[_34I_23]], align 1
; CHECK-NEXT:    [[_34I_25:%.*]] = getelementptr i8, ptr [[A]], i64 26
; CHECK-NEXT:    [[Z_SROA_0_41_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 25
; CHECK-NEXT:    store i8 [[Z_SROA_0_41_VEC_EXTRACT]], ptr [[_34I_24]], align 1
; CHECK-NEXT:    [[_34I_26:%.*]] = getelementptr i8, ptr [[A]], i64 27
; CHECK-NEXT:    [[Z_SROA_0_42_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 26
; CHECK-NEXT:    store i8 [[Z_SROA_0_42_VEC_EXTRACT]], ptr [[_34I_25]], align 1
; CHECK-NEXT:    [[_34I_27:%.*]] = getelementptr i8, ptr [[A]], i64 28
; CHECK-NEXT:    [[Z_SROA_0_43_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 27
; CHECK-NEXT:    store i8 [[Z_SROA_0_43_VEC_EXTRACT]], ptr [[_34I_26]], align 1
; CHECK-NEXT:    [[_34I_28:%.*]] = getelementptr i8, ptr [[A]], i64 29
; CHECK-NEXT:    [[Z_SROA_0_44_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 28
; CHECK-NEXT:    store i8 [[Z_SROA_0_44_VEC_EXTRACT]], ptr [[_34I_27]], align 1
; CHECK-NEXT:    [[_34I_29:%.*]] = getelementptr i8, ptr [[A]], i64 30
; CHECK-NEXT:    [[Z_SROA_0_45_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 29
; CHECK-NEXT:    store i8 [[Z_SROA_0_45_VEC_EXTRACT]], ptr [[_34I_28]], align 1
; CHECK-NEXT:    [[_34I_30:%.*]] = getelementptr i8, ptr [[A]], i64 31
; CHECK-NEXT:    [[Z_SROA_0_46_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 30
; CHECK-NEXT:    store i8 [[Z_SROA_0_46_VEC_EXTRACT]], ptr [[_34I_29]], align 1
; CHECK-NEXT:    [[Z_SROA_0_47_VEC_EXTRACT:%.*]] = extractelement <32 x i8> [[_0]], i64 31
; CHECK-NEXT:    store i8 [[Z_SROA_0_47_VEC_EXTRACT]], ptr [[_34I_30]], align 1
; CHECK-NEXT:    ret void
;
start:
  %z = alloca %Zip, align 8
  %sroa_1 = getelementptr i8, ptr %z, i64 16
  store <32 x i8> %_0, ptr %sroa_1, align 8
  %len_ = getelementptr i8, ptr %z, i64 56
  store i64 32, ptr %len_, align 8
  %_1 = getelementptr %Zip, ptr %z, i64 0, i32 1, i32 1
  %_2 = getelementptr %Zip, ptr %z, i64 0, i32 1, i32 1, i32 1
  %len = load i64, ptr %_2, align 8
  %_10 = getelementptr %Zip, ptr %z, i64 0, i32 1
  br label %body

body:                                             ; preds = %body, %start
  %_34 = phi ptr [ %_34i, %body ], [ %a, %start ]
  %idx = phi i64 [ %idx_, %body ], [ 0, %start ]
  %_34i = getelementptr i8, ptr %_34, i64 1
  %idx_ = add i64 %idx, 1
  store i64 0, ptr %_1, align 8
  %_24 = getelementptr i8, ptr %_10, i64 %idx
  %_18 = load i8, ptr %_24, align 1
  store i8 %_18, ptr %_34, align 1
  %_6 = icmp eq i64 %len, %idx_
  br i1 %_6, label %exit, label %body

exit:                                             ; preds = %body
  ret void
}

attributes #0 = { "target-cpu"="znver3" }
