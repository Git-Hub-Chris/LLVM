; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

define i64 @foo(i64 %a, i1 %b) {
; CHECK-LABEL: define i64 @foo(
; CHECK-SAME: i64 [[A:%.*]], i1 [[B:%.*]]) {
; CHECK-NEXT:    [[C:%.*]] = sext i1 [[B]] to i64
; CHECK-NEXT:    [[D:%.*]] = xor i64 [[C]], [[A]]
; CHECK-NEXT:    [[R:%.*]] = sub i64 [[D]], [[C]]
; CHECK-NEXT:    ret i64 [[R]]
;
  %c = sext i1 %b to i64
  %d = xor i64 %a, %c
  %r = sub i64 %d, %c
  ret i64 %r
}

define i64 @bar(i64 %a, i1 %b) {
; CHECK-LABEL: define i64 @bar(
; CHECK-SAME: i64 [[A:%.*]], i1 [[B:%.*]]) {
; CHECK-NEXT:    [[C:%.*]] = sext i1 [[B]] to i64
; CHECK-NEXT:    [[D:%.*]] = xor i64 [[C]], [[A]]
; CHECK-NEXT:    [[R:%.*]] = sub i64 [[C]], [[D]]
; CHECK-NEXT:    ret i64 [[R]]
;
  %c = sext i1 %b to i64
  %d = xor i64 %a, %c
  %r = sub i64 %c, %d
  ret i64 %r
}

define  i64 @absdiff(i64 %0, i64 %1) {
; CHECK-LABEL: define i64 @absdiff(
; CHECK-SAME: i64 [[TMP0:%.*]], i64 [[TMP1:%.*]]) {
; CHECK-NEXT:    [[TMP3:%.*]] = icmp ult i64 [[TMP0]], [[TMP1]]
; CHECK-NEXT:    [[TMP4:%.*]] = sub i64 [[TMP0]], [[TMP1]]
; CHECK-NEXT:    [[TMP5:%.*]] = sub i64 0, [[TMP4]]
; CHECK-NEXT:    [[TMP6:%.*]] = select i1 [[TMP3]], i64 [[TMP5]], i64 [[TMP4]]
; CHECK-NEXT:    ret i64 [[TMP6]]
;
  %3 = icmp ult i64 %0, %1
  %4 = sext i1 %3 to i64
  %5 = sub i64 %0, %1
  %6 = xor i64 %5, %4
  %7 = sub i64 %6, %4
  ret i64 %7
}
