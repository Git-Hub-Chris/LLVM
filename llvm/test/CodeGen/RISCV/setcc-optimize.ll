; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=riscv32 < %s | FileCheck %s

define i1 @eq(i32 %a, i32 %b, i32 %c, i32 %d) {
; CHECK-LABEL: eq:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sltu a0, a0, a1
; CHECK-NEXT:    xori a0, a0, 1
; CHECK-NEXT:    ret
  %p = icmp uge i32 %a, %b
  %s = select i1 %p, i32 %c, i32 %d
  %r = icmp eq i32 %s, %c
  ret i1 %r
}

define i1 @eq_inv(i32 %a, i32 %b, i32 %c, i32 %d) {
; CHECK-LABEL: eq_inv:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sltu a0, a0, a1
; CHECK-NEXT:    ret
  %p = icmp uge i32 %a, %b
  %s = select i1 %p, i32 %d, i32 %c
  %r = icmp eq i32 %s, %c
  ret i1 %r
}

define i1 @ne(i32 %a, i32 %b, i32 %c, i32 %d) {
; CHECK-LABEL: ne:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sltu a0, a0, a1
; CHECK-NEXT:    ret
  %p = icmp uge i32 %a, %b
  %s = select i1 %p, i32 %c, i32 %d
  %r = icmp ne i32 %s, %c
  ret i1 %r
}

define i1 @ne_inv(i32 %a, i32 %b, i32 %c, i32 %d) {
; CHECK-LABEL: ne_inv:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sltu a0, a1, a0
; CHECK-NEXT:    ret
  %p = icmp ugt i32 %a, %b
  %s = select i1 %p, i32 %d, i32 %c
  %r = icmp ne i32 %s, %c
  ret i1 %r
}
