# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -mtriple=riscv64 -mcpu=veyron-v1 -riscv-disable-early-ifcvt=false -riscv-force-early-ifcvt=true -stress-early-ifcvt=true \
# RUN: -run-pass=early-ifcvt -simplify-mir  -o - %s | FileCheck %s

---
name: blt
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: blt
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   [[SLT:%[0-9]+]]:gpr = SLT %x_i, %k
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC %add1, [[SLT]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN %add2, [[SLT]]
  ; CHECK-NEXT:   %res:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   SD %res, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BLT %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:gpr = PHI %add1, %bb.2, %add2, %bb.3
    SD %res, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...

---
name: bltu
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: bltu
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   [[SLTU:%[0-9]+]]:gpr = SLTU %x_i, %k
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC %add1, [[SLTU]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN %add2, [[SLTU]]
  ; CHECK-NEXT:   %res:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   SD %res, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BLTU %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:gpr = PHI %add1, %bb.2, %add2, %bb.3
    SD %res, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...

---
name: beq
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: beq
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   [[XOR:%[0-9]+]]:gpr = XOR %x_i, %k
  ; CHECK-NEXT:   [[SLTIU:%[0-9]+]]:gpr = SLTIU [[XOR]], 1
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC %add1, [[SLTIU]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN %add2, [[SLTIU]]
  ; CHECK-NEXT:   %res:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   SD %res, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BEQ %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:gpr = PHI %add1, %bb.2, %add2, %bb.3
    SD %res, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...

---
name: bne
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: bne
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   [[XOR:%[0-9]+]]:gpr = XOR %x_i, %k
  ; CHECK-NEXT:   [[SLTU:%[0-9]+]]:gpr = SLTU $x0, [[XOR]]
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC %add1, [[SLTU]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN %add2, [[SLTU]]
  ; CHECK-NEXT:   %res:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   SD %res, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BNE %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:gpr = PHI %add1, %bb.2, %add2, %bb.3
    SD %res, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...

---
name: bge
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: bge
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   [[SLT:%[0-9]+]]:gpr = SLT %x_i, %k
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC %add2, [[SLT]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN %add1, [[SLT]]
  ; CHECK-NEXT:   %res:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   SD %res, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BGE %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:gpr = PHI %add1, %bb.2, %add2, %bb.3
    SD %res, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...

---
name: bgeu
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: bgeu
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   [[SLTU:%[0-9]+]]:gpr = SLTU %x_i, %k
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC %add2, [[SLTU]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN %add1, [[SLTU]]
  ; CHECK-NEXT:   %res:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   SD %res, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BGEU %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:gpr = PHI %add1, %bb.2, %add2, %bb.3
    SD %res, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...

---
name: needs_rc_copy_fpr64
tracksRegLiveness: true
body: |
  ; CHECK-LABEL: name: needs_rc_copy_fpr64
  ; CHECK: bb.0:
  ; CHECK-NEXT:   liveins: $x10, $x11, $x12
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %x:gpr = COPY $x10
  ; CHECK-NEXT:   %n:gpr = COPY $x11
  ; CHECK-NEXT:   %k:gpr = COPY $x12
  ; CHECK-NEXT:   %zero:gpr = COPY $x0
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1:
  ; CHECK-NEXT:   successors: %bb.1, %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.1
  ; CHECK-NEXT:   %x_i_addr:gpr = ADD %x, %i
  ; CHECK-NEXT:   %x_i:gpr = LD %x_i_addr, 0
  ; CHECK-NEXT:   %add1:gpr = ADDI %x_i, 1
  ; CHECK-NEXT:   %itofp1:fpr64 = nofpexcept FCVT_D_W %add1, 0
  ; CHECK-NEXT:   %add2:gpr = ADDI %x_i, 2
  ; CHECK-NEXT:   %itofp2:fpr64 = nofpexcept FCVT_D_W %add2, 0
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gpr = COPY %itofp1
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gpr = COPY %itofp2
  ; CHECK-NEXT:   [[SLT:%[0-9]+]]:gpr = SLT %x_i, %k
  ; CHECK-NEXT:   [[VT_MASKC:%[0-9]+]]:gpr = VT_MASKC [[COPY]], [[SLT]]
  ; CHECK-NEXT:   [[VT_MASKCN:%[0-9]+]]:gpr = VT_MASKCN [[COPY1]], [[SLT]]
  ; CHECK-NEXT:   [[OR:%[0-9]+]]:gpr = OR [[VT_MASKC]], [[VT_MASKCN]]
  ; CHECK-NEXT:   %res:fpr64 = COPY [[OR]]
  ; CHECK-NEXT:   %fptoi:gpr = nofpexcept FCVT_W_D %res, 1
  ; CHECK-NEXT:   SD %fptoi, %x_i, 0
  ; CHECK-NEXT:   %i_inc:gpr = ADDI %i, 1
  ; CHECK-NEXT:   BEQ %i_inc, %n, %bb.5
  ; CHECK-NEXT:   PseudoBR %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5:
  ; CHECK-NEXT:   PseudoRET
  bb.0:
    successors: %bb.1
    liveins: $x10, $x11, $x12

    %x:gpr = COPY $x10
    %n:gpr = COPY $x11
    %k:gpr = COPY $x12
    %zero:gpr = COPY $x0
    PseudoBR %bb.1

  bb.1:
    successors: %bb.2, %bb.3

    %i:gpr = PHI %zero, %bb.0, %i_inc, %bb.4
    %x_i_addr:gpr = ADD %x, %i
    %x_i:gpr = LD %x_i_addr, 0
    BLT %x_i, %k, %bb.2
    PseudoBR %bb.3

  bb.2:
    successors: %bb.4

    %add1:gpr = ADDI %x_i, 1
    %itofp1:fpr64 = nofpexcept FCVT_D_W %add1, 0
    PseudoBR %bb.4

  bb.3:
    successors: %bb.4

    %add2:gpr = ADDI %x_i, 2
    %itofp2:fpr64 = nofpexcept FCVT_D_W %add2, 0
    PseudoBR %bb.4

  bb.4:
    successors: %bb.1, %bb.5

    %res:fpr64 = PHI %itofp1, %bb.2, %itofp2, %bb.3
    %fptoi:gpr = nofpexcept FCVT_W_D %res, 1
    SD %fptoi, %x_i, 0
    %i_inc:gpr = ADDI %i, 1
    BEQ %i_inc, %n, %bb.5
    PseudoBR %bb.1

  bb.5:
    PseudoRET
...
