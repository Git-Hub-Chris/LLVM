; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+zalrsc -verify-machineinstrs < %s | FileCheck %s

define i64 @lr_d_none(ptr %src) {
; CHECK-LABEL: lr_d_none:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lr.d a0, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.lr.d(ptr %src, i32 0)
  ret i64 %ret
}

define i64 @lr_d_aq(ptr %src) {
; CHECK-LABEL: lr_d_aq:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lr.d.aq a0, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.lr.d(ptr %src, i32 1)
  ret i64 %ret
}

define i64 @lr_d_rl(ptr %src) {
; CHECK-LABEL: lr_d_rl:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lr.d.rl a0, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.lr.d(ptr %src, i32 2)
  ret i64 %ret
}

define i64 @lr_d_aq_rl(ptr %src) {
; CHECK-LABEL: lr_d_aq_rl:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lr.d.aqrl a0, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.lr.d(ptr %src, i32 3)
  ret i64 %ret
}

define i64 @sc_d_none(i64 %v, ptr %src) {
; CHECK-LABEL: sc_d_none:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sc.d a0, a1, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.sc.d(i64 %v, ptr %src, i32 0)
  ret i64 %ret
}

define i64 @sc_d_aq(i64 %v, ptr %src) {
; CHECK-LABEL: sc_d_aq:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sc.d.aq a0, a1, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.sc.d(i64 %v, ptr %src, i32 1)
  ret i64 %ret
}

define i64 @sc_d_rl(i64 %v, ptr %src) {
; CHECK-LABEL: sc_d_rl:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sc.d.rl a0, a1, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.sc.d(i64 %v, ptr %src, i32 2)
  ret i64 %ret
}

define i64 @sc_d_aq_rl(i64 %v, ptr %src) {
; CHECK-LABEL: sc_d_aq_rl:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sc.d.aqrl a0, a1, (a0)
; CHECK-NEXT:    ret
  %ret = call i64 @llvm.riscv.sc.d(i64 %v, ptr %src, i32 3)
  ret i64 %ret
}
