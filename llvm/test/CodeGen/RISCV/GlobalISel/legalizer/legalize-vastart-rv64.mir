# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv64 -run-pass=legalizer %s -o - | FileCheck --check-prefix=RV64 %s

--- |
  source_filename = "test.ll"
  target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n32:64-S128"
  target triple = "riscv64"

  declare void @llvm.va_start(ptr) #0

  define void @test_va_start(ptr %0, ptr %1, ptr %2, ptr %3, ptr %4, ptr %5, ptr %6, ptr %7, ...) {
    %va = alloca ptr
    call void @llvm.va_start(ptr %va)
    ret void
  }

  attributes #0 = { nocallback nofree nosync nounwind willreturn }

...
---
name:            test_va_start
tracksRegLiveness: true
fixedStack:
  - { id: 0, size: 8, alignment: 16, isImmutable: true }
stack:
  - { id: 0, name: va, size: 8, alignment: 8 }
machineFunctionInfo:
  varArgsFrameIndex: -1
  varArgsSaveSize: 0
body:             |
  bb.1 (%ir-block.8):
    liveins: $x10, $x11, $x12, $x13, $x14, $x15, $x16, $x17

    ; RV64-LABEL: name: test_va_start
    ; RV64: liveins: $x10, $x11, $x12, $x13, $x14, $x15, $x16, $x17
    ; RV64-NEXT: {{  $}}
    ; RV64-NEXT: [[FRAME_INDEX:%[0-9]+]]:_(p0) = G_FRAME_INDEX %stack.0.va
    ; RV64-NEXT: [[FRAME_INDEX1:%[0-9]+]]:_(p0) = G_FRAME_INDEX %fixed-stack.0
    ; RV64-NEXT: G_STORE [[FRAME_INDEX1]](p0), [[FRAME_INDEX]](p0) :: (store (s64) into %ir.va)
    ; RV64-NEXT: PseudoRET
    %8:_(p0) = G_FRAME_INDEX %stack.0.va
    G_VASTART %8(p0) :: (store (s64) into %ir.va)
    PseudoRET

...
