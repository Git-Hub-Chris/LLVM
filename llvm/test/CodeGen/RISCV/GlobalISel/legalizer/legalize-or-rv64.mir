# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv64 -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s
---
name:            or_i8
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i8
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[TRUNC]], [[TRUNC1]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[OR]](s32)
    ; CHECK-NEXT: $x10 = COPY [[ANYEXT]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $x10
    %1:_(s64) = COPY $x11
    %2:_(s8) = G_TRUNC %0(s64)
    %3:_(s8) = G_TRUNC %1(s64)
    %4:_(s8) = G_OR %2, %3
    %5:_(s64) = G_ANYEXT %4(s8)
    $x10 = COPY %5(s64)
    PseudoRET implicit $x10

...
---
name:            or_i15
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i15
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[TRUNC]], [[TRUNC1]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[OR]](s32)
    ; CHECK-NEXT: $x10 = COPY [[ANYEXT]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $x10
    %1:_(s64) = COPY $x11
    %2:_(s15) = G_TRUNC %0(s64)
    %3:_(s15) = G_TRUNC %1(s64)
    %4:_(s15) = G_OR %2, %3
    %5:_(s64) = G_ANYEXT %4(s15)
    $x10 = COPY %5(s64)
    PseudoRET implicit $x10

...
---
name:            or_i16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i16
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[TRUNC]], [[TRUNC1]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[OR]](s32)
    ; CHECK-NEXT: $x10 = COPY [[ANYEXT]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $x10
    %1:_(s64) = COPY $x11
    %2:_(s16) = G_TRUNC %0(s64)
    %3:_(s16) = G_TRUNC %1(s64)
    %4:_(s16) = G_OR %2, %3
    %5:_(s64) = G_ANYEXT %4(s16)
    $x10 = COPY %5(s64)
    PseudoRET implicit $x10

...
---
name:            or_i32
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i32
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[TRUNC:%[0-9]+]]:_(s32) = G_TRUNC [[COPY]](s64)
    ; CHECK-NEXT: [[TRUNC1:%[0-9]+]]:_(s32) = G_TRUNC [[COPY1]](s64)
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s32) = G_OR [[TRUNC]], [[TRUNC1]]
    ; CHECK-NEXT: [[ANYEXT:%[0-9]+]]:_(s64) = G_ANYEXT [[OR]](s32)
    ; CHECK-NEXT: $x10 = COPY [[ANYEXT]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $x10
    %1:_(s64) = COPY $x11
    %2:_(s32) = G_TRUNC %0(s64)
    %3:_(s32) = G_TRUNC %1(s64)
    %4:_(s32) = G_OR %2, %3
    %5:_(s64) = G_ANYEXT %4(s32)
    $x10 = COPY %5(s64)
    PseudoRET implicit $x10

...
---
name:            or_i64
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i64
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $x10
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $x11
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s64) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $x10 = COPY [[OR]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10
    %0:_(s64) = COPY $x10
    %1:_(s64) = COPY $x11
    %2:_(s64) = G_OR %0, %1
    $x10 = COPY %2(s64)
    PseudoRET implicit $x10

...
---
name:            or_i72
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i72
    ; CHECK: %x00:_(s64) = COPY $x10
    ; CHECK-NEXT: %x01:_(s64) = COPY $x11
    ; CHECK-NEXT: %y00:_(s64) = COPY $x12
    ; CHECK-NEXT: %y01:_(s64) = COPY $x13
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s64) = G_OR %x00, %y00
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(s64) = G_OR %x01, %y01
    ; CHECK-NEXT: $x10 = COPY [[OR]](s64)
    ; CHECK-NEXT: $x11 = COPY [[OR1]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10, implicit $x11
    %x00:_(s64) = COPY $x10
    %x01:_(s64) = COPY $x11
    %y00:_(s64) = COPY $x12
    %y01:_(s64) = COPY $x13
    %x0:_(s128) = G_MERGE_VALUES %x00(s64), %x01
    %y0:_(s128) = G_MERGE_VALUES %y00(s64), %y01
    %x:_(s72) = G_TRUNC %x0(s128)
    %y:_(s72) = G_TRUNC %y0(s128)
    %z:_(s72) = G_OR %x, %y
    %z0:_(s128) = G_ANYEXT %z(s72)
    %z00:_(s64), %z01:_(s64) = G_UNMERGE_VALUES %z0(s128)
    $x10 = COPY %z00(s64)
    $x11 = COPY %z01(s64)
    PseudoRET implicit $x10, implicit $x11

...
---
name:            or_i128
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i128
    ; CHECK: %lo1:_(s64) = COPY $x10
    ; CHECK-NEXT: %hi1:_(s64) = COPY $x11
    ; CHECK-NEXT: %lo2:_(s64) = COPY $x12
    ; CHECK-NEXT: %hi2:_(s64) = COPY $x13
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s64) = G_OR %lo1, %lo2
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(s64) = G_OR %hi1, %hi2
    ; CHECK-NEXT: $x10 = COPY [[OR]](s64)
    ; CHECK-NEXT: $x11 = COPY [[OR1]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10, implicit $x11
    %lo1:_(s64) = COPY $x10
    %hi1:_(s64) = COPY $x11
    %lo2:_(s64) = COPY $x12
    %hi2:_(s64) = COPY $x13
    %x1:_(s128) = G_MERGE_VALUES %lo1(s64), %hi1(s64)
    %x2:_(s128) = G_MERGE_VALUES %lo2(s64), %hi2(s64)
    %y:_(s128) = G_OR %x1, %x2
    %loy:_(s64), %hiy:_(s64) = G_UNMERGE_VALUES %y(s128)
    $x10 = COPY %loy(s64)
    $x11 = COPY %hiy(s64)
    PseudoRET implicit $x10, implicit $x11

...
---
name:            or_i192
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: or_i192
    ; CHECK: %lo1:_(s64) = COPY $x10
    ; CHECK-NEXT: %mid1:_(s64) = COPY $x11
    ; CHECK-NEXT: %hi1:_(s64) = COPY $x12
    ; CHECK-NEXT: %lo2:_(s64) = COPY $x13
    ; CHECK-NEXT: %mid2:_(s64) = COPY $x14
    ; CHECK-NEXT: %hi2:_(s64) = COPY $x15
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(s64) = G_OR %lo1, %lo2
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:_(s64) = G_OR %mid1, %mid2
    ; CHECK-NEXT: [[OR2:%[0-9]+]]:_(s64) = G_OR %hi1, %hi2
    ; CHECK-NEXT: $x10 = COPY [[OR]](s64)
    ; CHECK-NEXT: $x11 = COPY [[OR1]](s64)
    ; CHECK-NEXT: $x12 = COPY [[OR2]](s64)
    ; CHECK-NEXT: PseudoRET implicit $x10, implicit $x11, implicit $x12
    %lo1:_(s64) = COPY $x10
    %mid1:_(s64) = COPY $x11
    %hi1:_(s64) = COPY $x12
    %lo2:_(s64) = COPY $x13
    %mid2:_(s64) = COPY $x14
    %hi2:_(s64) = COPY $x15
    %x1:_(s192) = G_MERGE_VALUES %lo1(s64), %mid1(s64), %hi1(s64)
    %x2:_(s192) = G_MERGE_VALUES %lo2(s64), %mid2(s64), %hi2(s64)
    %y:_(s192) = G_OR %x1, %x2
    %lo:_(s64), %mid:_(s64), %hi:_(s64) = G_UNMERGE_VALUES %y(s192)
    $x10 = COPY %lo(s64)
    $x11 = COPY %mid(s64)
    $x12 = COPY %hi(s64)
    PseudoRET implicit $x10, implicit $x11, implicit $x12

...
---
name:  test_nxv1s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 1 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 1 x s8>)
    %0:_(<vscale x 1 x s8>) = COPY $v8
    %1:_(<vscale x 1 x s8>) = COPY $v9
    %2:_(<vscale x 1 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv2s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 2 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 2 x s8>)
    %0:_(<vscale x 2 x s8>) = COPY $v8
    %1:_(<vscale x 2 x s8>) = COPY $v9
    %2:_(<vscale x 2 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 4 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 4 x s8>)
    %0:_(<vscale x 4 x s8>) = COPY $v8
    %1:_(<vscale x 4 x s8>) = COPY $v9
    %2:_(<vscale x 4 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 8 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 8 x s8>)
    %0:_(<vscale x 8 x s8>) = COPY $v8
    %1:_(<vscale x 8 x s8>) = COPY $v9
    %2:_(<vscale x 8 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv16s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv16s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 16 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 16 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 16 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 16 x s8>)
    %0:_(<vscale x 16 x s8>) = COPY $v8
    %1:_(<vscale x 16 x s8>) = COPY $v9
    %2:_(<vscale x 16 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv32s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv32s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 32 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 32 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 32 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 32 x s8>)
    %0:_(<vscale x 32 x s8>) = COPY $v8
    %1:_(<vscale x 32 x s8>) = COPY $v9
    %2:_(<vscale x 32 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv64s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv64s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 64 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 64 x s8>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 64 x s8>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 64 x s8>)
    %0:_(<vscale x 64 x s8>) = COPY $v8
    %1:_(<vscale x 64 x s8>) = COPY $v9
    %2:_(<vscale x 64 x s8>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv1s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s16>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 1 x s16>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 1 x s16>)
    %0:_(<vscale x 1 x s16>) = COPY $v8
    %1:_(<vscale x 1 x s16>) = COPY $v9
    %2:_(<vscale x 1 x s16>) = G_OR %0, %1
    PseudoRET implicit %2
...
---
name:  test_nxv2s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s16>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 2 x s16>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 2 x s16>)
    %0:_(<vscale x 2 x s16>) = COPY $v8
    %1:_(<vscale x 2 x s16>) = COPY $v9
    %2:_(<vscale x 2 x s16>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s16>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 4 x s16>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 4 x s16>)
    %0:_(<vscale x 4 x s16>) = COPY $v8
    %1:_(<vscale x 4 x s16>) = COPY $v9
    %2:_(<vscale x 4 x s16>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s16>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 8 x s16>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 8 x s16>)
    %0:_(<vscale x 8 x s16>) = COPY $v8
    %1:_(<vscale x 8 x s16>) = COPY $v9
    %2:_(<vscale x 8 x s16>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv16s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv16s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 16 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 16 x s16>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 16 x s16>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 16 x s16>)
    %0:_(<vscale x 16 x s16>) = COPY $v8
    %1:_(<vscale x 16 x s16>) = COPY $v9
    %2:_(<vscale x 16 x s16>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv32s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv32s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 32 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 32 x s16>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 32 x s16>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 32 x s16>)
    %0:_(<vscale x 32 x s16>) = COPY $v8
    %1:_(<vscale x 32 x s16>) = COPY $v9
    %2:_(<vscale x 32 x s16>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv1s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s32>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 1 x s32>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 1 x s32>)
    %0:_(<vscale x 1 x s32>) = COPY $v8
    %1:_(<vscale x 1 x s32>) = COPY $v9
    %2:_(<vscale x 1 x s32>) = G_OR %0, %1
    PseudoRET implicit %2
...
---
name:  test_nxv2s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s32>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 2 x s32>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 2 x s32>)
    %0:_(<vscale x 2 x s32>) = COPY $v8
    %1:_(<vscale x 2 x s32>) = COPY $v9
    %2:_(<vscale x 2 x s32>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s32>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 4 x s32>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 4 x s32>)
    %0:_(<vscale x 4 x s32>) = COPY $v8
    %1:_(<vscale x 4 x s32>) = COPY $v9
    %2:_(<vscale x 4 x s32>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s32>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 8 x s32>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 8 x s32>)
    %0:_(<vscale x 8 x s32>) = COPY $v8
    %1:_(<vscale x 8 x s32>) = COPY $v9
    %2:_(<vscale x 8 x s32>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv16s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv16s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 16 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 16 x s32>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 16 x s32>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 16 x s32>)
    %0:_(<vscale x 16 x s32>) = COPY $v8
    %1:_(<vscale x 16 x s32>) = COPY $v9
    %2:_(<vscale x 16 x s32>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv1s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s64>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 1 x s64>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 1 x s64>)
    %0:_(<vscale x 1 x s64>) = COPY $v8
    %1:_(<vscale x 1 x s64>) = COPY $v9
    %2:_(<vscale x 1 x s64>) = G_OR %0, %1
    PseudoRET implicit %2
...
---
name:  test_nxv2s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s64>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 2 x s64>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 2 x s64>)
    %0:_(<vscale x 2 x s64>) = COPY $v8
    %1:_(<vscale x 2 x s64>) = COPY $v9
    %2:_(<vscale x 2 x s64>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s64>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 4 x s64>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 4 x s64>)
    %0:_(<vscale x 4 x s64>) = COPY $v8
    %1:_(<vscale x 4 x s64>) = COPY $v9
    %2:_(<vscale x 4 x s64>) = G_OR %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s64>) = COPY $v9
    ; CHECK-NEXT: [[OR:%[0-9]+]]:_(<vscale x 8 x s64>) = G_OR [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[OR]](<vscale x 8 x s64>)
    %0:_(<vscale x 8 x s64>) = COPY $v8
    %1:_(<vscale x 8 x s64>) = COPY $v9
    %2:_(<vscale x 8 x s64>) = G_OR %0, %1
    PseudoRET implicit %2

...
