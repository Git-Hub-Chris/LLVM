# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv32 -run-pass=legalizer %s -o - | FileCheck %s
# RUN: llc -mtriple=riscv64 -run-pass=legalizer %s -o - | FileCheck %s
---
name:  test_nxv1s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 1 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 1 x s8>)
    %0:_(<vscale x 1 x s8>) = COPY $v8
    %1:_(<vscale x 1 x s8>) = COPY $v9
    %2:_(<vscale x 1 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv2s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 2 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 2 x s8>)
    %0:_(<vscale x 2 x s8>) = COPY $v8
    %1:_(<vscale x 2 x s8>) = COPY $v9
    %2:_(<vscale x 2 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 4 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 4 x s8>)
    %0:_(<vscale x 4 x s8>) = COPY $v8
    %1:_(<vscale x 4 x s8>) = COPY $v9
    %2:_(<vscale x 4 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 8 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 8 x s8>)
    %0:_(<vscale x 8 x s8>) = COPY $v8
    %1:_(<vscale x 8 x s8>) = COPY $v9
    %2:_(<vscale x 8 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv16s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv16s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 16 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 16 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 16 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 16 x s8>)
    %0:_(<vscale x 16 x s8>) = COPY $v8
    %1:_(<vscale x 16 x s8>) = COPY $v9
    %2:_(<vscale x 16 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv32s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv32s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 32 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 32 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 32 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 32 x s8>)
    %0:_(<vscale x 32 x s8>) = COPY $v8
    %1:_(<vscale x 32 x s8>) = COPY $v9
    %2:_(<vscale x 32 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv64s8
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv64s8
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 64 x s8>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 64 x s8>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 64 x s8>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 64 x s8>)
    %0:_(<vscale x 64 x s8>) = COPY $v8
    %1:_(<vscale x 64 x s8>) = COPY $v9
    %2:_(<vscale x 64 x s8>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv1s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s16>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 1 x s16>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 1 x s16>)
    %0:_(<vscale x 1 x s16>) = COPY $v8
    %1:_(<vscale x 1 x s16>) = COPY $v9
    %2:_(<vscale x 1 x s16>) = G_AND %0, %1
    PseudoRET implicit %2
...
---
name:  test_nxv2s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s16>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 2 x s16>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 2 x s16>)
    %0:_(<vscale x 2 x s16>) = COPY $v8
    %1:_(<vscale x 2 x s16>) = COPY $v9
    %2:_(<vscale x 2 x s16>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s16>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 4 x s16>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 4 x s16>)
    %0:_(<vscale x 4 x s16>) = COPY $v8
    %1:_(<vscale x 4 x s16>) = COPY $v9
    %2:_(<vscale x 4 x s16>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s16>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 8 x s16>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 8 x s16>)
    %0:_(<vscale x 8 x s16>) = COPY $v8
    %1:_(<vscale x 8 x s16>) = COPY $v9
    %2:_(<vscale x 8 x s16>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv16s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv16s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 16 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 16 x s16>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 16 x s16>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 16 x s16>)
    %0:_(<vscale x 16 x s16>) = COPY $v8
    %1:_(<vscale x 16 x s16>) = COPY $v9
    %2:_(<vscale x 16 x s16>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv32s16
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv32s16
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 32 x s16>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 32 x s16>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 32 x s16>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 32 x s16>)
    %0:_(<vscale x 32 x s16>) = COPY $v8
    %1:_(<vscale x 32 x s16>) = COPY $v9
    %2:_(<vscale x 32 x s16>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv1s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s32>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 1 x s32>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 1 x s32>)
    %0:_(<vscale x 1 x s32>) = COPY $v8
    %1:_(<vscale x 1 x s32>) = COPY $v9
    %2:_(<vscale x 1 x s32>) = G_AND %0, %1
    PseudoRET implicit %2
...
---
name:  test_nxv2s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s32>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 2 x s32>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 2 x s32>)
    %0:_(<vscale x 2 x s32>) = COPY $v8
    %1:_(<vscale x 2 x s32>) = COPY $v9
    %2:_(<vscale x 2 x s32>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s32>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 4 x s32>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 4 x s32>)
    %0:_(<vscale x 4 x s32>) = COPY $v8
    %1:_(<vscale x 4 x s32>) = COPY $v9
    %2:_(<vscale x 4 x s32>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s32>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 8 x s32>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 8 x s32>)
    %0:_(<vscale x 8 x s32>) = COPY $v8
    %1:_(<vscale x 8 x s32>) = COPY $v9
    %2:_(<vscale x 8 x s32>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv16s32
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv16s32
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 16 x s32>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 16 x s32>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 16 x s32>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 16 x s32>)
    %0:_(<vscale x 16 x s32>) = COPY $v8
    %1:_(<vscale x 16 x s32>) = COPY $v9
    %2:_(<vscale x 16 x s32>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv1s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv1s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 1 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 1 x s64>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 1 x s64>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 1 x s64>)
    %0:_(<vscale x 1 x s64>) = COPY $v8
    %1:_(<vscale x 1 x s64>) = COPY $v9
    %2:_(<vscale x 1 x s64>) = G_AND %0, %1
    PseudoRET implicit %2
...
---
name:  test_nxv2s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv2s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 2 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 2 x s64>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 2 x s64>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 2 x s64>)
    %0:_(<vscale x 2 x s64>) = COPY $v8
    %1:_(<vscale x 2 x s64>) = COPY $v9
    %2:_(<vscale x 2 x s64>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv4s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv4s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 4 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 4 x s64>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 4 x s64>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 4 x s64>)
    %0:_(<vscale x 4 x s64>) = COPY $v8
    %1:_(<vscale x 4 x s64>) = COPY $v9
    %2:_(<vscale x 4 x s64>) = G_AND %0, %1
    PseudoRET implicit %2

...
---
name:  test_nxv8s64
body:   |
  bb.0.entry:
    ; CHECK-LABEL: name: test_nxv8s64
    ; CHECK: [[COPY:%[0-9]+]]:_(<vscale x 8 x s64>) = COPY $v8
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(<vscale x 8 x s64>) = COPY $v9
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(<vscale x 8 x s64>) = G_AND [[COPY]], [[COPY1]]
    ; CHECK-NEXT: PseudoRET implicit [[AND]](<vscale x 8 x s64>)
    %0:_(<vscale x 8 x s64>) = COPY $v8
    %1:_(<vscale x 8 x s64>) = COPY $v9
    %2:_(<vscale x 8 x s64>) = G_AND %0, %1
    PseudoRET implicit %2

...

