# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=riscv32 -mattr=+v -run-pass=instruction-select -simplify-mir -verify-machineinstrs %s -o - | FileCheck -check-prefix=RV32I %s
# RUN: llc -mtriple=riscv64 -mattr=+v -run-pass=instruction-select -simplify-mir -verify-machineinstrs %s -o - | FileCheck -check-prefix=RV64I %s
---
name:            vstore_nx1i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx1i8
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE8_V_MF8 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 1 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx1i8
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE8_V_MF8 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 1 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 1 x s8>) = COPY $v8
    G_STORE %1(<vscale x 1 x s8>), %0(p0) :: (store (<vscale x 1 x s8>))
    PseudoRET

...
---
name:            vstore_nx2i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i8
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE8_V_MF4 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 2 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i8
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE8_V_MF4 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 2 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s8>) = COPY $v8
    G_STORE %1(<vscale x 2 x s8>), %0(p0) :: (store (<vscale x 2 x s8>))
    PseudoRET

...
---
name:            vstore_nx4i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i8
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE8_V_MF2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 4 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i8
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE8_V_MF2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 4 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s8>) = COPY $v8
    G_STORE %1(<vscale x 4 x s8>), %0(p0) :: (store (<vscale x 4 x s8>))
    PseudoRET

...
---
name:            vstore_nx8i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx8i8
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE8_V_M1 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 8 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx8i8
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE8_V_M1 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 8 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 8 x s8>) = COPY $v8
    G_STORE %1(<vscale x 8 x s8>), %0(p0) :: (store (<vscale x 8 x s8>))
    PseudoRET

...
---
name:            vstore_nx16i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx16i8
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i8
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s8>) = COPY $v8m2
    G_STORE %1(<vscale x 16 x s8>), %0(p0) :: (store (<vscale x 16 x s8>))
    PseudoRET

...
---
name:            vstore_nx32i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m4

    ; RV32I-LABEL: name: vstore_nx32i8
    ; RV32I: liveins: $x10, $v8m4
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV32I-NEXT: PseudoVSE8_V_M4 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 32 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx32i8
    ; RV64I: liveins: $x10, $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV64I-NEXT: PseudoVSE8_V_M4 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 32 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 32 x s8>) = COPY $v8m4
    G_STORE %1(<vscale x 32 x s8>), %0(p0) :: (store (<vscale x 32 x s8>))
    PseudoRET

...
---
name:            vstore_nx64i8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m8

    ; RV32I-LABEL: name: vstore_nx64i8
    ; RV32I: liveins: $x10, $v8m8
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV32I-NEXT: PseudoVSE8_V_M8 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 64 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx64i8
    ; RV64I: liveins: $x10, $v8m8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV64I-NEXT: PseudoVSE8_V_M8 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 64 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 64 x s8>) = COPY $v8m8
    G_STORE %1(<vscale x 64 x s8>), %0(p0) :: (store (<vscale x 64 x s8>))
    PseudoRET

...
---
name:            vstore_nx1i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx1i16
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_MF4 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 1 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx1i16
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_MF4 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 1 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 1 x s16>) = COPY $v8
    G_STORE %1(<vscale x 1 x s16>), %0(p0) :: (store (<vscale x 1 x s16>))
    PseudoRET

...
---
name:            vstore_nx2i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i16
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_MF2 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 2 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i16
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_MF2 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 2 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s16>) = COPY $v8
    G_STORE %1(<vscale x 2 x s16>), %0(p0) :: (store (<vscale x 2 x s16>))
    PseudoRET

...
---
name:            vstore_nx4i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i16
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i16
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $v8
    G_STORE %1(<vscale x 4 x s16>), %0(p0) :: (store (<vscale x 4 x s16>))
    PseudoRET

...
---
name:            vstore_nx8i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx8i16
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE16_V_M2 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 8 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx8i16
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE16_V_M2 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 8 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 8 x s16>) = COPY $v8m2
    G_STORE %1(<vscale x 8 x s16>), %0(p0) :: (store (<vscale x 8 x s16>))
    PseudoRET

...
---
name:            vstore_nx16i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m4

    ; RV32I-LABEL: name: vstore_nx16i16
    ; RV32I: liveins: $x10, $v8m4
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV32I-NEXT: PseudoVSE16_V_M4 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 16 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i16
    ; RV64I: liveins: $x10, $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV64I-NEXT: PseudoVSE16_V_M4 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 16 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s16>) = COPY $v8m4
    G_STORE %1(<vscale x 16 x s16>), %0(p0) :: (store (<vscale x 16 x s16>))
    PseudoRET

...
---
name:            vstore_nx32i16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m8

    ; RV32I-LABEL: name: vstore_nx32i16
    ; RV32I: liveins: $x10, $v8m8
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV32I-NEXT: PseudoVSE16_V_M8 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 32 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx32i16
    ; RV64I: liveins: $x10, $v8m8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV64I-NEXT: PseudoVSE16_V_M8 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 32 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 32 x s16>) = COPY $v8m8
    G_STORE %1(<vscale x 32 x s16>), %0(p0) :: (store (<vscale x 32 x s16>))
    PseudoRET

...
---
name:            vstore_nx1i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx1i32
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_MF2 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 1 x s32>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx1i32
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE32_V_MF2 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 1 x s32>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 1 x s32>) = COPY $v8
    G_STORE %1(<vscale x 1 x s32>), %0(p0) :: (store (<vscale x 1 x s32>))
    PseudoRET

...
---
name:            vstore_nx2i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i32
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i32
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $v8
    G_STORE %1(<vscale x 2 x s32>), %0(p0) :: (store (<vscale x 2 x s32>))
    PseudoRET

...
---
name:            vstore_nx4i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx4i32
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE32_V_M2 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 4 x s32>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i32
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE32_V_M2 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 4 x s32>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s32>) = COPY $v8m2
    G_STORE %1(<vscale x 4 x s32>), %0(p0) :: (store (<vscale x 4 x s32>))
    PseudoRET

...
---
name:            vstore_nx8i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m4

    ; RV32I-LABEL: name: vstore_nx8i32
    ; RV32I: liveins: $x10, $v8m4
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV32I-NEXT: PseudoVSE32_V_M4 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 8 x s32>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx8i32
    ; RV64I: liveins: $x10, $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV64I-NEXT: PseudoVSE32_V_M4 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 8 x s32>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 8 x s32>) = COPY $v8m4
    G_STORE %1(<vscale x 8 x s32>), %0(p0) :: (store (<vscale x 8 x s32>))
    PseudoRET

...
---
name:            vstore_nx16i32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m8

    ; RV32I-LABEL: name: vstore_nx16i32
    ; RV32I: liveins: $x10, $v8m8
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV32I-NEXT: PseudoVSE32_V_M8 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 16 x s32>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i32
    ; RV64I: liveins: $x10, $v8m8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV64I-NEXT: PseudoVSE32_V_M8 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 16 x s32>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s32>) = COPY $v8m8
    G_STORE %1(<vscale x 16 x s32>), %0(p0) :: (store (<vscale x 16 x s32>))
    PseudoRET

...
---
name:            vstore_nx1i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx1i64
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE64_V_M1 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 1 x s64>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx1i64
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE64_V_M1 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 1 x s64>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 1 x s64>) = COPY $v8
    G_STORE %1(<vscale x 1 x s64>), %0(p0) :: (store (<vscale x 1 x s64>))
    PseudoRET

...
---
name:            vstore_nx2i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx2i64
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i64
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s64>) = COPY $v8m2
    G_STORE %1(<vscale x 2 x s64>), %0(p0) :: (store (<vscale x 2 x s64>))
    PseudoRET

...
---
name:            vstore_nx4i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m4

    ; RV32I-LABEL: name: vstore_nx4i64
    ; RV32I: liveins: $x10, $v8m4
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV32I-NEXT: PseudoVSE64_V_M4 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 4 x s64>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i64
    ; RV64I: liveins: $x10, $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV64I-NEXT: PseudoVSE64_V_M4 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 4 x s64>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s64>) = COPY $v8m4
    G_STORE %1(<vscale x 4 x s64>), %0(p0) :: (store (<vscale x 4 x s64>))
    PseudoRET

...
---
name:            vstore_nx8i64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m8

    ; RV32I-LABEL: name: vstore_nx8i64
    ; RV32I: liveins: $x10, $v8m8
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV32I-NEXT: PseudoVSE64_V_M8 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 8 x s64>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx8i64
    ; RV64I: liveins: $x10, $v8m8
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m8
    ; RV64I-NEXT: PseudoVSE64_V_M8 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 8 x s64>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 8 x s64>) = COPY $v8m8
    G_STORE %1(<vscale x 8 x s64>), %0(p0) :: (store (<vscale x 8 x s64>))
    PseudoRET

...
---
name:            vstore_nx16i8_align1
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx16i8_align1
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 1)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i8_align1
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 1)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s8>) = COPY $v8m2
    G_STORE %1(<vscale x 16 x s8>), %0(p0) :: (store (<vscale x 16 x s8>), align 1)
    PseudoRET

...
---
name:            vstore_nx16i8_align2
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx16i8_align2
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 2)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i8_align2
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 2)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s8>) = COPY $v8m2
    G_STORE %1(<vscale x 16 x s8>), %0(p0) :: (store (<vscale x 16 x s8>), align 2)
    PseudoRET

...
---
name:            vstore_nx16i8_align16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx16i8_align16
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i8_align16
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s8>) = COPY $v8m2
    G_STORE %1(<vscale x 16 x s8>), %0(p0) :: (store (<vscale x 16 x s8>))
    PseudoRET

...
---
name:            vstore_nx16i8_align64
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx16i8_align64
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 64)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx16i8_align64
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 64)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 16 x s8>) = COPY $v8m2
    G_STORE %1(<vscale x 16 x s8>), %0(p0) :: (store (<vscale x 16 x s8>), align 64)
    PseudoRET

...
---
name:            vstore_nx4i16_align1
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i16_align1
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE8_V_M1 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 8 x s8>), align 1)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i16_align1
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE8_V_M1 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 8 x s8>), align 1)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $v8
    %2:vrb(<vscale x 8 x s8>) = G_BITCAST %1(<vscale x 4 x s16>)
    G_STORE %2(<vscale x 8 x s8>), %0(p0) :: (store (<vscale x 8 x s8>), align 1)
    PseudoRET

...
---
name:            vstore_nx4i16_align2
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i16_align2
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>), align 2)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i16_align2
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>), align 2)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $v8
    G_STORE %1(<vscale x 4 x s16>), %0(p0) :: (store (<vscale x 4 x s16>), align 2)
    PseudoRET

...
---
name:            vstore_nx4i16_align4
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i16_align4
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>), align 4)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i16_align4
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>), align 4)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $v8
    G_STORE %1(<vscale x 4 x s16>), %0(p0) :: (store (<vscale x 4 x s16>), align 4)
    PseudoRET

...
---
name:            vstore_nx4i16_align8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i16_align8
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i16_align8
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $v8
    G_STORE %1(<vscale x 4 x s16>), %0(p0) :: (store (<vscale x 4 x s16>))
    PseudoRET

...
---
name:            vstore_nx4i16_align16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx4i16_align16
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>), align 16)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx4i16_align16
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE16_V_M1 [[COPY1]], [[COPY]], -1, 4 /* e16 */ :: (store (<vscale x 4 x s16>), align 16)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 4 x s16>) = COPY $v8
    G_STORE %1(<vscale x 4 x s16>), %0(p0) :: (store (<vscale x 4 x s16>), align 16)
    PseudoRET

...
---
name:            vstore_nx2i32_align2
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i32_align2
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE8_V_M1 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 8 x s8>), align 2)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i32_align2
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE8_V_M1 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 8 x s8>), align 2)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $v8
    %2:vrb(<vscale x 8 x s8>) = G_BITCAST %1(<vscale x 2 x s32>)
    G_STORE %2(<vscale x 8 x s8>), %0(p0) :: (store (<vscale x 8 x s8>), align 2)
    PseudoRET

...
---
name:            vstore_nx2i32_align4
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i32_align4
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>), align 4)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i32_align4
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>), align 4)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $v8
    G_STORE %1(<vscale x 2 x s32>), %0(p0) :: (store (<vscale x 2 x s32>), align 4)
    PseudoRET

...
---
name:            vstore_nx2i32_align8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i32_align8
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i32_align8
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $v8
    G_STORE %1(<vscale x 2 x s32>), %0(p0) :: (store (<vscale x 2 x s32>))
    PseudoRET

...
---
name:            vstore_nx2i32_align16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i32_align16
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>), align 16)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i32_align16
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>), align 16)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $v8
    G_STORE %1(<vscale x 2 x s32>), %0(p0) :: (store (<vscale x 2 x s32>), align 16)
    PseudoRET

...
---
name:            vstore_nx2i32_align256
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2i32_align256
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>), align 256)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i32_align256
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x s32>), align 256)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s32>) = COPY $v8
    G_STORE %1(<vscale x 2 x s32>), %0(p0) :: (store (<vscale x 2 x s32>), align 256)
    PseudoRET

...
---
name:            vstore_nx2i64_align4
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx2i64_align4
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 4)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i64_align4
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE8_V_M2 [[COPY1]], [[COPY]], -1, 3 /* e8 */ :: (store (<vscale x 16 x s8>), align 4)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s64>) = COPY $v8m2
    %2:vrb(<vscale x 16 x s8>) = G_BITCAST %1(<vscale x 2 x s64>)
    G_STORE %2(<vscale x 16 x s8>), %0(p0) :: (store (<vscale x 16 x s8>), align 4)
    PseudoRET

...
---
name:            vstore_nx2i64_align8
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx2i64_align8
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>), align 8)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i64_align8
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>), align 8)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s64>) = COPY $v8m2
    G_STORE %1(<vscale x 2 x s64>), %0(p0) :: (store (<vscale x 2 x s64>), align 8)
    PseudoRET

...
---
name:            vstore_nx2i64_align16
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx2i64_align16
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i64_align16
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s64>) = COPY $v8m2
    G_STORE %1(<vscale x 2 x s64>), %0(p0) :: (store (<vscale x 2 x s64>))
    PseudoRET

...
---
name:            vstore_nx2i64_align32
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m2

    ; RV32I-LABEL: name: vstore_nx2i64_align32
    ; RV32I: liveins: $x10, $v8m2
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV32I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>), align 32)
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2i64_align32
    ; RV64I: liveins: $x10, $v8m2
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8m2
    ; RV64I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x s64>), align 32)
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x s64>) = COPY $v8m2
    G_STORE %1(<vscale x 2 x s64>), %0(p0) :: (store (<vscale x 2 x s64>), align 32)
    PseudoRET

...
---
name:            vstore_nx1ptr
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx1ptr
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_MF2 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 1 x p0>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx1ptr
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV64I-NEXT: PseudoVSE64_V_M1 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 1 x p0>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 1 x p0>) = COPY $v8
    G_STORE %1(<vscale x 1 x p0>), %0(p0) :: (store (<vscale x 1 x p0>))
    PseudoRET

...
---
name:            vstore_nx2ptr
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $v8, $x10

    ; RV32I-LABEL: name: vstore_nx2ptr
    ; RV32I: liveins: $v8, $x10
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vr = COPY $v8
    ; RV32I-NEXT: PseudoVSE32_V_M1 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 2 x p0>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx2ptr
    ; RV64I: liveins: $v8, $x10
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm2 = COPY $v8
    ; RV64I-NEXT: PseudoVSE64_V_M2 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 2 x p0>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 2 x p0>) = COPY $v8
    G_STORE %1(<vscale x 2 x p0>), %0(p0) :: (store (<vscale x 2 x p0>))
    PseudoRET

...
---
name:            vstore_nx8ptr
legalized:       true
regBankSelected: true
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x10, $v8m4

    ; RV32I-LABEL: name: vstore_nx8ptr
    ; RV32I: liveins: $x10, $v8m4
    ; RV32I-NEXT: {{  $}}
    ; RV32I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV32I-NEXT: [[COPY1:%[0-9]+]]:vrm4 = COPY $v8m4
    ; RV32I-NEXT: PseudoVSE32_V_M4 [[COPY1]], [[COPY]], -1, 5 /* e32 */ :: (store (<vscale x 8 x p0>))
    ; RV32I-NEXT: PseudoRET
    ;
    ; RV64I-LABEL: name: vstore_nx8ptr
    ; RV64I: liveins: $x10, $v8m4
    ; RV64I-NEXT: {{  $}}
    ; RV64I-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $x10
    ; RV64I-NEXT: [[COPY1:%[0-9]+]]:vrm8 = COPY $v8m4
    ; RV64I-NEXT: PseudoVSE64_V_M8 [[COPY1]], [[COPY]], -1, 6 /* e64 */ :: (store (<vscale x 8 x p0>))
    ; RV64I-NEXT: PseudoRET
    %0:gprb(p0) = COPY $x10
    %1:vrb(<vscale x 8 x p0>) = COPY $v8m4
    G_STORE %1(<vscale x 8 x p0>), %0(p0) :: (store (<vscale x 8 x p0>))
    PseudoRET

...
