; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=riscv32 -riscv-enable-load-remat-aggressive=false | FileCheck %s --check-prefix=NOPROP
; RUN: llc < %s -mtriple=riscv32 -riscv-enable-load-remat-aggressive=true | FileCheck %s --check-prefix=PROP
define void @start() {
; NOPROP-LABEL: start:
; NOPROP:       # %bb.0: # %entry
; NOPROP-NEXT:    addi sp, sp, -16
; NOPROP-NEXT:    .cfi_def_cfa_offset 16
; NOPROP-NEXT:    sw ra, 12(sp) # 4-byte Folded Spill
; NOPROP-NEXT:    .cfi_offset ra, -4
; NOPROP-NEXT:    addi a0, sp, 8
; NOPROP-NEXT:    addi a1, sp, 4
; NOPROP-NEXT:    mv a2, sp
; NOPROP-NEXT:    call init_var@plt
; NOPROP-NEXT:    lw a0, 4(sp)
; NOPROP-NEXT:    lw a1, 8(sp)
; NOPROP-NEXT:    call chain@plt
; NOPROP-NEXT:    lw a1, 0(sp)
; NOPROP-NEXT:    mv a2, a0
; NOPROP-NEXT:    mv a0, a1
; NOPROP-NEXT:    mv a1, a2
; NOPROP-NEXT:    call chain@plt
; NOPROP-NEXT:    lw ra, 12(sp) # 4-byte Folded Reload
; NOPROP-NEXT:    addi sp, sp, 16
; NOPROP-NEXT:    ret
;
; PROP-LABEL: start:
; PROP:       # %bb.0: # %entry
; PROP-NEXT:    addi sp, sp, -16
; PROP-NEXT:    .cfi_def_cfa_offset 16
; PROP-NEXT:    sw ra, 12(sp) # 4-byte Folded Spill
; PROP-NEXT:    .cfi_offset ra, -4
; PROP-NEXT:    addi a0, sp, 8
; PROP-NEXT:    addi a1, sp, 4
; PROP-NEXT:    mv a2, sp
; PROP-NEXT:    call init_var@plt
; PROP-NEXT:    lw a0, 4(sp)
; PROP-NEXT:    lw a1, 8(sp)
; PROP-NEXT:    call chain@plt
; PROP-NEXT:    mv a1, a0
; PROP-NEXT:    lw a0, 0(sp)
; PROP-NEXT:    call chain@plt
; PROP-NEXT:    lw ra, 12(sp) # 4-byte Folded Reload
; PROP-NEXT:    addi sp, sp, 16
; PROP-NEXT:    ret
entry:
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  call void @init_var(ptr %a, ptr %b, ptr %c)
  %0 = load i32, ptr %b, align 4
  %1 = load i32, ptr %a, align 4
  %call = call i32 @chain(i32 %0, i32 %1)
  %2 = load i32, ptr %c, align 4
  %call1 = call i32 @chain(i32 %2, i32 %call)
  ret void
}

declare void @init_var(ptr, ptr, ptr, ptr)

declare i32 @chain(i32, i32)

