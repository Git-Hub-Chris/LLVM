; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes='infer-alignment' -mcpu=corei7 -mtriple=x86_64-linux -S < %s  | FileCheck %s

$globalArrayAS0 = comdat any
$globalArrayAS1 = comdat any
@globalArrayAS0 = linkonce_odr hidden addrspace(0) global [4096 x i8] undef, comdat, align 16
@globalArrayAS1 = linkonce_odr hidden addrspace(1) global [4096 x i8] undef, comdat, align 16


; Function Attrs: alwaysinline convergent mustprogress nounwind
define amdgpu_kernel void @infer_AS10(i32 %idx) unnamed_addr align 2 {
; CHECK-LABEL: define amdgpu_kernel void @infer_AS10(
; CHECK-SAME: i32 [[IDX:%.*]]) unnamed_addr #[[ATTR0:[0-9]+]] align 2 {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[MUL32_I:%.*]] = shl nuw nsw i32 [[IDX]], 8
; CHECK-NEXT:    [[ADD36_I:%.*]] = add nuw nsw i32 [[MUL32_I]], 1024
; CHECK-NEXT:    [[IDXPROM37_I21:%.*]] = zext i32 [[ADD36_I]] to i64
; CHECK-NEXT:    [[ARRAYIDX38_I22:%.*]] = getelementptr inbounds float, ptr addrspacecast (ptr addrspace(1) @globalArrayAS1 to ptr), i64 [[IDXPROM37_I21]]
; CHECK-NEXT:    [[L1:%.*]] = load float, ptr [[ARRAYIDX38_I22]], align 16
; CHECK-NEXT:    ret void
;
entry:
  %mul32.i = shl nuw nsw i32 %idx, 8
  %add36.i = add nuw nsw i32 %mul32.i, 1024
  %idxprom37.i21 = zext i32 %add36.i to i64
  %arrayidx38.i22 = getelementptr inbounds float, ptr addrspacecast (ptr addrspace(1) @globalArrayAS1 to ptr), i64 %idxprom37.i21
  %l1 = load float, ptr  %arrayidx38.i22, align 4
  ret void
}

