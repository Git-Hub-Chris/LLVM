; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=loongarch32 --mattr=+lsx < %s | FileCheck %s --check-prefix=LA32
; RUN: llc --mtriple=loongarch64 --mattr=+lsx < %s | FileCheck %s --check-prefix=LA64

define dso_local { float, double } @test1() {
; LA32-LABEL: test1:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1280
; LA32-NEXT:    vldi $vr1, -1024
; LA32-NEXT:    ret
;
; LA64-LABEL: test1:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1280
; LA64-NEXT:    vldi $vr1, -1024
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.0000000000, double 2.0000000000 }
}

define dso_local { float, double } @test2() {
; LA32-LABEL: test2:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1279
; LA32-NEXT:    vldi $vr1, -1023
; LA32-NEXT:    ret
;
; LA64-LABEL: test2:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1279
; LA64-NEXT:    vldi $vr1, -1023
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.1250000000, double 2.1250000000 }
}

define dso_local { float, double } @test3() {
; LA32-LABEL: test3:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1278
; LA32-NEXT:    vldi $vr1, -1022
; LA32-NEXT:    ret
;
; LA64-LABEL: test3:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1278
; LA64-NEXT:    vldi $vr1, -1022
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.2500000000, double 2.2500000000 }
}

define dso_local { float, double } @test4() {
; LA32-LABEL: test4:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1277
; LA32-NEXT:    vldi $vr1, -1021
; LA32-NEXT:    ret
;
; LA64-LABEL: test4:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1277
; LA64-NEXT:    vldi $vr1, -1021
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.3750000000, double 2.3750000000 }
}

define dso_local { float, double } @test5() {
; LA32-LABEL: test5:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1276
; LA32-NEXT:    vldi $vr1, -1020
; LA32-NEXT:    ret
;
; LA64-LABEL: test5:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1276
; LA64-NEXT:    vldi $vr1, -1020
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.5000000000, double 2.5000000000 }
}

define dso_local { float, double } @test6() {
; LA32-LABEL: test6:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1275
; LA32-NEXT:    vldi $vr1, -1019
; LA32-NEXT:    ret
;
; LA64-LABEL: test6:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1275
; LA64-NEXT:    vldi $vr1, -1019
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.6250000000, double 2.6250000000 }
}

define dso_local { float, double } @test7() {
; LA32-LABEL: test7:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1274
; LA32-NEXT:    vldi $vr1, -1018
; LA32-NEXT:    ret
;
; LA64-LABEL: test7:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1274
; LA64-NEXT:    vldi $vr1, -1018
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.7500000000, double 2.7500000000 }
}

define dso_local { float, double } @test8() {
; LA32-LABEL: test8:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1273
; LA32-NEXT:    vldi $vr1, -1017
; LA32-NEXT:    ret
;
; LA64-LABEL: test8:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1273
; LA64-NEXT:    vldi $vr1, -1017
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 2.8750000000, double 2.8750000000 }
}

define dso_local { float, double } @test9() {
; LA32-LABEL: test9:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1272
; LA32-NEXT:    vldi $vr1, -1016
; LA32-NEXT:    ret
;
; LA64-LABEL: test9:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1272
; LA64-NEXT:    vldi $vr1, -1016
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.0000000000, double 3.0000000000 }
}

define dso_local { float, double } @test10() {
; LA32-LABEL: test10:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1271
; LA32-NEXT:    vldi $vr1, -1015
; LA32-NEXT:    ret
;
; LA64-LABEL: test10:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1271
; LA64-NEXT:    vldi $vr1, -1015
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.1250000000, double 3.1250000000 }
}

define dso_local { float, double } @test11() {
; LA32-LABEL: test11:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1270
; LA32-NEXT:    vldi $vr1, -1014
; LA32-NEXT:    ret
;
; LA64-LABEL: test11:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1270
; LA64-NEXT:    vldi $vr1, -1014
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.2500000000, double 3.2500000000 }
}

define dso_local { float, double } @test12() {
; LA32-LABEL: test12:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1269
; LA32-NEXT:    vldi $vr1, -1013
; LA32-NEXT:    ret
;
; LA64-LABEL: test12:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1269
; LA64-NEXT:    vldi $vr1, -1013
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.3750000000, double 3.3750000000 }
}

define dso_local { float, double } @test13() {
; LA32-LABEL: test13:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1268
; LA32-NEXT:    vldi $vr1, -1012
; LA32-NEXT:    ret
;
; LA64-LABEL: test13:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1268
; LA64-NEXT:    vldi $vr1, -1012
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.5000000000, double 3.5000000000 }
}

define dso_local { float, double } @test14() {
; LA32-LABEL: test14:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1267
; LA32-NEXT:    vldi $vr1, -1011
; LA32-NEXT:    ret
;
; LA64-LABEL: test14:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1267
; LA64-NEXT:    vldi $vr1, -1011
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.6250000000, double 3.6250000000 }
}

define dso_local { float, double } @test15() {
; LA32-LABEL: test15:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1266
; LA32-NEXT:    vldi $vr1, -1010
; LA32-NEXT:    ret
;
; LA64-LABEL: test15:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1266
; LA64-NEXT:    vldi $vr1, -1010
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.7500000000, double 3.7500000000 }
}

define dso_local { float, double } @test16() {
; LA32-LABEL: test16:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1265
; LA32-NEXT:    vldi $vr1, -1009
; LA32-NEXT:    ret
;
; LA64-LABEL: test16:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1265
; LA64-NEXT:    vldi $vr1, -1009
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 3.8750000000, double 3.8750000000 }
}

define dso_local { float, double } @test17() {
; LA32-LABEL: test17:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1264
; LA32-NEXT:    vldi $vr1, -1008
; LA32-NEXT:    ret
;
; LA64-LABEL: test17:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1264
; LA64-NEXT:    vldi $vr1, -1008
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 4.0000000000, double 4.0000000000 }
}

define dso_local { float, double } @test18() {
; LA32-LABEL: test18:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1263
; LA32-NEXT:    vldi $vr1, -1007
; LA32-NEXT:    ret
;
; LA64-LABEL: test18:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1263
; LA64-NEXT:    vldi $vr1, -1007
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 4.2500000000, double 4.2500000000 }
}

define dso_local { float, double } @test19() {
; LA32-LABEL: test19:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1262
; LA32-NEXT:    vldi $vr1, -1006
; LA32-NEXT:    ret
;
; LA64-LABEL: test19:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1262
; LA64-NEXT:    vldi $vr1, -1006
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 4.5000000000, double 4.5000000000 }
}

define dso_local { float, double } @test20() {
; LA32-LABEL: test20:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1261
; LA32-NEXT:    vldi $vr1, -1005
; LA32-NEXT:    ret
;
; LA64-LABEL: test20:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1261
; LA64-NEXT:    vldi $vr1, -1005
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 4.7500000000, double 4.7500000000 }
}

define dso_local { float, double } @test21() {
; LA32-LABEL: test21:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1260
; LA32-NEXT:    vldi $vr1, -1004
; LA32-NEXT:    ret
;
; LA64-LABEL: test21:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1260
; LA64-NEXT:    vldi $vr1, -1004
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 5.0000000000, double 5.0000000000 }
}

define dso_local { float, double } @test22() {
; LA32-LABEL: test22:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1259
; LA32-NEXT:    vldi $vr1, -1003
; LA32-NEXT:    ret
;
; LA64-LABEL: test22:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1259
; LA64-NEXT:    vldi $vr1, -1003
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 5.2500000000, double 5.2500000000 }
}

define dso_local { float, double } @test23() {
; LA32-LABEL: test23:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1258
; LA32-NEXT:    vldi $vr1, -1002
; LA32-NEXT:    ret
;
; LA64-LABEL: test23:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1258
; LA64-NEXT:    vldi $vr1, -1002
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 5.5000000000, double 5.5000000000 }
}

define dso_local { float, double } @test24() {
; LA32-LABEL: test24:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1257
; LA32-NEXT:    vldi $vr1, -1001
; LA32-NEXT:    ret
;
; LA64-LABEL: test24:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1257
; LA64-NEXT:    vldi $vr1, -1001
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 5.7500000000, double 5.7500000000 }
}

define dso_local { float, double } @test25() {
; LA32-LABEL: test25:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1256
; LA32-NEXT:    vldi $vr1, -1000
; LA32-NEXT:    ret
;
; LA64-LABEL: test25:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1256
; LA64-NEXT:    vldi $vr1, -1000
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 6.0000000000, double 6.0000000000 }
}

define dso_local { float, double } @test26() {
; LA32-LABEL: test26:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1255
; LA32-NEXT:    vldi $vr1, -999
; LA32-NEXT:    ret
;
; LA64-LABEL: test26:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1255
; LA64-NEXT:    vldi $vr1, -999
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 6.2500000000, double 6.2500000000 }
}

define dso_local { float, double } @test27() {
; LA32-LABEL: test27:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1254
; LA32-NEXT:    vldi $vr1, -998
; LA32-NEXT:    ret
;
; LA64-LABEL: test27:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1254
; LA64-NEXT:    vldi $vr1, -998
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 6.5000000000, double 6.5000000000 }
}

define dso_local { float, double } @test28() {
; LA32-LABEL: test28:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1253
; LA32-NEXT:    vldi $vr1, -997
; LA32-NEXT:    ret
;
; LA64-LABEL: test28:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1253
; LA64-NEXT:    vldi $vr1, -997
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 6.7500000000, double 6.7500000000 }
}

define dso_local { float, double } @test29() {
; LA32-LABEL: test29:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1252
; LA32-NEXT:    vldi $vr1, -996
; LA32-NEXT:    ret
;
; LA64-LABEL: test29:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1252
; LA64-NEXT:    vldi $vr1, -996
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 7.0000000000, double 7.0000000000 }
}

define dso_local { float, double } @test30() {
; LA32-LABEL: test30:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1251
; LA32-NEXT:    vldi $vr1, -995
; LA32-NEXT:    ret
;
; LA64-LABEL: test30:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1251
; LA64-NEXT:    vldi $vr1, -995
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 7.2500000000, double 7.2500000000 }
}

define dso_local { float, double } @test31() {
; LA32-LABEL: test31:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1250
; LA32-NEXT:    vldi $vr1, -994
; LA32-NEXT:    ret
;
; LA64-LABEL: test31:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1250
; LA64-NEXT:    vldi $vr1, -994
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 7.5000000000, double 7.5000000000 }
}

define dso_local { float, double } @test32() {
; LA32-LABEL: test32:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1249
; LA32-NEXT:    vldi $vr1, -993
; LA32-NEXT:    ret
;
; LA64-LABEL: test32:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1249
; LA64-NEXT:    vldi $vr1, -993
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 7.7500000000, double 7.7500000000 }
}

define dso_local { float, double } @test33() {
; LA32-LABEL: test33:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1248
; LA32-NEXT:    vldi $vr1, -992
; LA32-NEXT:    ret
;
; LA64-LABEL: test33:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1248
; LA64-NEXT:    vldi $vr1, -992
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 8.0000000000, double 8.0000000000 }
}

define dso_local { float, double } @test34() {
; LA32-LABEL: test34:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1247
; LA32-NEXT:    vldi $vr1, -991
; LA32-NEXT:    ret
;
; LA64-LABEL: test34:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1247
; LA64-NEXT:    vldi $vr1, -991
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 8.5000000000, double 8.5000000000 }
}

define dso_local { float, double } @test35() {
; LA32-LABEL: test35:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1246
; LA32-NEXT:    vldi $vr1, -990
; LA32-NEXT:    ret
;
; LA64-LABEL: test35:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1246
; LA64-NEXT:    vldi $vr1, -990
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 9.0000000000, double 9.0000000000 }
}

define dso_local { float, double } @test36() {
; LA32-LABEL: test36:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1245
; LA32-NEXT:    vldi $vr1, -989
; LA32-NEXT:    ret
;
; LA64-LABEL: test36:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1245
; LA64-NEXT:    vldi $vr1, -989
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 9.5000000000, double 9.5000000000 }
}

define dso_local { float, double } @test37() {
; LA32-LABEL: test37:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1244
; LA32-NEXT:    vldi $vr1, -988
; LA32-NEXT:    ret
;
; LA64-LABEL: test37:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1244
; LA64-NEXT:    vldi $vr1, -988
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 10.0000000000, double 10.0000000000 }
}

define dso_local { float, double } @test38() {
; LA32-LABEL: test38:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1243
; LA32-NEXT:    vldi $vr1, -987
; LA32-NEXT:    ret
;
; LA64-LABEL: test38:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1243
; LA64-NEXT:    vldi $vr1, -987
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 10.5000000000, double 10.5000000000 }
}

define dso_local { float, double } @test39() {
; LA32-LABEL: test39:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1242
; LA32-NEXT:    vldi $vr1, -986
; LA32-NEXT:    ret
;
; LA64-LABEL: test39:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1242
; LA64-NEXT:    vldi $vr1, -986
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 11.0000000000, double 11.0000000000 }
}

define dso_local { float, double } @test40() {
; LA32-LABEL: test40:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1241
; LA32-NEXT:    vldi $vr1, -985
; LA32-NEXT:    ret
;
; LA64-LABEL: test40:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1241
; LA64-NEXT:    vldi $vr1, -985
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 11.5000000000, double 11.5000000000 }
}

define dso_local { float, double } @test41() {
; LA32-LABEL: test41:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1240
; LA32-NEXT:    vldi $vr1, -984
; LA32-NEXT:    ret
;
; LA64-LABEL: test41:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1240
; LA64-NEXT:    vldi $vr1, -984
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 12.0000000000, double 12.0000000000 }
}

define dso_local { float, double } @test42() {
; LA32-LABEL: test42:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1239
; LA32-NEXT:    vldi $vr1, -983
; LA32-NEXT:    ret
;
; LA64-LABEL: test42:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1239
; LA64-NEXT:    vldi $vr1, -983
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 12.5000000000, double 12.5000000000 }
}

define dso_local { float, double } @test43() {
; LA32-LABEL: test43:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1238
; LA32-NEXT:    vldi $vr1, -982
; LA32-NEXT:    ret
;
; LA64-LABEL: test43:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1238
; LA64-NEXT:    vldi $vr1, -982
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 13.0000000000, double 13.0000000000 }
}

define dso_local { float, double } @test44() {
; LA32-LABEL: test44:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1237
; LA32-NEXT:    vldi $vr1, -981
; LA32-NEXT:    ret
;
; LA64-LABEL: test44:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1237
; LA64-NEXT:    vldi $vr1, -981
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 13.5000000000, double 13.5000000000 }
}

define dso_local { float, double } @test45() {
; LA32-LABEL: test45:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1236
; LA32-NEXT:    vldi $vr1, -980
; LA32-NEXT:    ret
;
; LA64-LABEL: test45:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1236
; LA64-NEXT:    vldi $vr1, -980
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 14.0000000000, double 14.0000000000 }
}

define dso_local { float, double } @test46() {
; LA32-LABEL: test46:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1235
; LA32-NEXT:    vldi $vr1, -979
; LA32-NEXT:    ret
;
; LA64-LABEL: test46:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1235
; LA64-NEXT:    vldi $vr1, -979
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 14.5000000000, double 14.5000000000 }
}

define dso_local { float, double } @test47() {
; LA32-LABEL: test47:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1234
; LA32-NEXT:    vldi $vr1, -978
; LA32-NEXT:    ret
;
; LA64-LABEL: test47:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1234
; LA64-NEXT:    vldi $vr1, -978
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 15.0000000000, double 15.0000000000 }
}

define dso_local { float, double } @test48() {
; LA32-LABEL: test48:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1233
; LA32-NEXT:    vldi $vr1, -977
; LA32-NEXT:    ret
;
; LA64-LABEL: test48:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1233
; LA64-NEXT:    vldi $vr1, -977
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 15.5000000000, double 15.5000000000 }
}

define dso_local { float, double } @test49() {
; LA32-LABEL: test49:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1232
; LA32-NEXT:    vldi $vr1, -976
; LA32-NEXT:    ret
;
; LA64-LABEL: test49:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1232
; LA64-NEXT:    vldi $vr1, -976
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 16.0000000000, double 16.0000000000 }
}

define dso_local { float, double } @test50() {
; LA32-LABEL: test50:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1231
; LA32-NEXT:    vldi $vr1, -975
; LA32-NEXT:    ret
;
; LA64-LABEL: test50:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1231
; LA64-NEXT:    vldi $vr1, -975
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 17.0000000000, double 17.0000000000 }
}

define dso_local { float, double } @test51() {
; LA32-LABEL: test51:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1230
; LA32-NEXT:    vldi $vr1, -974
; LA32-NEXT:    ret
;
; LA64-LABEL: test51:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1230
; LA64-NEXT:    vldi $vr1, -974
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 18.0000000000, double 18.0000000000 }
}

define dso_local { float, double } @test52() {
; LA32-LABEL: test52:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1229
; LA32-NEXT:    vldi $vr1, -973
; LA32-NEXT:    ret
;
; LA64-LABEL: test52:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1229
; LA64-NEXT:    vldi $vr1, -973
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 19.0000000000, double 19.0000000000 }
}

define dso_local { float, double } @test53() {
; LA32-LABEL: test53:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1228
; LA32-NEXT:    vldi $vr1, -972
; LA32-NEXT:    ret
;
; LA64-LABEL: test53:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1228
; LA64-NEXT:    vldi $vr1, -972
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 20.0000000000, double 20.0000000000 }
}

define dso_local { float, double } @test54() {
; LA32-LABEL: test54:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1227
; LA32-NEXT:    vldi $vr1, -971
; LA32-NEXT:    ret
;
; LA64-LABEL: test54:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1227
; LA64-NEXT:    vldi $vr1, -971
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 21.0000000000, double 21.0000000000 }
}

define dso_local { float, double } @test55() {
; LA32-LABEL: test55:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1226
; LA32-NEXT:    vldi $vr1, -970
; LA32-NEXT:    ret
;
; LA64-LABEL: test55:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1226
; LA64-NEXT:    vldi $vr1, -970
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 22.0000000000, double 22.0000000000 }
}

define dso_local { float, double } @test56() {
; LA32-LABEL: test56:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1225
; LA32-NEXT:    vldi $vr1, -969
; LA32-NEXT:    ret
;
; LA64-LABEL: test56:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1225
; LA64-NEXT:    vldi $vr1, -969
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 23.0000000000, double 23.0000000000 }
}

define dso_local { float, double } @test57() {
; LA32-LABEL: test57:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1224
; LA32-NEXT:    vldi $vr1, -968
; LA32-NEXT:    ret
;
; LA64-LABEL: test57:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1224
; LA64-NEXT:    vldi $vr1, -968
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 24.0000000000, double 24.0000000000 }
}

define dso_local { float, double } @test58() {
; LA32-LABEL: test58:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1223
; LA32-NEXT:    vldi $vr1, -967
; LA32-NEXT:    ret
;
; LA64-LABEL: test58:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1223
; LA64-NEXT:    vldi $vr1, -967
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 25.0000000000, double 25.0000000000 }
}

define dso_local { float, double } @test59() {
; LA32-LABEL: test59:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1222
; LA32-NEXT:    vldi $vr1, -966
; LA32-NEXT:    ret
;
; LA64-LABEL: test59:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1222
; LA64-NEXT:    vldi $vr1, -966
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 26.0000000000, double 26.0000000000 }
}

define dso_local { float, double } @test60() {
; LA32-LABEL: test60:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1221
; LA32-NEXT:    vldi $vr1, -965
; LA32-NEXT:    ret
;
; LA64-LABEL: test60:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1221
; LA64-NEXT:    vldi $vr1, -965
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 27.0000000000, double 27.0000000000 }
}

define dso_local { float, double } @test61() {
; LA32-LABEL: test61:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1220
; LA32-NEXT:    vldi $vr1, -964
; LA32-NEXT:    ret
;
; LA64-LABEL: test61:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1220
; LA64-NEXT:    vldi $vr1, -964
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 28.0000000000, double 28.0000000000 }
}

define dso_local { float, double } @test62() {
; LA32-LABEL: test62:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1219
; LA32-NEXT:    vldi $vr1, -963
; LA32-NEXT:    ret
;
; LA64-LABEL: test62:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1219
; LA64-NEXT:    vldi $vr1, -963
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 29.0000000000, double 29.0000000000 }
}

define dso_local { float, double } @test63() {
; LA32-LABEL: test63:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1218
; LA32-NEXT:    vldi $vr1, -962
; LA32-NEXT:    ret
;
; LA64-LABEL: test63:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1218
; LA64-NEXT:    vldi $vr1, -962
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 30.0000000000, double 30.0000000000 }
}

define dso_local { float, double } @test64() {
; LA32-LABEL: test64:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1217
; LA32-NEXT:    vldi $vr1, -961
; LA32-NEXT:    ret
;
; LA64-LABEL: test64:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1217
; LA64-NEXT:    vldi $vr1, -961
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 31.0000000000, double 31.0000000000 }
}

define dso_local { float, double } @test65() {
; LA32-LABEL: test65:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1216
; LA32-NEXT:    vldi $vr1, -960
; LA32-NEXT:    ret
;
; LA64-LABEL: test65:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1216
; LA64-NEXT:    vldi $vr1, -960
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1250000000, double 0.1250000000 }
}

define dso_local { float, double } @test66() {
; LA32-LABEL: test66:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1215
; LA32-NEXT:    vldi $vr1, -959
; LA32-NEXT:    ret
;
; LA64-LABEL: test66:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1215
; LA64-NEXT:    vldi $vr1, -959
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1328125000, double 0.1328125000 }
}

define dso_local { float, double } @test67() {
; LA32-LABEL: test67:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1214
; LA32-NEXT:    vldi $vr1, -958
; LA32-NEXT:    ret
;
; LA64-LABEL: test67:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1214
; LA64-NEXT:    vldi $vr1, -958
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1406250000, double 0.1406250000 }
}

define dso_local { float, double } @test68() {
; LA32-LABEL: test68:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1213
; LA32-NEXT:    vldi $vr1, -957
; LA32-NEXT:    ret
;
; LA64-LABEL: test68:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1213
; LA64-NEXT:    vldi $vr1, -957
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1484375000, double 0.1484375000 }
}

define dso_local { float, double } @test69() {
; LA32-LABEL: test69:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1212
; LA32-NEXT:    vldi $vr1, -956
; LA32-NEXT:    ret
;
; LA64-LABEL: test69:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1212
; LA64-NEXT:    vldi $vr1, -956
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1562500000, double 0.1562500000 }
}

define dso_local { float, double } @test70() {
; LA32-LABEL: test70:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1211
; LA32-NEXT:    vldi $vr1, -955
; LA32-NEXT:    ret
;
; LA64-LABEL: test70:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1211
; LA64-NEXT:    vldi $vr1, -955
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1640625000, double 0.1640625000 }
}

define dso_local { float, double } @test71() {
; LA32-LABEL: test71:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1210
; LA32-NEXT:    vldi $vr1, -954
; LA32-NEXT:    ret
;
; LA64-LABEL: test71:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1210
; LA64-NEXT:    vldi $vr1, -954
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1718750000, double 0.1718750000 }
}

define dso_local { float, double } @test72() {
; LA32-LABEL: test72:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1209
; LA32-NEXT:    vldi $vr1, -953
; LA32-NEXT:    ret
;
; LA64-LABEL: test72:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1209
; LA64-NEXT:    vldi $vr1, -953
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1796875000, double 0.1796875000 }
}

define dso_local { float, double } @test73() {
; LA32-LABEL: test73:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1208
; LA32-NEXT:    vldi $vr1, -952
; LA32-NEXT:    ret
;
; LA64-LABEL: test73:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1208
; LA64-NEXT:    vldi $vr1, -952
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1875000000, double 0.1875000000 }
}

define dso_local { float, double } @test74() {
; LA32-LABEL: test74:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1207
; LA32-NEXT:    vldi $vr1, -951
; LA32-NEXT:    ret
;
; LA64-LABEL: test74:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1207
; LA64-NEXT:    vldi $vr1, -951
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.1953125000, double 0.1953125000 }
}

define dso_local { float, double } @test75() {
; LA32-LABEL: test75:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1206
; LA32-NEXT:    vldi $vr1, -950
; LA32-NEXT:    ret
;
; LA64-LABEL: test75:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1206
; LA64-NEXT:    vldi $vr1, -950
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2031250000, double 0.2031250000 }
}

define dso_local { float, double } @test76() {
; LA32-LABEL: test76:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1205
; LA32-NEXT:    vldi $vr1, -949
; LA32-NEXT:    ret
;
; LA64-LABEL: test76:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1205
; LA64-NEXT:    vldi $vr1, -949
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2109375000, double 0.2109375000 }
}

define dso_local { float, double } @test77() {
; LA32-LABEL: test77:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1204
; LA32-NEXT:    vldi $vr1, -948
; LA32-NEXT:    ret
;
; LA64-LABEL: test77:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1204
; LA64-NEXT:    vldi $vr1, -948
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2187500000, double 0.2187500000 }
}

define dso_local { float, double } @test78() {
; LA32-LABEL: test78:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1203
; LA32-NEXT:    vldi $vr1, -947
; LA32-NEXT:    ret
;
; LA64-LABEL: test78:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1203
; LA64-NEXT:    vldi $vr1, -947
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2265625000, double 0.2265625000 }
}

define dso_local { float, double } @test79() {
; LA32-LABEL: test79:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1202
; LA32-NEXT:    vldi $vr1, -946
; LA32-NEXT:    ret
;
; LA64-LABEL: test79:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1202
; LA64-NEXT:    vldi $vr1, -946
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2343750000, double 0.2343750000 }
}

define dso_local { float, double } @test80() {
; LA32-LABEL: test80:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1201
; LA32-NEXT:    vldi $vr1, -945
; LA32-NEXT:    ret
;
; LA64-LABEL: test80:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1201
; LA64-NEXT:    vldi $vr1, -945
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2421875000, double 0.2421875000 }
}

define dso_local { float, double } @test81() {
; LA32-LABEL: test81:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1200
; LA32-NEXT:    vldi $vr1, -944
; LA32-NEXT:    ret
;
; LA64-LABEL: test81:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1200
; LA64-NEXT:    vldi $vr1, -944
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2500000000, double 0.2500000000 }
}

define dso_local { float, double } @test82() {
; LA32-LABEL: test82:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1199
; LA32-NEXT:    vldi $vr1, -943
; LA32-NEXT:    ret
;
; LA64-LABEL: test82:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1199
; LA64-NEXT:    vldi $vr1, -943
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2656250000, double 0.2656250000 }
}

define dso_local { float, double } @test83() {
; LA32-LABEL: test83:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1198
; LA32-NEXT:    vldi $vr1, -942
; LA32-NEXT:    ret
;
; LA64-LABEL: test83:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1198
; LA64-NEXT:    vldi $vr1, -942
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2812500000, double 0.2812500000 }
}

define dso_local { float, double } @test84() {
; LA32-LABEL: test84:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1197
; LA32-NEXT:    vldi $vr1, -941
; LA32-NEXT:    ret
;
; LA64-LABEL: test84:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1197
; LA64-NEXT:    vldi $vr1, -941
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.2968750000, double 0.2968750000 }
}

define dso_local { float, double } @test85() {
; LA32-LABEL: test85:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1196
; LA32-NEXT:    vldi $vr1, -940
; LA32-NEXT:    ret
;
; LA64-LABEL: test85:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1196
; LA64-NEXT:    vldi $vr1, -940
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.3125000000, double 0.3125000000 }
}

define dso_local { float, double } @test86() {
; LA32-LABEL: test86:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1195
; LA32-NEXT:    vldi $vr1, -939
; LA32-NEXT:    ret
;
; LA64-LABEL: test86:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1195
; LA64-NEXT:    vldi $vr1, -939
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.3281250000, double 0.3281250000 }
}

define dso_local { float, double } @test87() {
; LA32-LABEL: test87:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1194
; LA32-NEXT:    vldi $vr1, -938
; LA32-NEXT:    ret
;
; LA64-LABEL: test87:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1194
; LA64-NEXT:    vldi $vr1, -938
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.3437500000, double 0.3437500000 }
}

define dso_local { float, double } @test88() {
; LA32-LABEL: test88:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1193
; LA32-NEXT:    vldi $vr1, -937
; LA32-NEXT:    ret
;
; LA64-LABEL: test88:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1193
; LA64-NEXT:    vldi $vr1, -937
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.3593750000, double 0.3593750000 }
}

define dso_local { float, double } @test89() {
; LA32-LABEL: test89:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1192
; LA32-NEXT:    vldi $vr1, -936
; LA32-NEXT:    ret
;
; LA64-LABEL: test89:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1192
; LA64-NEXT:    vldi $vr1, -936
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.3750000000, double 0.3750000000 }
}

define dso_local { float, double } @test90() {
; LA32-LABEL: test90:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1191
; LA32-NEXT:    vldi $vr1, -935
; LA32-NEXT:    ret
;
; LA64-LABEL: test90:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1191
; LA64-NEXT:    vldi $vr1, -935
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.3906250000, double 0.3906250000 }
}

define dso_local { float, double } @test91() {
; LA32-LABEL: test91:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1190
; LA32-NEXT:    vldi $vr1, -934
; LA32-NEXT:    ret
;
; LA64-LABEL: test91:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1190
; LA64-NEXT:    vldi $vr1, -934
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.4062500000, double 0.4062500000 }
}

define dso_local { float, double } @test92() {
; LA32-LABEL: test92:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1189
; LA32-NEXT:    vldi $vr1, -933
; LA32-NEXT:    ret
;
; LA64-LABEL: test92:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1189
; LA64-NEXT:    vldi $vr1, -933
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.4218750000, double 0.4218750000 }
}

define dso_local { float, double } @test93() {
; LA32-LABEL: test93:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1188
; LA32-NEXT:    vldi $vr1, -932
; LA32-NEXT:    ret
;
; LA64-LABEL: test93:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1188
; LA64-NEXT:    vldi $vr1, -932
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.4375000000, double 0.4375000000 }
}

define dso_local { float, double } @test94() {
; LA32-LABEL: test94:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1187
; LA32-NEXT:    vldi $vr1, -931
; LA32-NEXT:    ret
;
; LA64-LABEL: test94:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1187
; LA64-NEXT:    vldi $vr1, -931
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.4531250000, double 0.4531250000 }
}

define dso_local { float, double } @test95() {
; LA32-LABEL: test95:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1186
; LA32-NEXT:    vldi $vr1, -930
; LA32-NEXT:    ret
;
; LA64-LABEL: test95:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1186
; LA64-NEXT:    vldi $vr1, -930
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.4687500000, double 0.4687500000 }
}

define dso_local { float, double } @test96() {
; LA32-LABEL: test96:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1185
; LA32-NEXT:    vldi $vr1, -929
; LA32-NEXT:    ret
;
; LA64-LABEL: test96:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1185
; LA64-NEXT:    vldi $vr1, -929
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.4843750000, double 0.4843750000 }
}

define dso_local { float, double } @test97() {
; LA32-LABEL: test97:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1184
; LA32-NEXT:    vldi $vr1, -928
; LA32-NEXT:    ret
;
; LA64-LABEL: test97:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1184
; LA64-NEXT:    vldi $vr1, -928
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.5000000000, double 0.5000000000 }
}

define dso_local { float, double } @test98() {
; LA32-LABEL: test98:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1183
; LA32-NEXT:    vldi $vr1, -927
; LA32-NEXT:    ret
;
; LA64-LABEL: test98:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1183
; LA64-NEXT:    vldi $vr1, -927
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.5312500000, double 0.5312500000 }
}

define dso_local { float, double } @test99() {
; LA32-LABEL: test99:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1182
; LA32-NEXT:    vldi $vr1, -926
; LA32-NEXT:    ret
;
; LA64-LABEL: test99:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1182
; LA64-NEXT:    vldi $vr1, -926
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.5625000000, double 0.5625000000 }
}

define dso_local { float, double } @test100() {
; LA32-LABEL: test100:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1181
; LA32-NEXT:    vldi $vr1, -925
; LA32-NEXT:    ret
;
; LA64-LABEL: test100:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1181
; LA64-NEXT:    vldi $vr1, -925
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.5937500000, double 0.5937500000 }
}

define dso_local { float, double } @test101() {
; LA32-LABEL: test101:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1180
; LA32-NEXT:    vldi $vr1, -924
; LA32-NEXT:    ret
;
; LA64-LABEL: test101:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1180
; LA64-NEXT:    vldi $vr1, -924
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.6250000000, double 0.6250000000 }
}

define dso_local { float, double } @test102() {
; LA32-LABEL: test102:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1179
; LA32-NEXT:    vldi $vr1, -923
; LA32-NEXT:    ret
;
; LA64-LABEL: test102:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1179
; LA64-NEXT:    vldi $vr1, -923
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.6562500000, double 0.6562500000 }
}

define dso_local { float, double } @test103() {
; LA32-LABEL: test103:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1178
; LA32-NEXT:    vldi $vr1, -922
; LA32-NEXT:    ret
;
; LA64-LABEL: test103:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1178
; LA64-NEXT:    vldi $vr1, -922
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.6875000000, double 0.6875000000 }
}

define dso_local { float, double } @test104() {
; LA32-LABEL: test104:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1177
; LA32-NEXT:    vldi $vr1, -921
; LA32-NEXT:    ret
;
; LA64-LABEL: test104:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1177
; LA64-NEXT:    vldi $vr1, -921
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.7187500000, double 0.7187500000 }
}

define dso_local { float, double } @test105() {
; LA32-LABEL: test105:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1176
; LA32-NEXT:    vldi $vr1, -920
; LA32-NEXT:    ret
;
; LA64-LABEL: test105:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1176
; LA64-NEXT:    vldi $vr1, -920
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.7500000000, double 0.7500000000 }
}

define dso_local { float, double } @test106() {
; LA32-LABEL: test106:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1175
; LA32-NEXT:    vldi $vr1, -919
; LA32-NEXT:    ret
;
; LA64-LABEL: test106:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1175
; LA64-NEXT:    vldi $vr1, -919
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.7812500000, double 0.7812500000 }
}

define dso_local { float, double } @test107() {
; LA32-LABEL: test107:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1174
; LA32-NEXT:    vldi $vr1, -918
; LA32-NEXT:    ret
;
; LA64-LABEL: test107:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1174
; LA64-NEXT:    vldi $vr1, -918
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.8125000000, double 0.8125000000 }
}

define dso_local { float, double } @test108() {
; LA32-LABEL: test108:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1173
; LA32-NEXT:    vldi $vr1, -917
; LA32-NEXT:    ret
;
; LA64-LABEL: test108:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1173
; LA64-NEXT:    vldi $vr1, -917
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.8437500000, double 0.8437500000 }
}

define dso_local { float, double } @test109() {
; LA32-LABEL: test109:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1172
; LA32-NEXT:    vldi $vr1, -916
; LA32-NEXT:    ret
;
; LA64-LABEL: test109:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1172
; LA64-NEXT:    vldi $vr1, -916
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.8750000000, double 0.8750000000 }
}

define dso_local { float, double } @test110() {
; LA32-LABEL: test110:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1171
; LA32-NEXT:    vldi $vr1, -915
; LA32-NEXT:    ret
;
; LA64-LABEL: test110:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1171
; LA64-NEXT:    vldi $vr1, -915
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.9062500000, double 0.9062500000 }
}

define dso_local { float, double } @test111() {
; LA32-LABEL: test111:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1170
; LA32-NEXT:    vldi $vr1, -914
; LA32-NEXT:    ret
;
; LA64-LABEL: test111:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1170
; LA64-NEXT:    vldi $vr1, -914
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.9375000000, double 0.9375000000 }
}

define dso_local { float, double } @test112() {
; LA32-LABEL: test112:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1169
; LA32-NEXT:    vldi $vr1, -913
; LA32-NEXT:    ret
;
; LA64-LABEL: test112:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1169
; LA64-NEXT:    vldi $vr1, -913
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 0.9687500000, double 0.9687500000 }
}

define dso_local { float, double } @test113() {
; LA32-LABEL: test113:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1168
; LA32-NEXT:    vldi $vr1, -912
; LA32-NEXT:    ret
;
; LA64-LABEL: test113:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1168
; LA64-NEXT:    vldi $vr1, -912
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.0000000000, double 1.0000000000 }
}

define dso_local { float, double } @test114() {
; LA32-LABEL: test114:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1167
; LA32-NEXT:    vldi $vr1, -911
; LA32-NEXT:    ret
;
; LA64-LABEL: test114:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1167
; LA64-NEXT:    vldi $vr1, -911
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.0625000000, double 1.0625000000 }
}

define dso_local { float, double } @test115() {
; LA32-LABEL: test115:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1166
; LA32-NEXT:    vldi $vr1, -910
; LA32-NEXT:    ret
;
; LA64-LABEL: test115:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1166
; LA64-NEXT:    vldi $vr1, -910
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.1250000000, double 1.1250000000 }
}

define dso_local { float, double } @test116() {
; LA32-LABEL: test116:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1165
; LA32-NEXT:    vldi $vr1, -909
; LA32-NEXT:    ret
;
; LA64-LABEL: test116:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1165
; LA64-NEXT:    vldi $vr1, -909
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.1875000000, double 1.1875000000 }
}

define dso_local { float, double } @test117() {
; LA32-LABEL: test117:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1164
; LA32-NEXT:    vldi $vr1, -908
; LA32-NEXT:    ret
;
; LA64-LABEL: test117:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1164
; LA64-NEXT:    vldi $vr1, -908
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.2500000000, double 1.2500000000 }
}

define dso_local { float, double } @test118() {
; LA32-LABEL: test118:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1163
; LA32-NEXT:    vldi $vr1, -907
; LA32-NEXT:    ret
;
; LA64-LABEL: test118:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1163
; LA64-NEXT:    vldi $vr1, -907
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.3125000000, double 1.3125000000 }
}

define dso_local { float, double } @test119() {
; LA32-LABEL: test119:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1162
; LA32-NEXT:    vldi $vr1, -906
; LA32-NEXT:    ret
;
; LA64-LABEL: test119:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1162
; LA64-NEXT:    vldi $vr1, -906
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.3750000000, double 1.3750000000 }
}

define dso_local { float, double } @test120() {
; LA32-LABEL: test120:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1161
; LA32-NEXT:    vldi $vr1, -905
; LA32-NEXT:    ret
;
; LA64-LABEL: test120:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1161
; LA64-NEXT:    vldi $vr1, -905
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.4375000000, double 1.4375000000 }
}

define dso_local { float, double } @test121() {
; LA32-LABEL: test121:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1160
; LA32-NEXT:    vldi $vr1, -904
; LA32-NEXT:    ret
;
; LA64-LABEL: test121:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1160
; LA64-NEXT:    vldi $vr1, -904
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.5000000000, double 1.5000000000 }
}

define dso_local { float, double } @test122() {
; LA32-LABEL: test122:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1159
; LA32-NEXT:    vldi $vr1, -903
; LA32-NEXT:    ret
;
; LA64-LABEL: test122:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1159
; LA64-NEXT:    vldi $vr1, -903
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.5625000000, double 1.5625000000 }
}

define dso_local { float, double } @test123() {
; LA32-LABEL: test123:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1158
; LA32-NEXT:    vldi $vr1, -902
; LA32-NEXT:    ret
;
; LA64-LABEL: test123:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1158
; LA64-NEXT:    vldi $vr1, -902
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.6250000000, double 1.6250000000 }
}

define dso_local { float, double } @test124() {
; LA32-LABEL: test124:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1157
; LA32-NEXT:    vldi $vr1, -901
; LA32-NEXT:    ret
;
; LA64-LABEL: test124:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1157
; LA64-NEXT:    vldi $vr1, -901
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.6875000000, double 1.6875000000 }
}

define dso_local { float, double } @test125() {
; LA32-LABEL: test125:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1156
; LA32-NEXT:    vldi $vr1, -900
; LA32-NEXT:    ret
;
; LA64-LABEL: test125:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1156
; LA64-NEXT:    vldi $vr1, -900
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.7500000000, double 1.7500000000 }
}

define dso_local { float, double } @test126() {
; LA32-LABEL: test126:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1155
; LA32-NEXT:    vldi $vr1, -899
; LA32-NEXT:    ret
;
; LA64-LABEL: test126:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1155
; LA64-NEXT:    vldi $vr1, -899
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.8125000000, double 1.8125000000 }
}

define dso_local { float, double } @test127() {
; LA32-LABEL: test127:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1154
; LA32-NEXT:    vldi $vr1, -898
; LA32-NEXT:    ret
;
; LA64-LABEL: test127:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1154
; LA64-NEXT:    vldi $vr1, -898
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.8750000000, double 1.8750000000 }
}

define dso_local { float, double } @test128() {
; LA32-LABEL: test128:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1153
; LA32-NEXT:    vldi $vr1, -897
; LA32-NEXT:    ret
;
; LA64-LABEL: test128:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1153
; LA64-NEXT:    vldi $vr1, -897
; LA64-NEXT:    ret
entry:
  ret { float, double } { float 1.9375000000, double 1.9375000000 }
}

define dso_local { float, double } @test129() {
; LA32-LABEL: test129:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1152
; LA32-NEXT:    vldi $vr1, -896
; LA32-NEXT:    ret
;
; LA64-LABEL: test129:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1152
; LA64-NEXT:    vldi $vr1, -896
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.0000000000, double -2.0000000000 }
}

define dso_local { float, double } @test130() {
; LA32-LABEL: test130:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1151
; LA32-NEXT:    vldi $vr1, -895
; LA32-NEXT:    ret
;
; LA64-LABEL: test130:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1151
; LA64-NEXT:    vldi $vr1, -895
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.1250000000, double -2.1250000000 }
}

define dso_local { float, double } @test131() {
; LA32-LABEL: test131:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1150
; LA32-NEXT:    vldi $vr1, -894
; LA32-NEXT:    ret
;
; LA64-LABEL: test131:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1150
; LA64-NEXT:    vldi $vr1, -894
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.2500000000, double -2.2500000000 }
}

define dso_local { float, double } @test132() {
; LA32-LABEL: test132:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1149
; LA32-NEXT:    vldi $vr1, -893
; LA32-NEXT:    ret
;
; LA64-LABEL: test132:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1149
; LA64-NEXT:    vldi $vr1, -893
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.3750000000, double -2.3750000000 }
}

define dso_local { float, double } @test133() {
; LA32-LABEL: test133:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1148
; LA32-NEXT:    vldi $vr1, -892
; LA32-NEXT:    ret
;
; LA64-LABEL: test133:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1148
; LA64-NEXT:    vldi $vr1, -892
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.5000000000, double -2.5000000000 }
}

define dso_local { float, double } @test134() {
; LA32-LABEL: test134:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1147
; LA32-NEXT:    vldi $vr1, -891
; LA32-NEXT:    ret
;
; LA64-LABEL: test134:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1147
; LA64-NEXT:    vldi $vr1, -891
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.6250000000, double -2.6250000000 }
}

define dso_local { float, double } @test135() {
; LA32-LABEL: test135:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1146
; LA32-NEXT:    vldi $vr1, -890
; LA32-NEXT:    ret
;
; LA64-LABEL: test135:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1146
; LA64-NEXT:    vldi $vr1, -890
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.7500000000, double -2.7500000000 }
}

define dso_local { float, double } @test136() {
; LA32-LABEL: test136:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1145
; LA32-NEXT:    vldi $vr1, -889
; LA32-NEXT:    ret
;
; LA64-LABEL: test136:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1145
; LA64-NEXT:    vldi $vr1, -889
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -2.8750000000, double -2.8750000000 }
}

define dso_local { float, double } @test137() {
; LA32-LABEL: test137:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1144
; LA32-NEXT:    vldi $vr1, -888
; LA32-NEXT:    ret
;
; LA64-LABEL: test137:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1144
; LA64-NEXT:    vldi $vr1, -888
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.0000000000, double -3.0000000000 }
}

define dso_local { float, double } @test138() {
; LA32-LABEL: test138:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1143
; LA32-NEXT:    vldi $vr1, -887
; LA32-NEXT:    ret
;
; LA64-LABEL: test138:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1143
; LA64-NEXT:    vldi $vr1, -887
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.1250000000, double -3.1250000000 }
}

define dso_local { float, double } @test139() {
; LA32-LABEL: test139:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1142
; LA32-NEXT:    vldi $vr1, -886
; LA32-NEXT:    ret
;
; LA64-LABEL: test139:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1142
; LA64-NEXT:    vldi $vr1, -886
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.2500000000, double -3.2500000000 }
}

define dso_local { float, double } @test140() {
; LA32-LABEL: test140:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1141
; LA32-NEXT:    vldi $vr1, -885
; LA32-NEXT:    ret
;
; LA64-LABEL: test140:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1141
; LA64-NEXT:    vldi $vr1, -885
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.3750000000, double -3.3750000000 }
}

define dso_local { float, double } @test141() {
; LA32-LABEL: test141:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1140
; LA32-NEXT:    vldi $vr1, -884
; LA32-NEXT:    ret
;
; LA64-LABEL: test141:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1140
; LA64-NEXT:    vldi $vr1, -884
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.5000000000, double -3.5000000000 }
}

define dso_local { float, double } @test142() {
; LA32-LABEL: test142:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1139
; LA32-NEXT:    vldi $vr1, -883
; LA32-NEXT:    ret
;
; LA64-LABEL: test142:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1139
; LA64-NEXT:    vldi $vr1, -883
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.6250000000, double -3.6250000000 }
}

define dso_local { float, double } @test143() {
; LA32-LABEL: test143:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1138
; LA32-NEXT:    vldi $vr1, -882
; LA32-NEXT:    ret
;
; LA64-LABEL: test143:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1138
; LA64-NEXT:    vldi $vr1, -882
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.7500000000, double -3.7500000000 }
}

define dso_local { float, double } @test144() {
; LA32-LABEL: test144:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1137
; LA32-NEXT:    vldi $vr1, -881
; LA32-NEXT:    ret
;
; LA64-LABEL: test144:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1137
; LA64-NEXT:    vldi $vr1, -881
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -3.8750000000, double -3.8750000000 }
}

define dso_local { float, double } @test145() {
; LA32-LABEL: test145:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1136
; LA32-NEXT:    vldi $vr1, -880
; LA32-NEXT:    ret
;
; LA64-LABEL: test145:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1136
; LA64-NEXT:    vldi $vr1, -880
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -4.0000000000, double -4.0000000000 }
}

define dso_local { float, double } @test146() {
; LA32-LABEL: test146:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1135
; LA32-NEXT:    vldi $vr1, -879
; LA32-NEXT:    ret
;
; LA64-LABEL: test146:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1135
; LA64-NEXT:    vldi $vr1, -879
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -4.2500000000, double -4.2500000000 }
}

define dso_local { float, double } @test147() {
; LA32-LABEL: test147:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1134
; LA32-NEXT:    vldi $vr1, -878
; LA32-NEXT:    ret
;
; LA64-LABEL: test147:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1134
; LA64-NEXT:    vldi $vr1, -878
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -4.5000000000, double -4.5000000000 }
}

define dso_local { float, double } @test148() {
; LA32-LABEL: test148:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1133
; LA32-NEXT:    vldi $vr1, -877
; LA32-NEXT:    ret
;
; LA64-LABEL: test148:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1133
; LA64-NEXT:    vldi $vr1, -877
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -4.7500000000, double -4.7500000000 }
}

define dso_local { float, double } @test149() {
; LA32-LABEL: test149:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1132
; LA32-NEXT:    vldi $vr1, -876
; LA32-NEXT:    ret
;
; LA64-LABEL: test149:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1132
; LA64-NEXT:    vldi $vr1, -876
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -5.0000000000, double -5.0000000000 }
}

define dso_local { float, double } @test150() {
; LA32-LABEL: test150:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1131
; LA32-NEXT:    vldi $vr1, -875
; LA32-NEXT:    ret
;
; LA64-LABEL: test150:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1131
; LA64-NEXT:    vldi $vr1, -875
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -5.2500000000, double -5.2500000000 }
}

define dso_local { float, double } @test151() {
; LA32-LABEL: test151:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1130
; LA32-NEXT:    vldi $vr1, -874
; LA32-NEXT:    ret
;
; LA64-LABEL: test151:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1130
; LA64-NEXT:    vldi $vr1, -874
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -5.5000000000, double -5.5000000000 }
}

define dso_local { float, double } @test152() {
; LA32-LABEL: test152:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1129
; LA32-NEXT:    vldi $vr1, -873
; LA32-NEXT:    ret
;
; LA64-LABEL: test152:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1129
; LA64-NEXT:    vldi $vr1, -873
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -5.7500000000, double -5.7500000000 }
}

define dso_local { float, double } @test153() {
; LA32-LABEL: test153:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1128
; LA32-NEXT:    vldi $vr1, -872
; LA32-NEXT:    ret
;
; LA64-LABEL: test153:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1128
; LA64-NEXT:    vldi $vr1, -872
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -6.0000000000, double -6.0000000000 }
}

define dso_local { float, double } @test154() {
; LA32-LABEL: test154:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1127
; LA32-NEXT:    vldi $vr1, -871
; LA32-NEXT:    ret
;
; LA64-LABEL: test154:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1127
; LA64-NEXT:    vldi $vr1, -871
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -6.2500000000, double -6.2500000000 }
}

define dso_local { float, double } @test155() {
; LA32-LABEL: test155:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1126
; LA32-NEXT:    vldi $vr1, -870
; LA32-NEXT:    ret
;
; LA64-LABEL: test155:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1126
; LA64-NEXT:    vldi $vr1, -870
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -6.5000000000, double -6.5000000000 }
}

define dso_local { float, double } @test156() {
; LA32-LABEL: test156:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1125
; LA32-NEXT:    vldi $vr1, -869
; LA32-NEXT:    ret
;
; LA64-LABEL: test156:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1125
; LA64-NEXT:    vldi $vr1, -869
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -6.7500000000, double -6.7500000000 }
}

define dso_local { float, double } @test157() {
; LA32-LABEL: test157:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1124
; LA32-NEXT:    vldi $vr1, -868
; LA32-NEXT:    ret
;
; LA64-LABEL: test157:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1124
; LA64-NEXT:    vldi $vr1, -868
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -7.0000000000, double -7.0000000000 }
}

define dso_local { float, double } @test158() {
; LA32-LABEL: test158:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1123
; LA32-NEXT:    vldi $vr1, -867
; LA32-NEXT:    ret
;
; LA64-LABEL: test158:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1123
; LA64-NEXT:    vldi $vr1, -867
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -7.2500000000, double -7.2500000000 }
}

define dso_local { float, double } @test159() {
; LA32-LABEL: test159:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1122
; LA32-NEXT:    vldi $vr1, -866
; LA32-NEXT:    ret
;
; LA64-LABEL: test159:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1122
; LA64-NEXT:    vldi $vr1, -866
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -7.5000000000, double -7.5000000000 }
}

define dso_local { float, double } @test160() {
; LA32-LABEL: test160:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1121
; LA32-NEXT:    vldi $vr1, -865
; LA32-NEXT:    ret
;
; LA64-LABEL: test160:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1121
; LA64-NEXT:    vldi $vr1, -865
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -7.7500000000, double -7.7500000000 }
}

define dso_local { float, double } @test161() {
; LA32-LABEL: test161:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1120
; LA32-NEXT:    vldi $vr1, -864
; LA32-NEXT:    ret
;
; LA64-LABEL: test161:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1120
; LA64-NEXT:    vldi $vr1, -864
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -8.0000000000, double -8.0000000000 }
}

define dso_local { float, double } @test162() {
; LA32-LABEL: test162:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1119
; LA32-NEXT:    vldi $vr1, -863
; LA32-NEXT:    ret
;
; LA64-LABEL: test162:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1119
; LA64-NEXT:    vldi $vr1, -863
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -8.5000000000, double -8.5000000000 }
}

define dso_local { float, double } @test163() {
; LA32-LABEL: test163:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1118
; LA32-NEXT:    vldi $vr1, -862
; LA32-NEXT:    ret
;
; LA64-LABEL: test163:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1118
; LA64-NEXT:    vldi $vr1, -862
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -9.0000000000, double -9.0000000000 }
}

define dso_local { float, double } @test164() {
; LA32-LABEL: test164:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1117
; LA32-NEXT:    vldi $vr1, -861
; LA32-NEXT:    ret
;
; LA64-LABEL: test164:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1117
; LA64-NEXT:    vldi $vr1, -861
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -9.5000000000, double -9.5000000000 }
}

define dso_local { float, double } @test165() {
; LA32-LABEL: test165:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1116
; LA32-NEXT:    vldi $vr1, -860
; LA32-NEXT:    ret
;
; LA64-LABEL: test165:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1116
; LA64-NEXT:    vldi $vr1, -860
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -10.0000000000, double -10.0000000000 }
}

define dso_local { float, double } @test166() {
; LA32-LABEL: test166:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1115
; LA32-NEXT:    vldi $vr1, -859
; LA32-NEXT:    ret
;
; LA64-LABEL: test166:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1115
; LA64-NEXT:    vldi $vr1, -859
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -10.5000000000, double -10.5000000000 }
}

define dso_local { float, double } @test167() {
; LA32-LABEL: test167:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1114
; LA32-NEXT:    vldi $vr1, -858
; LA32-NEXT:    ret
;
; LA64-LABEL: test167:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1114
; LA64-NEXT:    vldi $vr1, -858
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -11.0000000000, double -11.0000000000 }
}

define dso_local { float, double } @test168() {
; LA32-LABEL: test168:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1113
; LA32-NEXT:    vldi $vr1, -857
; LA32-NEXT:    ret
;
; LA64-LABEL: test168:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1113
; LA64-NEXT:    vldi $vr1, -857
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -11.5000000000, double -11.5000000000 }
}

define dso_local { float, double } @test169() {
; LA32-LABEL: test169:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1112
; LA32-NEXT:    vldi $vr1, -856
; LA32-NEXT:    ret
;
; LA64-LABEL: test169:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1112
; LA64-NEXT:    vldi $vr1, -856
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -12.0000000000, double -12.0000000000 }
}

define dso_local { float, double } @test170() {
; LA32-LABEL: test170:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1111
; LA32-NEXT:    vldi $vr1, -855
; LA32-NEXT:    ret
;
; LA64-LABEL: test170:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1111
; LA64-NEXT:    vldi $vr1, -855
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -12.5000000000, double -12.5000000000 }
}

define dso_local { float, double } @test171() {
; LA32-LABEL: test171:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1110
; LA32-NEXT:    vldi $vr1, -854
; LA32-NEXT:    ret
;
; LA64-LABEL: test171:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1110
; LA64-NEXT:    vldi $vr1, -854
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -13.0000000000, double -13.0000000000 }
}

define dso_local { float, double } @test172() {
; LA32-LABEL: test172:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1109
; LA32-NEXT:    vldi $vr1, -853
; LA32-NEXT:    ret
;
; LA64-LABEL: test172:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1109
; LA64-NEXT:    vldi $vr1, -853
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -13.5000000000, double -13.5000000000 }
}

define dso_local { float, double } @test173() {
; LA32-LABEL: test173:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1108
; LA32-NEXT:    vldi $vr1, -852
; LA32-NEXT:    ret
;
; LA64-LABEL: test173:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1108
; LA64-NEXT:    vldi $vr1, -852
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -14.0000000000, double -14.0000000000 }
}

define dso_local { float, double } @test174() {
; LA32-LABEL: test174:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1107
; LA32-NEXT:    vldi $vr1, -851
; LA32-NEXT:    ret
;
; LA64-LABEL: test174:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1107
; LA64-NEXT:    vldi $vr1, -851
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -14.5000000000, double -14.5000000000 }
}

define dso_local { float, double } @test175() {
; LA32-LABEL: test175:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1106
; LA32-NEXT:    vldi $vr1, -850
; LA32-NEXT:    ret
;
; LA64-LABEL: test175:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1106
; LA64-NEXT:    vldi $vr1, -850
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -15.0000000000, double -15.0000000000 }
}

define dso_local { float, double } @test176() {
; LA32-LABEL: test176:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1105
; LA32-NEXT:    vldi $vr1, -849
; LA32-NEXT:    ret
;
; LA64-LABEL: test176:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1105
; LA64-NEXT:    vldi $vr1, -849
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -15.5000000000, double -15.5000000000 }
}

define dso_local { float, double } @test177() {
; LA32-LABEL: test177:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1104
; LA32-NEXT:    vldi $vr1, -848
; LA32-NEXT:    ret
;
; LA64-LABEL: test177:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1104
; LA64-NEXT:    vldi $vr1, -848
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -16.0000000000, double -16.0000000000 }
}

define dso_local { float, double } @test178() {
; LA32-LABEL: test178:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1103
; LA32-NEXT:    vldi $vr1, -847
; LA32-NEXT:    ret
;
; LA64-LABEL: test178:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1103
; LA64-NEXT:    vldi $vr1, -847
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -17.0000000000, double -17.0000000000 }
}

define dso_local { float, double } @test179() {
; LA32-LABEL: test179:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1102
; LA32-NEXT:    vldi $vr1, -846
; LA32-NEXT:    ret
;
; LA64-LABEL: test179:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1102
; LA64-NEXT:    vldi $vr1, -846
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -18.0000000000, double -18.0000000000 }
}

define dso_local { float, double } @test180() {
; LA32-LABEL: test180:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1101
; LA32-NEXT:    vldi $vr1, -845
; LA32-NEXT:    ret
;
; LA64-LABEL: test180:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1101
; LA64-NEXT:    vldi $vr1, -845
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -19.0000000000, double -19.0000000000 }
}

define dso_local { float, double } @test181() {
; LA32-LABEL: test181:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1100
; LA32-NEXT:    vldi $vr1, -844
; LA32-NEXT:    ret
;
; LA64-LABEL: test181:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1100
; LA64-NEXT:    vldi $vr1, -844
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -20.0000000000, double -20.0000000000 }
}

define dso_local { float, double } @test182() {
; LA32-LABEL: test182:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1099
; LA32-NEXT:    vldi $vr1, -843
; LA32-NEXT:    ret
;
; LA64-LABEL: test182:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1099
; LA64-NEXT:    vldi $vr1, -843
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -21.0000000000, double -21.0000000000 }
}

define dso_local { float, double } @test183() {
; LA32-LABEL: test183:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1098
; LA32-NEXT:    vldi $vr1, -842
; LA32-NEXT:    ret
;
; LA64-LABEL: test183:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1098
; LA64-NEXT:    vldi $vr1, -842
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -22.0000000000, double -22.0000000000 }
}

define dso_local { float, double } @test184() {
; LA32-LABEL: test184:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1097
; LA32-NEXT:    vldi $vr1, -841
; LA32-NEXT:    ret
;
; LA64-LABEL: test184:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1097
; LA64-NEXT:    vldi $vr1, -841
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -23.0000000000, double -23.0000000000 }
}

define dso_local { float, double } @test185() {
; LA32-LABEL: test185:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1096
; LA32-NEXT:    vldi $vr1, -840
; LA32-NEXT:    ret
;
; LA64-LABEL: test185:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1096
; LA64-NEXT:    vldi $vr1, -840
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -24.0000000000, double -24.0000000000 }
}

define dso_local { float, double } @test186() {
; LA32-LABEL: test186:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1095
; LA32-NEXT:    vldi $vr1, -839
; LA32-NEXT:    ret
;
; LA64-LABEL: test186:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1095
; LA64-NEXT:    vldi $vr1, -839
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -25.0000000000, double -25.0000000000 }
}

define dso_local { float, double } @test187() {
; LA32-LABEL: test187:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1094
; LA32-NEXT:    vldi $vr1, -838
; LA32-NEXT:    ret
;
; LA64-LABEL: test187:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1094
; LA64-NEXT:    vldi $vr1, -838
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -26.0000000000, double -26.0000000000 }
}

define dso_local { float, double } @test188() {
; LA32-LABEL: test188:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1093
; LA32-NEXT:    vldi $vr1, -837
; LA32-NEXT:    ret
;
; LA64-LABEL: test188:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1093
; LA64-NEXT:    vldi $vr1, -837
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -27.0000000000, double -27.0000000000 }
}

define dso_local { float, double } @test189() {
; LA32-LABEL: test189:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1092
; LA32-NEXT:    vldi $vr1, -836
; LA32-NEXT:    ret
;
; LA64-LABEL: test189:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1092
; LA64-NEXT:    vldi $vr1, -836
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -28.0000000000, double -28.0000000000 }
}

define dso_local { float, double } @test190() {
; LA32-LABEL: test190:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1091
; LA32-NEXT:    vldi $vr1, -835
; LA32-NEXT:    ret
;
; LA64-LABEL: test190:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1091
; LA64-NEXT:    vldi $vr1, -835
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -29.0000000000, double -29.0000000000 }
}

define dso_local { float, double } @test191() {
; LA32-LABEL: test191:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1090
; LA32-NEXT:    vldi $vr1, -834
; LA32-NEXT:    ret
;
; LA64-LABEL: test191:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1090
; LA64-NEXT:    vldi $vr1, -834
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -30.0000000000, double -30.0000000000 }
}

define dso_local { float, double } @test192() {
; LA32-LABEL: test192:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1089
; LA32-NEXT:    vldi $vr1, -833
; LA32-NEXT:    ret
;
; LA64-LABEL: test192:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1089
; LA64-NEXT:    vldi $vr1, -833
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -31.0000000000, double -31.0000000000 }
}

define dso_local { float, double } @test193() {
; LA32-LABEL: test193:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1088
; LA32-NEXT:    vldi $vr1, -832
; LA32-NEXT:    ret
;
; LA64-LABEL: test193:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1088
; LA64-NEXT:    vldi $vr1, -832
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1250000000, double -0.1250000000 }
}

define dso_local { float, double } @test194() {
; LA32-LABEL: test194:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1087
; LA32-NEXT:    vldi $vr1, -831
; LA32-NEXT:    ret
;
; LA64-LABEL: test194:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1087
; LA64-NEXT:    vldi $vr1, -831
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1328125000, double -0.1328125000 }
}

define dso_local { float, double } @test195() {
; LA32-LABEL: test195:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1086
; LA32-NEXT:    vldi $vr1, -830
; LA32-NEXT:    ret
;
; LA64-LABEL: test195:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1086
; LA64-NEXT:    vldi $vr1, -830
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1406250000, double -0.1406250000 }
}

define dso_local { float, double } @test196() {
; LA32-LABEL: test196:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1085
; LA32-NEXT:    vldi $vr1, -829
; LA32-NEXT:    ret
;
; LA64-LABEL: test196:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1085
; LA64-NEXT:    vldi $vr1, -829
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1484375000, double -0.1484375000 }
}

define dso_local { float, double } @test197() {
; LA32-LABEL: test197:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1084
; LA32-NEXT:    vldi $vr1, -828
; LA32-NEXT:    ret
;
; LA64-LABEL: test197:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1084
; LA64-NEXT:    vldi $vr1, -828
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1562500000, double -0.1562500000 }
}

define dso_local { float, double } @test198() {
; LA32-LABEL: test198:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1083
; LA32-NEXT:    vldi $vr1, -827
; LA32-NEXT:    ret
;
; LA64-LABEL: test198:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1083
; LA64-NEXT:    vldi $vr1, -827
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1640625000, double -0.1640625000 }
}

define dso_local { float, double } @test199() {
; LA32-LABEL: test199:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1082
; LA32-NEXT:    vldi $vr1, -826
; LA32-NEXT:    ret
;
; LA64-LABEL: test199:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1082
; LA64-NEXT:    vldi $vr1, -826
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1718750000, double -0.1718750000 }
}

define dso_local { float, double } @test200() {
; LA32-LABEL: test200:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1081
; LA32-NEXT:    vldi $vr1, -825
; LA32-NEXT:    ret
;
; LA64-LABEL: test200:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1081
; LA64-NEXT:    vldi $vr1, -825
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1796875000, double -0.1796875000 }
}

define dso_local { float, double } @test201() {
; LA32-LABEL: test201:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1080
; LA32-NEXT:    vldi $vr1, -824
; LA32-NEXT:    ret
;
; LA64-LABEL: test201:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1080
; LA64-NEXT:    vldi $vr1, -824
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1875000000, double -0.1875000000 }
}

define dso_local { float, double } @test202() {
; LA32-LABEL: test202:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1079
; LA32-NEXT:    vldi $vr1, -823
; LA32-NEXT:    ret
;
; LA64-LABEL: test202:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1079
; LA64-NEXT:    vldi $vr1, -823
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.1953125000, double -0.1953125000 }
}

define dso_local { float, double } @test203() {
; LA32-LABEL: test203:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1078
; LA32-NEXT:    vldi $vr1, -822
; LA32-NEXT:    ret
;
; LA64-LABEL: test203:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1078
; LA64-NEXT:    vldi $vr1, -822
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2031250000, double -0.2031250000 }
}

define dso_local { float, double } @test204() {
; LA32-LABEL: test204:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1077
; LA32-NEXT:    vldi $vr1, -821
; LA32-NEXT:    ret
;
; LA64-LABEL: test204:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1077
; LA64-NEXT:    vldi $vr1, -821
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2109375000, double -0.2109375000 }
}

define dso_local { float, double } @test205() {
; LA32-LABEL: test205:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1076
; LA32-NEXT:    vldi $vr1, -820
; LA32-NEXT:    ret
;
; LA64-LABEL: test205:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1076
; LA64-NEXT:    vldi $vr1, -820
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2187500000, double -0.2187500000 }
}

define dso_local { float, double } @test206() {
; LA32-LABEL: test206:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1075
; LA32-NEXT:    vldi $vr1, -819
; LA32-NEXT:    ret
;
; LA64-LABEL: test206:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1075
; LA64-NEXT:    vldi $vr1, -819
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2265625000, double -0.2265625000 }
}

define dso_local { float, double } @test207() {
; LA32-LABEL: test207:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1074
; LA32-NEXT:    vldi $vr1, -818
; LA32-NEXT:    ret
;
; LA64-LABEL: test207:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1074
; LA64-NEXT:    vldi $vr1, -818
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2343750000, double -0.2343750000 }
}

define dso_local { float, double } @test208() {
; LA32-LABEL: test208:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1073
; LA32-NEXT:    vldi $vr1, -817
; LA32-NEXT:    ret
;
; LA64-LABEL: test208:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1073
; LA64-NEXT:    vldi $vr1, -817
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2421875000, double -0.2421875000 }
}

define dso_local { float, double } @test209() {
; LA32-LABEL: test209:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1072
; LA32-NEXT:    vldi $vr1, -816
; LA32-NEXT:    ret
;
; LA64-LABEL: test209:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1072
; LA64-NEXT:    vldi $vr1, -816
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2500000000, double -0.2500000000 }
}

define dso_local { float, double } @test210() {
; LA32-LABEL: test210:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1071
; LA32-NEXT:    vldi $vr1, -815
; LA32-NEXT:    ret
;
; LA64-LABEL: test210:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1071
; LA64-NEXT:    vldi $vr1, -815
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2656250000, double -0.2656250000 }
}

define dso_local { float, double } @test211() {
; LA32-LABEL: test211:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1070
; LA32-NEXT:    vldi $vr1, -814
; LA32-NEXT:    ret
;
; LA64-LABEL: test211:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1070
; LA64-NEXT:    vldi $vr1, -814
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2812500000, double -0.2812500000 }
}

define dso_local { float, double } @test212() {
; LA32-LABEL: test212:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1069
; LA32-NEXT:    vldi $vr1, -813
; LA32-NEXT:    ret
;
; LA64-LABEL: test212:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1069
; LA64-NEXT:    vldi $vr1, -813
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.2968750000, double -0.2968750000 }
}

define dso_local { float, double } @test213() {
; LA32-LABEL: test213:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1068
; LA32-NEXT:    vldi $vr1, -812
; LA32-NEXT:    ret
;
; LA64-LABEL: test213:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1068
; LA64-NEXT:    vldi $vr1, -812
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.3125000000, double -0.3125000000 }
}

define dso_local { float, double } @test214() {
; LA32-LABEL: test214:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1067
; LA32-NEXT:    vldi $vr1, -811
; LA32-NEXT:    ret
;
; LA64-LABEL: test214:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1067
; LA64-NEXT:    vldi $vr1, -811
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.3281250000, double -0.3281250000 }
}

define dso_local { float, double } @test215() {
; LA32-LABEL: test215:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1066
; LA32-NEXT:    vldi $vr1, -810
; LA32-NEXT:    ret
;
; LA64-LABEL: test215:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1066
; LA64-NEXT:    vldi $vr1, -810
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.3437500000, double -0.3437500000 }
}

define dso_local { float, double } @test216() {
; LA32-LABEL: test216:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1065
; LA32-NEXT:    vldi $vr1, -809
; LA32-NEXT:    ret
;
; LA64-LABEL: test216:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1065
; LA64-NEXT:    vldi $vr1, -809
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.3593750000, double -0.3593750000 }
}

define dso_local { float, double } @test217() {
; LA32-LABEL: test217:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1064
; LA32-NEXT:    vldi $vr1, -808
; LA32-NEXT:    ret
;
; LA64-LABEL: test217:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1064
; LA64-NEXT:    vldi $vr1, -808
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.3750000000, double -0.3750000000 }
}

define dso_local { float, double } @test218() {
; LA32-LABEL: test218:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1063
; LA32-NEXT:    vldi $vr1, -807
; LA32-NEXT:    ret
;
; LA64-LABEL: test218:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1063
; LA64-NEXT:    vldi $vr1, -807
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.3906250000, double -0.3906250000 }
}

define dso_local { float, double } @test219() {
; LA32-LABEL: test219:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1062
; LA32-NEXT:    vldi $vr1, -806
; LA32-NEXT:    ret
;
; LA64-LABEL: test219:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1062
; LA64-NEXT:    vldi $vr1, -806
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.4062500000, double -0.4062500000 }
}

define dso_local { float, double } @test220() {
; LA32-LABEL: test220:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1061
; LA32-NEXT:    vldi $vr1, -805
; LA32-NEXT:    ret
;
; LA64-LABEL: test220:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1061
; LA64-NEXT:    vldi $vr1, -805
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.4218750000, double -0.4218750000 }
}

define dso_local { float, double } @test221() {
; LA32-LABEL: test221:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1060
; LA32-NEXT:    vldi $vr1, -804
; LA32-NEXT:    ret
;
; LA64-LABEL: test221:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1060
; LA64-NEXT:    vldi $vr1, -804
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.4375000000, double -0.4375000000 }
}

define dso_local { float, double } @test222() {
; LA32-LABEL: test222:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1059
; LA32-NEXT:    vldi $vr1, -803
; LA32-NEXT:    ret
;
; LA64-LABEL: test222:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1059
; LA64-NEXT:    vldi $vr1, -803
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.4531250000, double -0.4531250000 }
}

define dso_local { float, double } @test223() {
; LA32-LABEL: test223:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1058
; LA32-NEXT:    vldi $vr1, -802
; LA32-NEXT:    ret
;
; LA64-LABEL: test223:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1058
; LA64-NEXT:    vldi $vr1, -802
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.4687500000, double -0.4687500000 }
}

define dso_local { float, double } @test224() {
; LA32-LABEL: test224:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1057
; LA32-NEXT:    vldi $vr1, -801
; LA32-NEXT:    ret
;
; LA64-LABEL: test224:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1057
; LA64-NEXT:    vldi $vr1, -801
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.4843750000, double -0.4843750000 }
}

define dso_local { float, double } @test225() {
; LA32-LABEL: test225:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1056
; LA32-NEXT:    vldi $vr1, -800
; LA32-NEXT:    ret
;
; LA64-LABEL: test225:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1056
; LA64-NEXT:    vldi $vr1, -800
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.5000000000, double -0.5000000000 }
}

define dso_local { float, double } @test226() {
; LA32-LABEL: test226:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1055
; LA32-NEXT:    vldi $vr1, -799
; LA32-NEXT:    ret
;
; LA64-LABEL: test226:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1055
; LA64-NEXT:    vldi $vr1, -799
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.5312500000, double -0.5312500000 }
}

define dso_local { float, double } @test227() {
; LA32-LABEL: test227:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1054
; LA32-NEXT:    vldi $vr1, -798
; LA32-NEXT:    ret
;
; LA64-LABEL: test227:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1054
; LA64-NEXT:    vldi $vr1, -798
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.5625000000, double -0.5625000000 }
}

define dso_local { float, double } @test228() {
; LA32-LABEL: test228:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1053
; LA32-NEXT:    vldi $vr1, -797
; LA32-NEXT:    ret
;
; LA64-LABEL: test228:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1053
; LA64-NEXT:    vldi $vr1, -797
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.5937500000, double -0.5937500000 }
}

define dso_local { float, double } @test229() {
; LA32-LABEL: test229:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1052
; LA32-NEXT:    vldi $vr1, -796
; LA32-NEXT:    ret
;
; LA64-LABEL: test229:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1052
; LA64-NEXT:    vldi $vr1, -796
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.6250000000, double -0.6250000000 }
}

define dso_local { float, double } @test230() {
; LA32-LABEL: test230:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1051
; LA32-NEXT:    vldi $vr1, -795
; LA32-NEXT:    ret
;
; LA64-LABEL: test230:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1051
; LA64-NEXT:    vldi $vr1, -795
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.6562500000, double -0.6562500000 }
}

define dso_local { float, double } @test231() {
; LA32-LABEL: test231:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1050
; LA32-NEXT:    vldi $vr1, -794
; LA32-NEXT:    ret
;
; LA64-LABEL: test231:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1050
; LA64-NEXT:    vldi $vr1, -794
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.6875000000, double -0.6875000000 }
}

define dso_local { float, double } @test232() {
; LA32-LABEL: test232:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1049
; LA32-NEXT:    vldi $vr1, -793
; LA32-NEXT:    ret
;
; LA64-LABEL: test232:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1049
; LA64-NEXT:    vldi $vr1, -793
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.7187500000, double -0.7187500000 }
}

define dso_local { float, double } @test233() {
; LA32-LABEL: test233:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1048
; LA32-NEXT:    vldi $vr1, -792
; LA32-NEXT:    ret
;
; LA64-LABEL: test233:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1048
; LA64-NEXT:    vldi $vr1, -792
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.7500000000, double -0.7500000000 }
}

define dso_local { float, double } @test234() {
; LA32-LABEL: test234:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1047
; LA32-NEXT:    vldi $vr1, -791
; LA32-NEXT:    ret
;
; LA64-LABEL: test234:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1047
; LA64-NEXT:    vldi $vr1, -791
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.7812500000, double -0.7812500000 }
}

define dso_local { float, double } @test235() {
; LA32-LABEL: test235:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1046
; LA32-NEXT:    vldi $vr1, -790
; LA32-NEXT:    ret
;
; LA64-LABEL: test235:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1046
; LA64-NEXT:    vldi $vr1, -790
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.8125000000, double -0.8125000000 }
}

define dso_local { float, double } @test236() {
; LA32-LABEL: test236:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1045
; LA32-NEXT:    vldi $vr1, -789
; LA32-NEXT:    ret
;
; LA64-LABEL: test236:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1045
; LA64-NEXT:    vldi $vr1, -789
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.8437500000, double -0.8437500000 }
}

define dso_local { float, double } @test237() {
; LA32-LABEL: test237:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1044
; LA32-NEXT:    vldi $vr1, -788
; LA32-NEXT:    ret
;
; LA64-LABEL: test237:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1044
; LA64-NEXT:    vldi $vr1, -788
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.8750000000, double -0.8750000000 }
}

define dso_local { float, double } @test238() {
; LA32-LABEL: test238:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1043
; LA32-NEXT:    vldi $vr1, -787
; LA32-NEXT:    ret
;
; LA64-LABEL: test238:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1043
; LA64-NEXT:    vldi $vr1, -787
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.9062500000, double -0.9062500000 }
}

define dso_local { float, double } @test239() {
; LA32-LABEL: test239:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1042
; LA32-NEXT:    vldi $vr1, -786
; LA32-NEXT:    ret
;
; LA64-LABEL: test239:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1042
; LA64-NEXT:    vldi $vr1, -786
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.9375000000, double -0.9375000000 }
}

define dso_local { float, double } @test240() {
; LA32-LABEL: test240:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1041
; LA32-NEXT:    vldi $vr1, -785
; LA32-NEXT:    ret
;
; LA64-LABEL: test240:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1041
; LA64-NEXT:    vldi $vr1, -785
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -0.9687500000, double -0.9687500000 }
}

define dso_local { float, double } @test241() {
; LA32-LABEL: test241:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1040
; LA32-NEXT:    vldi $vr1, -784
; LA32-NEXT:    ret
;
; LA64-LABEL: test241:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1040
; LA64-NEXT:    vldi $vr1, -784
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.0000000000, double -1.0000000000 }
}

define dso_local { float, double } @test242() {
; LA32-LABEL: test242:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1039
; LA32-NEXT:    vldi $vr1, -783
; LA32-NEXT:    ret
;
; LA64-LABEL: test242:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1039
; LA64-NEXT:    vldi $vr1, -783
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.0625000000, double -1.0625000000 }
}

define dso_local { float, double } @test243() {
; LA32-LABEL: test243:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1038
; LA32-NEXT:    vldi $vr1, -782
; LA32-NEXT:    ret
;
; LA64-LABEL: test243:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1038
; LA64-NEXT:    vldi $vr1, -782
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.1250000000, double -1.1250000000 }
}

define dso_local { float, double } @test244() {
; LA32-LABEL: test244:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1037
; LA32-NEXT:    vldi $vr1, -781
; LA32-NEXT:    ret
;
; LA64-LABEL: test244:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1037
; LA64-NEXT:    vldi $vr1, -781
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.1875000000, double -1.1875000000 }
}

define dso_local { float, double } @test245() {
; LA32-LABEL: test245:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1036
; LA32-NEXT:    vldi $vr1, -780
; LA32-NEXT:    ret
;
; LA64-LABEL: test245:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1036
; LA64-NEXT:    vldi $vr1, -780
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.2500000000, double -1.2500000000 }
}

define dso_local { float, double } @test246() {
; LA32-LABEL: test246:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1035
; LA32-NEXT:    vldi $vr1, -779
; LA32-NEXT:    ret
;
; LA64-LABEL: test246:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1035
; LA64-NEXT:    vldi $vr1, -779
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.3125000000, double -1.3125000000 }
}

define dso_local { float, double } @test247() {
; LA32-LABEL: test247:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1034
; LA32-NEXT:    vldi $vr1, -778
; LA32-NEXT:    ret
;
; LA64-LABEL: test247:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1034
; LA64-NEXT:    vldi $vr1, -778
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.3750000000, double -1.3750000000 }
}

define dso_local { float, double } @test248() {
; LA32-LABEL: test248:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1033
; LA32-NEXT:    vldi $vr1, -777
; LA32-NEXT:    ret
;
; LA64-LABEL: test248:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1033
; LA64-NEXT:    vldi $vr1, -777
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.4375000000, double -1.4375000000 }
}

define dso_local { float, double } @test249() {
; LA32-LABEL: test249:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1032
; LA32-NEXT:    vldi $vr1, -776
; LA32-NEXT:    ret
;
; LA64-LABEL: test249:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1032
; LA64-NEXT:    vldi $vr1, -776
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.5000000000, double -1.5000000000 }
}

define dso_local { float, double } @test250() {
; LA32-LABEL: test250:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1031
; LA32-NEXT:    vldi $vr1, -775
; LA32-NEXT:    ret
;
; LA64-LABEL: test250:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1031
; LA64-NEXT:    vldi $vr1, -775
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.5625000000, double -1.5625000000 }
}

define dso_local { float, double } @test251() {
; LA32-LABEL: test251:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1030
; LA32-NEXT:    vldi $vr1, -774
; LA32-NEXT:    ret
;
; LA64-LABEL: test251:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1030
; LA64-NEXT:    vldi $vr1, -774
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.6250000000, double -1.6250000000 }
}

define dso_local { float, double } @test252() {
; LA32-LABEL: test252:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1029
; LA32-NEXT:    vldi $vr1, -773
; LA32-NEXT:    ret
;
; LA64-LABEL: test252:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1029
; LA64-NEXT:    vldi $vr1, -773
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.6875000000, double -1.6875000000 }
}

define dso_local { float, double } @test253() {
; LA32-LABEL: test253:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1028
; LA32-NEXT:    vldi $vr1, -772
; LA32-NEXT:    ret
;
; LA64-LABEL: test253:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1028
; LA64-NEXT:    vldi $vr1, -772
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.7500000000, double -1.7500000000 }
}

define dso_local { float, double } @test254() {
; LA32-LABEL: test254:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1027
; LA32-NEXT:    vldi $vr1, -771
; LA32-NEXT:    ret
;
; LA64-LABEL: test254:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1027
; LA64-NEXT:    vldi $vr1, -771
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.8125000000, double -1.8125000000 }
}

define dso_local { float, double } @test255() {
; LA32-LABEL: test255:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1026
; LA32-NEXT:    vldi $vr1, -770
; LA32-NEXT:    ret
;
; LA64-LABEL: test255:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1026
; LA64-NEXT:    vldi $vr1, -770
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.8750000000, double -1.8750000000 }
}

define dso_local { float, double } @test256() {
; LA32-LABEL: test256:
; LA32:       # %bb.0: # %entry
; LA32-NEXT:    vldi $vr0, -1025
; LA32-NEXT:    vldi $vr1, -769
; LA32-NEXT:    ret
;
; LA64-LABEL: test256:
; LA64:       # %bb.0: # %entry
; LA64-NEXT:    vldi $vr0, -1025
; LA64-NEXT:    vldi $vr1, -769
; LA64-NEXT:    ret
entry:
  ret { float, double } { float -1.9375000000, double -1.9375000000 }
}
