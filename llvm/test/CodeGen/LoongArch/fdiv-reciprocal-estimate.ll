; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=loongarch64 --mattr=+d,-frecipe < %s | FileCheck %s --check-prefix=FAULT
; RUN: llc --mtriple=loongarch64 --mattr=+d,+frecipe < %s | FileCheck %s

;; Exercise the 'fdiv' LLVM IR: https://llvm.org/docs/LangRef.html#fdiv-instruction

define float @fdiv_s(float %x, float %y) {
; FAULT-LABEL: fdiv_s:
; FAULT:       # %bb.0:
; FAULT-NEXT:    fdiv.s $fa0, $fa0, $fa1
; FAULT-NEXT:    ret
;
; CHECK-LABEL: fdiv_s:
; CHECK:       # %bb.0:
; CHECK-NEXT:    frecipe.s	$fa2, $fa1
; CHECK-NEXT:    fmul.s	$fa3, $fa0, $fa2
; CHECK-NEXT:    fnmsub.s	$fa0, $fa1, $fa3, $fa0
; CHECK-NEXT:    fmadd.s	$fa0, $fa2, $fa0, $fa3
; CHECK-NEXT:    ret
  %div = fdiv fast float %x, %y
  ret float %div
}

define double @fdiv_d(double %x, double %y) {
; FAULT-LABEL: fdiv_d:
; FAULT:       # %bb.0:
; FAULT-NEXT:    fdiv.d $fa0, $fa0, $fa1
; FAULT-NEXT:    ret
;
; CHECK-LABEL: fdiv_d:
; CHECK:       # %bb.0:
; CHECK-NEXT:    pcalau12i	$a0, %pc_hi20(.LCPI1_0)
; CHECK-NEXT:    fld.d	$fa2, $a0, %pc_lo12(.LCPI1_0)
; CHECK-NEXT:    frecipe.d	$fa3, $fa1
; CHECK-NEXT:    fmadd.d	$fa2, $fa1, $fa3, $fa2
; CHECK-NEXT:    fnmsub.d	$fa2, $fa2, $fa3, $fa3
; CHECK-NEXT:    fmul.d	$fa3, $fa0, $fa2
; CHECK-NEXT:    fnmsub.d	$fa0, $fa1, $fa3, $fa0
; CHECK-NEXT:    fmadd.d	$fa0, $fa2, $fa0, $fa3
; CHECK-NEXT:    ret
  %div = fdiv fast double %x, %y
  ret double %div
}
