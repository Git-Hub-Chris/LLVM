# RUN: llc -mtriple=aarch64-none-linux-gnu -run-pass=aarch64-expand-pseudo -o - %s | FileCheck %s

# When expanding a BLR_BTI, we should keep the regmask that was attached to it.
# Otherwise we could end up using a register after the BL which was clobbered by
# the function that was called.
# CHECK:    BUNDLE implicit-def $lr, implicit-def $w30, implicit-def $sp, implicit-def $wsp, implicit $sp {
# CHECK:      BL @_setjmp, csr_aarch64_aapcs, implicit-def $lr, implicit $sp, implicit-def dead $lr, implicit $sp, implicit-def $sp
# CHECK:      HINT 36
# CHECK:    }

# Generated from C, then simplified:
# void _setjmp();
# void a(int b) {
#   _setjmp();
#   for (; b;)
#     ;
# }

--- |
  define void @a() {
    ret void
  }

  declare void @_setjmp(...)
...
---
name: a
stack:
  - { id: 0, type: spill-slot, offset: -16, size: 8, alignment: 16, callee-saved-register: '$x19' }
body: |
  bb.0:
    successors: %bb.2, %bb.1
    liveins: $w0, $lr, $x19

    $w19 = ORRWrr $wzr, $w0
    BLR_BTI @_setjmp, csr_aarch64_aapcs, implicit-def dead $lr, implicit $sp, implicit-def $sp
    CBZW killed renamable $w19, %bb.2

  bb.1:
    B %bb.1

  bb.2:
    $x19 = frame-destroy LDRXui $sp, 2 :: (load (s64) from %stack.0)
    RET_ReallyLR
...
