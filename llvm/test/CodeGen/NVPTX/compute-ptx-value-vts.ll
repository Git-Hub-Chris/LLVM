; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc < %s -march=nvptx64 -mcpu=sm_20 | FileCheck %s

target triple = "nvptx-nvidia-cuda"

define <3 x i64> @long3() {
; CHECK-LABEL: long3(
; CHECK:       {
; CHECK-NEXT:    .reg .b64 %rd<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u64 %rd1, 0;
; CHECK-NEXT:    st.param.v2.b64 [func_retval0+0], {%rd1, %rd1};
; CHECK-NEXT:    st.param.b64 [func_retval0+16], %rd1;
; CHECK-NEXT:    ret;
  ret <3 x i64> zeroinitializer
}

define <1 x i64> @long1() {
; CHECK-LABEL: long1(
; CHECK:       {
; CHECK-NEXT:    .reg .b64 %rd<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u64 %rd1, 0;
; CHECK-NEXT:    st.param.b64 [func_retval0+0], %rd1;
; CHECK-NEXT:    ret;
  ret <1 x i64> zeroinitializer
}

define <6 x i32> @int6() {
; CHECK-LABEL: int6(
; CHECK:       {
; CHECK-NEXT:    .reg .b32 %r<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.b32 %r1, 0;
; CHECK-NEXT:    st.param.v4.b32 [func_retval0+0], {%r1, %r1, %r1, %r1};
; CHECK-NEXT:    st.param.v2.b32 [func_retval0+16], {%r1, %r1};
; CHECK-NEXT:    ret;
  ret <6 x i32> zeroinitializer
}

define <5 x i32> @int5() {
; CHECK-LABEL: int5(
; CHECK:       {
; CHECK-NEXT:    .reg .b32 %r<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.b32 %r1, 0;
; CHECK-NEXT:    st.param.v4.b32 [func_retval0+0], {%r1, %r1, %r1, %r1};
; CHECK-NEXT:    st.param.b32 [func_retval0+16], %r1;
; CHECK-NEXT:    ret;
  ret <5 x i32> zeroinitializer
}

define <3 x i32> @int3() {
; CHECK-LABEL: int3(
; CHECK:       {
; CHECK-NEXT:    .reg .b32 %r<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.b32 %r1, 0;
; CHECK-NEXT:    st.param.v2.b32 [func_retval0+0], {%r1, %r1};
; CHECK-NEXT:    st.param.b32 [func_retval0+8], %r1;
; CHECK-NEXT:    ret;
  ret <3 x i32> zeroinitializer
}

define <1 x i32> @int1() {
; CHECK-LABEL: int1(
; CHECK:       {
; CHECK-NEXT:    .reg .b32 %r<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.b32 %r1, 0;
; CHECK-NEXT:    st.param.b32 [func_retval0+0], %r1;
; CHECK-NEXT:    ret;
  ret <1 x i32> zeroinitializer
}

define <12 x i16> @short12() {
; CHECK-LABEL: short12(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <12 x i16> zeroinitializer
}

define <11 x i16> @short11() {
; CHECK-LABEL: short11(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b16 [func_retval0+16], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b16 [func_retval0+20], %rs1;
; CHECK-NEXT:    ret;
  ret <11 x i16> zeroinitializer
}

define <10 x i16> @short10() {
; CHECK-LABEL: short10(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b16 [func_retval0+16], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <10 x i16> zeroinitializer
}

define <9 x i16> @short9() {
; CHECK-LABEL: short9(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b16 [func_retval0+16], %rs1;
; CHECK-NEXT:    ret;
  ret <9 x i16> zeroinitializer
}

define <7 x i16> @short7() {
; CHECK-LABEL: short7(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b16 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b16 [func_retval0+12], %rs1;
; CHECK-NEXT:    ret;
  ret <7 x i16> zeroinitializer
}

define <6 x i16> @short6() {
; CHECK-LABEL: short6(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b16 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <6 x i16> zeroinitializer
}

define <5 x i16> @short5() {
; CHECK-LABEL: short5(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b16 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b16 [func_retval0+8], %rs1;
; CHECK-NEXT:    ret;
  ret <5 x i16> zeroinitializer
}

define <3 x i16> @short3() {
; CHECK-LABEL: short3(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b16 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b16 [func_retval0+4], %rs1;
; CHECK-NEXT:    ret;
  ret <3 x i16> zeroinitializer
}

define <1 x i16> @short1() {
; CHECK-LABEL: short1(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b16 [func_retval0+0], %rs1;
; CHECK-NEXT:    ret;
  ret <1 x i16> zeroinitializer
}

define <24 x i8> @byte24() {
; CHECK-LABEL: byte24(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <24 x i8> zeroinitializer
}

define <23 x i8> @byte23() {
; CHECK-LABEL: byte23(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+20], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+22], %rs1;
; CHECK-NEXT:    ret;
  ret <23 x i8> zeroinitializer
}

define <22 x i8> @byte22() {
; CHECK-LABEL: byte22(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+20], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <22 x i8> zeroinitializer
}

define <21 x i8> @byte21() {
; CHECK-LABEL: byte21(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+20], %rs1;
; CHECK-NEXT:    ret;
  ret <21 x i8> zeroinitializer
}

define <20 x i8> @byte20() {
; CHECK-LABEL: byte20(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <20 x i8> zeroinitializer
}

define <19 x i8> @byte19() {
; CHECK-LABEL: byte19(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+16], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+18], %rs1;
; CHECK-NEXT:    ret;
  ret <19 x i8> zeroinitializer
}

define <18 x i8> @byte18() {
; CHECK-LABEL: byte18(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+16], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <18 x i8> zeroinitializer
}

define <17 x i8> @byte17() {
; CHECK-LABEL: byte17(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+16], %rs1;
; CHECK-NEXT:    ret;
  ret <17 x i8> zeroinitializer
}

define <15 x i8> @byte15() {
; CHECK-LABEL: byte15(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+12], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+14], %rs1;
; CHECK-NEXT:    ret;
  ret <15 x i8> zeroinitializer
}

define <14 x i8> @byte14() {
; CHECK-LABEL: byte14(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+12], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <14 x i8> zeroinitializer
}

define <13 x i8> @byte13() {
; CHECK-LABEL: byte13(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+12], %rs1;
; CHECK-NEXT:    ret;
  ret <13 x i8> zeroinitializer
}

define <12 x i8> @byte12() {
; CHECK-LABEL: byte12(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <12 x i8> zeroinitializer
}

define <11 x i8> @byte11() {
; CHECK-LABEL: byte11(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+10], %rs1;
; CHECK-NEXT:    ret;
  ret <11 x i8> zeroinitializer
}

define <10 x i8> @byte10() {
; CHECK-LABEL: byte10(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <10 x i8> zeroinitializer
}

define <9 x i8> @byte9() {
; CHECK-LABEL: byte9(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+8], %rs1;
; CHECK-NEXT:    ret;
  ret <9 x i8> zeroinitializer
}

define <7 x i8> @byte7() {
; CHECK-LABEL: byte7(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+6], %rs1;
; CHECK-NEXT:    ret;
  ret <7 x i8> zeroinitializer
}

define <6 x i8> @byte6() {
; CHECK-LABEL: byte6(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <6 x i8> zeroinitializer
}

define <5 x i8> @byte5() {
; CHECK-LABEL: byte5(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+4], %rs1;
; CHECK-NEXT:    ret;
  ret <5 x i8> zeroinitializer
}

define <3 x i8> @byte3() {
; CHECK-LABEL: byte3(
; CHECK:       {
; CHECK-NEXT:    .reg .b32 %r<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.b32 %r1, 0;
; CHECK-NEXT:    st.param.b32 [func_retval0+0], %r1;
; CHECK-NEXT:    ret;
  ret <3 x i8> zeroinitializer
}

define <1 x i8> @byte1() {
; CHECK-LABEL: byte1(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b8 [func_retval0+0], %rs1;
; CHECK-NEXT:    ret;
  ret <1 x i8> zeroinitializer
}

define <192 x i1> @bit192() {
; CHECK-LABEL: bit192(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+184], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+188], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <192 x i1> zeroinitializer
}

define <191 x i1> @bit191() {
; CHECK-LABEL: bit191(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+184], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+188], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+190], %rs1;
; CHECK-NEXT:    ret;
  ret <191 x i1> zeroinitializer
}

define <190 x i1> @bit190() {
; CHECK-LABEL: bit190(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+184], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+188], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <190 x i1> zeroinitializer
}

define <189 x i1> @bit189() {
; CHECK-LABEL: bit189(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+184], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+188], %rs1;
; CHECK-NEXT:    ret;
  ret <189 x i1> zeroinitializer
}

define <188 x i1> @bit188() {
; CHECK-LABEL: bit188(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+184], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <188 x i1> zeroinitializer
}

define <187 x i1> @bit187() {
; CHECK-LABEL: bit187(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+184], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+186], %rs1;
; CHECK-NEXT:    ret;
  ret <187 x i1> zeroinitializer
}

define <186 x i1> @bit186() {
; CHECK-LABEL: bit186(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+184], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <186 x i1> zeroinitializer
}

define <185 x i1> @bit185() {
; CHECK-LABEL: bit185(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+184], %rs1;
; CHECK-NEXT:    ret;
  ret <185 x i1> zeroinitializer
}

define <184 x i1> @bit184() {
; CHECK-LABEL: bit184(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+180], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <184 x i1> zeroinitializer
}

define <183 x i1> @bit183() {
; CHECK-LABEL: bit183(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+180], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+182], %rs1;
; CHECK-NEXT:    ret;
  ret <183 x i1> zeroinitializer
}

define <182 x i1> @bit182() {
; CHECK-LABEL: bit182(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+180], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <182 x i1> zeroinitializer
}

define <181 x i1> @bit181() {
; CHECK-LABEL: bit181(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+180], %rs1;
; CHECK-NEXT:    ret;
  ret <181 x i1> zeroinitializer
}

define <180 x i1> @bit180() {
; CHECK-LABEL: bit180(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+176], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <180 x i1> zeroinitializer
}

define <179 x i1> @bit179() {
; CHECK-LABEL: bit179(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+176], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+178], %rs1;
; CHECK-NEXT:    ret;
  ret <179 x i1> zeroinitializer
}

define <178 x i1> @bit178() {
; CHECK-LABEL: bit178(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+176], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <178 x i1> zeroinitializer
}

define <177 x i1> @bit177() {
; CHECK-LABEL: bit177(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+176], %rs1;
; CHECK-NEXT:    ret;
  ret <177 x i1> zeroinitializer
}

define <176 x i1> @bit176() {
; CHECK-LABEL: bit176(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+172], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <176 x i1> zeroinitializer
}

define <175 x i1> @bit175() {
; CHECK-LABEL: bit175(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+172], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+174], %rs1;
; CHECK-NEXT:    ret;
  ret <175 x i1> zeroinitializer
}

define <174 x i1> @bit174() {
; CHECK-LABEL: bit174(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+172], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <174 x i1> zeroinitializer
}

define <173 x i1> @bit173() {
; CHECK-LABEL: bit173(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+172], %rs1;
; CHECK-NEXT:    ret;
  ret <173 x i1> zeroinitializer
}

define <172 x i1> @bit172() {
; CHECK-LABEL: bit172(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+168], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <172 x i1> zeroinitializer
}

define <171 x i1> @bit171() {
; CHECK-LABEL: bit171(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+168], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+170], %rs1;
; CHECK-NEXT:    ret;
  ret <171 x i1> zeroinitializer
}

define <170 x i1> @bit170() {
; CHECK-LABEL: bit170(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+168], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <170 x i1> zeroinitializer
}

define <169 x i1> @bit169() {
; CHECK-LABEL: bit169(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+168], %rs1;
; CHECK-NEXT:    ret;
  ret <169 x i1> zeroinitializer
}

define <168 x i1> @bit168() {
; CHECK-LABEL: bit168(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+164], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <168 x i1> zeroinitializer
}

define <167 x i1> @bit167() {
; CHECK-LABEL: bit167(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+164], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+166], %rs1;
; CHECK-NEXT:    ret;
  ret <167 x i1> zeroinitializer
}

define <166 x i1> @bit166() {
; CHECK-LABEL: bit166(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+164], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <166 x i1> zeroinitializer
}

define <165 x i1> @bit165() {
; CHECK-LABEL: bit165(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+164], %rs1;
; CHECK-NEXT:    ret;
  ret <165 x i1> zeroinitializer
}

define <164 x i1> @bit164() {
; CHECK-LABEL: bit164(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+160], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <164 x i1> zeroinitializer
}

define <163 x i1> @bit163() {
; CHECK-LABEL: bit163(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+160], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+162], %rs1;
; CHECK-NEXT:    ret;
  ret <163 x i1> zeroinitializer
}

define <162 x i1> @bit162() {
; CHECK-LABEL: bit162(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+160], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <162 x i1> zeroinitializer
}

define <161 x i1> @bit161() {
; CHECK-LABEL: bit161(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+160], %rs1;
; CHECK-NEXT:    ret;
  ret <161 x i1> zeroinitializer
}

define <160 x i1> @bit160() {
; CHECK-LABEL: bit160(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+156], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <160 x i1> zeroinitializer
}

define <159 x i1> @bit159() {
; CHECK-LABEL: bit159(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+156], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+158], %rs1;
; CHECK-NEXT:    ret;
  ret <159 x i1> zeroinitializer
}

define <158 x i1> @bit158() {
; CHECK-LABEL: bit158(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+156], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <158 x i1> zeroinitializer
}

define <157 x i1> @bit157() {
; CHECK-LABEL: bit157(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+156], %rs1;
; CHECK-NEXT:    ret;
  ret <157 x i1> zeroinitializer
}

define <156 x i1> @bit156() {
; CHECK-LABEL: bit156(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+152], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <156 x i1> zeroinitializer
}

define <155 x i1> @bit155() {
; CHECK-LABEL: bit155(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+152], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+154], %rs1;
; CHECK-NEXT:    ret;
  ret <155 x i1> zeroinitializer
}

define <154 x i1> @bit154() {
; CHECK-LABEL: bit154(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+152], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <154 x i1> zeroinitializer
}

define <153 x i1> @bit153() {
; CHECK-LABEL: bit153(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+152], %rs1;
; CHECK-NEXT:    ret;
  ret <153 x i1> zeroinitializer
}

define <152 x i1> @bit152() {
; CHECK-LABEL: bit152(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+148], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <152 x i1> zeroinitializer
}

define <151 x i1> @bit151() {
; CHECK-LABEL: bit151(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+148], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+150], %rs1;
; CHECK-NEXT:    ret;
  ret <151 x i1> zeroinitializer
}

define <150 x i1> @bit150() {
; CHECK-LABEL: bit150(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+148], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <150 x i1> zeroinitializer
}

define <149 x i1> @bit149() {
; CHECK-LABEL: bit149(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+148], %rs1;
; CHECK-NEXT:    ret;
  ret <149 x i1> zeroinitializer
}

define <148 x i1> @bit148() {
; CHECK-LABEL: bit148(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+144], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <148 x i1> zeroinitializer
}

define <147 x i1> @bit147() {
; CHECK-LABEL: bit147(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+144], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+146], %rs1;
; CHECK-NEXT:    ret;
  ret <147 x i1> zeroinitializer
}

define <146 x i1> @bit146() {
; CHECK-LABEL: bit146(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+144], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <146 x i1> zeroinitializer
}

define <145 x i1> @bit145() {
; CHECK-LABEL: bit145(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+144], %rs1;
; CHECK-NEXT:    ret;
  ret <145 x i1> zeroinitializer
}

define <144 x i1> @bit144() {
; CHECK-LABEL: bit144(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+140], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <144 x i1> zeroinitializer
}

define <143 x i1> @bit143() {
; CHECK-LABEL: bit143(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+140], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+142], %rs1;
; CHECK-NEXT:    ret;
  ret <143 x i1> zeroinitializer
}

define <142 x i1> @bit142() {
; CHECK-LABEL: bit142(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+140], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <142 x i1> zeroinitializer
}

define <141 x i1> @bit141() {
; CHECK-LABEL: bit141(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+140], %rs1;
; CHECK-NEXT:    ret;
  ret <141 x i1> zeroinitializer
}

define <140 x i1> @bit140() {
; CHECK-LABEL: bit140(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+136], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <140 x i1> zeroinitializer
}

define <139 x i1> @bit139() {
; CHECK-LABEL: bit139(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+136], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+138], %rs1;
; CHECK-NEXT:    ret;
  ret <139 x i1> zeroinitializer
}

define <138 x i1> @bit138() {
; CHECK-LABEL: bit138(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+136], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <138 x i1> zeroinitializer
}

define <137 x i1> @bit137() {
; CHECK-LABEL: bit137(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+136], %rs1;
; CHECK-NEXT:    ret;
  ret <137 x i1> zeroinitializer
}

define <136 x i1> @bit136() {
; CHECK-LABEL: bit136(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+132], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <136 x i1> zeroinitializer
}

define <135 x i1> @bit135() {
; CHECK-LABEL: bit135(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+132], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+134], %rs1;
; CHECK-NEXT:    ret;
  ret <135 x i1> zeroinitializer
}

define <134 x i1> @bit134() {
; CHECK-LABEL: bit134(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+132], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <134 x i1> zeroinitializer
}

define <133 x i1> @bit133() {
; CHECK-LABEL: bit133(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+132], %rs1;
; CHECK-NEXT:    ret;
  ret <133 x i1> zeroinitializer
}

define <132 x i1> @bit132() {
; CHECK-LABEL: bit132(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+128], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <132 x i1> zeroinitializer
}

define <131 x i1> @bit131() {
; CHECK-LABEL: bit131(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+128], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+130], %rs1;
; CHECK-NEXT:    ret;
  ret <131 x i1> zeroinitializer
}

define <130 x i1> @bit130() {
; CHECK-LABEL: bit130(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+128], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <130 x i1> zeroinitializer
}

define <129 x i1> @bit129() {
; CHECK-LABEL: bit129(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+124], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+128], %rs1;
; CHECK-NEXT:    ret;
  ret <129 x i1> zeroinitializer
}

define <127 x i1> @bit127() {
; CHECK-LABEL: bit127(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+124], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+126], %rs1;
; CHECK-NEXT:    ret;
  ret <127 x i1> zeroinitializer
}

define <126 x i1> @bit126() {
; CHECK-LABEL: bit126(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+124], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <126 x i1> zeroinitializer
}

define <125 x i1> @bit125() {
; CHECK-LABEL: bit125(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+124], %rs1;
; CHECK-NEXT:    ret;
  ret <125 x i1> zeroinitializer
}

define <124 x i1> @bit124() {
; CHECK-LABEL: bit124(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+120], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <124 x i1> zeroinitializer
}

define <123 x i1> @bit123() {
; CHECK-LABEL: bit123(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+120], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+122], %rs1;
; CHECK-NEXT:    ret;
  ret <123 x i1> zeroinitializer
}

define <122 x i1> @bit122() {
; CHECK-LABEL: bit122(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+120], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <122 x i1> zeroinitializer
}

define <121 x i1> @bit121() {
; CHECK-LABEL: bit121(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+120], %rs1;
; CHECK-NEXT:    ret;
  ret <121 x i1> zeroinitializer
}

define <120 x i1> @bit120() {
; CHECK-LABEL: bit120(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+116], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <120 x i1> zeroinitializer
}

define <119 x i1> @bit119() {
; CHECK-LABEL: bit119(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+116], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+118], %rs1;
; CHECK-NEXT:    ret;
  ret <119 x i1> zeroinitializer
}

define <118 x i1> @bit118() {
; CHECK-LABEL: bit118(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+116], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <118 x i1> zeroinitializer
}

define <117 x i1> @bit117() {
; CHECK-LABEL: bit117(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+116], %rs1;
; CHECK-NEXT:    ret;
  ret <117 x i1> zeroinitializer
}

define <116 x i1> @bit116() {
; CHECK-LABEL: bit116(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+112], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <116 x i1> zeroinitializer
}

define <115 x i1> @bit115() {
; CHECK-LABEL: bit115(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+112], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+114], %rs1;
; CHECK-NEXT:    ret;
  ret <115 x i1> zeroinitializer
}

define <114 x i1> @bit114() {
; CHECK-LABEL: bit114(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+112], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <114 x i1> zeroinitializer
}

define <113 x i1> @bit113() {
; CHECK-LABEL: bit113(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+112], %rs1;
; CHECK-NEXT:    ret;
  ret <113 x i1> zeroinitializer
}

define <112 x i1> @bit112() {
; CHECK-LABEL: bit112(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+108], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <112 x i1> zeroinitializer
}

define <111 x i1> @bit111() {
; CHECK-LABEL: bit111(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+108], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+110], %rs1;
; CHECK-NEXT:    ret;
  ret <111 x i1> zeroinitializer
}

define <110 x i1> @bit110() {
; CHECK-LABEL: bit110(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+108], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <110 x i1> zeroinitializer
}

define <109 x i1> @bit109() {
; CHECK-LABEL: bit109(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+108], %rs1;
; CHECK-NEXT:    ret;
  ret <109 x i1> zeroinitializer
}

define <108 x i1> @bit108() {
; CHECK-LABEL: bit108(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+104], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <108 x i1> zeroinitializer
}

define <107 x i1> @bit107() {
; CHECK-LABEL: bit107(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+104], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+106], %rs1;
; CHECK-NEXT:    ret;
  ret <107 x i1> zeroinitializer
}

define <106 x i1> @bit106() {
; CHECK-LABEL: bit106(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+104], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <106 x i1> zeroinitializer
}

define <105 x i1> @bit105() {
; CHECK-LABEL: bit105(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+104], %rs1;
; CHECK-NEXT:    ret;
  ret <105 x i1> zeroinitializer
}

define <104 x i1> @bit104() {
; CHECK-LABEL: bit104(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+100], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <104 x i1> zeroinitializer
}

define <103 x i1> @bit103() {
; CHECK-LABEL: bit103(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+100], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+102], %rs1;
; CHECK-NEXT:    ret;
  ret <103 x i1> zeroinitializer
}

define <102 x i1> @bit102() {
; CHECK-LABEL: bit102(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+100], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <102 x i1> zeroinitializer
}

define <101 x i1> @bit101() {
; CHECK-LABEL: bit101(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+100], %rs1;
; CHECK-NEXT:    ret;
  ret <101 x i1> zeroinitializer
}

define <100 x i1> @bit100() {
; CHECK-LABEL: bit100(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+96], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <100 x i1> zeroinitializer
}

define <99 x i1> @bit99() {
; CHECK-LABEL: bit99(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+96], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+98], %rs1;
; CHECK-NEXT:    ret;
  ret <99 x i1> zeroinitializer
}

define <98 x i1> @bit98() {
; CHECK-LABEL: bit98(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+96], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <98 x i1> zeroinitializer
}

define <97 x i1> @bit97() {
; CHECK-LABEL: bit97(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+96], %rs1;
; CHECK-NEXT:    ret;
  ret <97 x i1> zeroinitializer
}

define <96 x i1> @bit96() {
; CHECK-LABEL: bit96(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+92], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <96 x i1> zeroinitializer
}

define <95 x i1> @bit95() {
; CHECK-LABEL: bit95(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+92], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+94], %rs1;
; CHECK-NEXT:    ret;
  ret <95 x i1> zeroinitializer
}

define <94 x i1> @bit94() {
; CHECK-LABEL: bit94(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+92], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <94 x i1> zeroinitializer
}

define <93 x i1> @bit93() {
; CHECK-LABEL: bit93(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+92], %rs1;
; CHECK-NEXT:    ret;
  ret <93 x i1> zeroinitializer
}

define <92 x i1> @bit92() {
; CHECK-LABEL: bit92(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+88], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <92 x i1> zeroinitializer
}

define <91 x i1> @bit91() {
; CHECK-LABEL: bit91(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+88], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+90], %rs1;
; CHECK-NEXT:    ret;
  ret <91 x i1> zeroinitializer
}

define <90 x i1> @bit90() {
; CHECK-LABEL: bit90(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+88], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <90 x i1> zeroinitializer
}

define <89 x i1> @bit89() {
; CHECK-LABEL: bit89(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+88], %rs1;
; CHECK-NEXT:    ret;
  ret <89 x i1> zeroinitializer
}

define <88 x i1> @bit88() {
; CHECK-LABEL: bit88(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+84], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <88 x i1> zeroinitializer
}

define <87 x i1> @bit87() {
; CHECK-LABEL: bit87(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+84], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+86], %rs1;
; CHECK-NEXT:    ret;
  ret <87 x i1> zeroinitializer
}

define <86 x i1> @bit86() {
; CHECK-LABEL: bit86(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+84], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <86 x i1> zeroinitializer
}

define <85 x i1> @bit85() {
; CHECK-LABEL: bit85(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+84], %rs1;
; CHECK-NEXT:    ret;
  ret <85 x i1> zeroinitializer
}

define <84 x i1> @bit84() {
; CHECK-LABEL: bit84(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+80], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <84 x i1> zeroinitializer
}

define <83 x i1> @bit83() {
; CHECK-LABEL: bit83(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+80], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+82], %rs1;
; CHECK-NEXT:    ret;
  ret <83 x i1> zeroinitializer
}

define <82 x i1> @bit82() {
; CHECK-LABEL: bit82(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+80], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <82 x i1> zeroinitializer
}

define <81 x i1> @bit81() {
; CHECK-LABEL: bit81(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+80], %rs1;
; CHECK-NEXT:    ret;
  ret <81 x i1> zeroinitializer
}

define <80 x i1> @bit80() {
; CHECK-LABEL: bit80(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+76], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <80 x i1> zeroinitializer
}

define <79 x i1> @bit79() {
; CHECK-LABEL: bit79(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+76], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+78], %rs1;
; CHECK-NEXT:    ret;
  ret <79 x i1> zeroinitializer
}

define <78 x i1> @bit78() {
; CHECK-LABEL: bit78(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+76], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <78 x i1> zeroinitializer
}

define <77 x i1> @bit77() {
; CHECK-LABEL: bit77(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+76], %rs1;
; CHECK-NEXT:    ret;
  ret <77 x i1> zeroinitializer
}

define <76 x i1> @bit76() {
; CHECK-LABEL: bit76(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+72], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <76 x i1> zeroinitializer
}

define <75 x i1> @bit75() {
; CHECK-LABEL: bit75(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+72], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+74], %rs1;
; CHECK-NEXT:    ret;
  ret <75 x i1> zeroinitializer
}

define <74 x i1> @bit74() {
; CHECK-LABEL: bit74(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+72], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <74 x i1> zeroinitializer
}

define <73 x i1> @bit73() {
; CHECK-LABEL: bit73(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+72], %rs1;
; CHECK-NEXT:    ret;
  ret <73 x i1> zeroinitializer
}

define <72 x i1> @bit72() {
; CHECK-LABEL: bit72(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+68], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <72 x i1> zeroinitializer
}

define <71 x i1> @bit71() {
; CHECK-LABEL: bit71(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+68], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+70], %rs1;
; CHECK-NEXT:    ret;
  ret <71 x i1> zeroinitializer
}

define <70 x i1> @bit70() {
; CHECK-LABEL: bit70(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+68], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <70 x i1> zeroinitializer
}

define <69 x i1> @bit69() {
; CHECK-LABEL: bit69(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+68], %rs1;
; CHECK-NEXT:    ret;
  ret <69 x i1> zeroinitializer
}

define <68 x i1> @bit68() {
; CHECK-LABEL: bit68(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+64], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <68 x i1> zeroinitializer
}

define <67 x i1> @bit67() {
; CHECK-LABEL: bit67(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+64], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+66], %rs1;
; CHECK-NEXT:    ret;
  ret <67 x i1> zeroinitializer
}

define <66 x i1> @bit66() {
; CHECK-LABEL: bit66(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+64], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <66 x i1> zeroinitializer
}

define <65 x i1> @bit65() {
; CHECK-LABEL: bit65(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+60], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+64], %rs1;
; CHECK-NEXT:    ret;
  ret <65 x i1> zeroinitializer
}

define <63 x i1> @bit63() {
; CHECK-LABEL: bit63(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+60], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+62], %rs1;
; CHECK-NEXT:    ret;
  ret <63 x i1> zeroinitializer
}

define <62 x i1> @bit62() {
; CHECK-LABEL: bit62(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+60], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <62 x i1> zeroinitializer
}

define <61 x i1> @bit61() {
; CHECK-LABEL: bit61(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+60], %rs1;
; CHECK-NEXT:    ret;
  ret <61 x i1> zeroinitializer
}

define <60 x i1> @bit60() {
; CHECK-LABEL: bit60(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+56], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <60 x i1> zeroinitializer
}

define <59 x i1> @bit59() {
; CHECK-LABEL: bit59(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+56], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+58], %rs1;
; CHECK-NEXT:    ret;
  ret <59 x i1> zeroinitializer
}

define <58 x i1> @bit58() {
; CHECK-LABEL: bit58(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+56], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <58 x i1> zeroinitializer
}

define <57 x i1> @bit57() {
; CHECK-LABEL: bit57(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+56], %rs1;
; CHECK-NEXT:    ret;
  ret <57 x i1> zeroinitializer
}

define <56 x i1> @bit56() {
; CHECK-LABEL: bit56(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+52], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <56 x i1> zeroinitializer
}

define <55 x i1> @bit55() {
; CHECK-LABEL: bit55(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+52], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+54], %rs1;
; CHECK-NEXT:    ret;
  ret <55 x i1> zeroinitializer
}

define <54 x i1> @bit54() {
; CHECK-LABEL: bit54(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+52], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <54 x i1> zeroinitializer
}

define <53 x i1> @bit53() {
; CHECK-LABEL: bit53(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+52], %rs1;
; CHECK-NEXT:    ret;
  ret <53 x i1> zeroinitializer
}

define <52 x i1> @bit52() {
; CHECK-LABEL: bit52(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+48], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <52 x i1> zeroinitializer
}

define <51 x i1> @bit51() {
; CHECK-LABEL: bit51(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+48], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+50], %rs1;
; CHECK-NEXT:    ret;
  ret <51 x i1> zeroinitializer
}

define <50 x i1> @bit50() {
; CHECK-LABEL: bit50(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+48], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <50 x i1> zeroinitializer
}

define <49 x i1> @bit49() {
; CHECK-LABEL: bit49(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+48], %rs1;
; CHECK-NEXT:    ret;
  ret <49 x i1> zeroinitializer
}

define <48 x i1> @bit48() {
; CHECK-LABEL: bit48(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+44], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <48 x i1> zeroinitializer
}

define <47 x i1> @bit47() {
; CHECK-LABEL: bit47(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+44], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+46], %rs1;
; CHECK-NEXT:    ret;
  ret <47 x i1> zeroinitializer
}

define <46 x i1> @bit46() {
; CHECK-LABEL: bit46(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+44], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <46 x i1> zeroinitializer
}

define <45 x i1> @bit45() {
; CHECK-LABEL: bit45(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+44], %rs1;
; CHECK-NEXT:    ret;
  ret <45 x i1> zeroinitializer
}

define <44 x i1> @bit44() {
; CHECK-LABEL: bit44(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+40], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <44 x i1> zeroinitializer
}

define <43 x i1> @bit43() {
; CHECK-LABEL: bit43(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+40], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+42], %rs1;
; CHECK-NEXT:    ret;
  ret <43 x i1> zeroinitializer
}

define <42 x i1> @bit42() {
; CHECK-LABEL: bit42(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+40], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <42 x i1> zeroinitializer
}

define <41 x i1> @bit41() {
; CHECK-LABEL: bit41(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+40], %rs1;
; CHECK-NEXT:    ret;
  ret <41 x i1> zeroinitializer
}

define <40 x i1> @bit40() {
; CHECK-LABEL: bit40(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+36], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <40 x i1> zeroinitializer
}

define <39 x i1> @bit39() {
; CHECK-LABEL: bit39(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+36], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+38], %rs1;
; CHECK-NEXT:    ret;
  ret <39 x i1> zeroinitializer
}

define <38 x i1> @bit38() {
; CHECK-LABEL: bit38(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+36], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <38 x i1> zeroinitializer
}

define <37 x i1> @bit37() {
; CHECK-LABEL: bit37(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+36], %rs1;
; CHECK-NEXT:    ret;
  ret <37 x i1> zeroinitializer
}

define <36 x i1> @bit36() {
; CHECK-LABEL: bit36(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+32], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <36 x i1> zeroinitializer
}

define <35 x i1> @bit35() {
; CHECK-LABEL: bit35(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+32], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+34], %rs1;
; CHECK-NEXT:    ret;
  ret <35 x i1> zeroinitializer
}

define <34 x i1> @bit34() {
; CHECK-LABEL: bit34(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+32], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <34 x i1> zeroinitializer
}

define <33 x i1> @bit33() {
; CHECK-LABEL: bit33(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+28], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+32], %rs1;
; CHECK-NEXT:    ret;
  ret <33 x i1> zeroinitializer
}

define <31 x i1> @bit31() {
; CHECK-LABEL: bit31(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+28], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+30], %rs1;
; CHECK-NEXT:    ret;
  ret <31 x i1> zeroinitializer
}

define <30 x i1> @bit30() {
; CHECK-LABEL: bit30(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+28], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <30 x i1> zeroinitializer
}

define <29 x i1> @bit29() {
; CHECK-LABEL: bit29(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+28], %rs1;
; CHECK-NEXT:    ret;
  ret <29 x i1> zeroinitializer
}

define <28 x i1> @bit28() {
; CHECK-LABEL: bit28(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+24], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <28 x i1> zeroinitializer
}

define <27 x i1> @bit27() {
; CHECK-LABEL: bit27(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+24], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+26], %rs1;
; CHECK-NEXT:    ret;
  ret <27 x i1> zeroinitializer
}

define <26 x i1> @bit26() {
; CHECK-LABEL: bit26(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+24], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <26 x i1> zeroinitializer
}

define <25 x i1> @bit25() {
; CHECK-LABEL: bit25(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+24], %rs1;
; CHECK-NEXT:    ret;
  ret <25 x i1> zeroinitializer
}

define <24 x i1> @bit24() {
; CHECK-LABEL: bit24(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+20], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <24 x i1> zeroinitializer
}

define <23 x i1> @bit23() {
; CHECK-LABEL: bit23(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+20], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+22], %rs1;
; CHECK-NEXT:    ret;
  ret <23 x i1> zeroinitializer
}

define <22 x i1> @bit22() {
; CHECK-LABEL: bit22(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+20], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <22 x i1> zeroinitializer
}

define <21 x i1> @bit21() {
; CHECK-LABEL: bit21(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+20], %rs1;
; CHECK-NEXT:    ret;
  ret <21 x i1> zeroinitializer
}

define <20 x i1> @bit20() {
; CHECK-LABEL: bit20(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+16], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <20 x i1> zeroinitializer
}

define <19 x i1> @bit19() {
; CHECK-LABEL: bit19(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+16], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+18], %rs1;
; CHECK-NEXT:    ret;
  ret <19 x i1> zeroinitializer
}

define <18 x i1> @bit18() {
; CHECK-LABEL: bit18(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+16], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <18 x i1> zeroinitializer
}

define <17 x i1> @bit17() {
; CHECK-LABEL: bit17(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+0], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+4], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+8], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.v4.b8 [func_retval0+12], {%rs1, %rs1, %rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+16], %rs1;
; CHECK-NEXT:    ret;
  ret <17 x i1> zeroinitializer
}

define <15 x i1> @bit15() {
; CHECK-LABEL: bit15(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+10], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+12], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+14], %rs1;
; CHECK-NEXT:    ret;
  ret <15 x i1> zeroinitializer
}

define <14 x i1> @bit14() {
; CHECK-LABEL: bit14(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+10], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+12], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <14 x i1> zeroinitializer
}

define <13 x i1> @bit13() {
; CHECK-LABEL: bit13(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+10], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+12], %rs1;
; CHECK-NEXT:    ret;
  ret <13 x i1> zeroinitializer
}

define <12 x i1> @bit12() {
; CHECK-LABEL: bit12(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+10], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <12 x i1> zeroinitializer
}

define <11 x i1> @bit11() {
; CHECK-LABEL: bit11(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+10], %rs1;
; CHECK-NEXT:    ret;
  ret <11 x i1> zeroinitializer
}

define <10 x i1> @bit10() {
; CHECK-LABEL: bit10(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+8], {%rs1, %rs1};
; CHECK-NEXT:    ret;
  ret <10 x i1> zeroinitializer
}

define <9 x i1> @bit9() {
; CHECK-LABEL: bit9(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+0], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+2], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+4], {%rs1, %rs1};
; CHECK-NEXT:    st.param.v2.b8 [func_retval0+6], {%rs1, %rs1};
; CHECK-NEXT:    st.param.b8 [func_retval0+8], %rs1;
; CHECK-NEXT:    ret;
  ret <9 x i1> zeroinitializer
}

define <7 x i1> @bit7() {
; CHECK-LABEL: bit7(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b8 [func_retval0+0], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+1], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+2], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+3], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+4], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+5], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+6], %rs1;
; CHECK-NEXT:    ret;
  ret <7 x i1> zeroinitializer
}

define <6 x i1> @bit6() {
; CHECK-LABEL: bit6(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b8 [func_retval0+0], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+1], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+2], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+3], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+4], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+5], %rs1;
; CHECK-NEXT:    ret;
  ret <6 x i1> zeroinitializer
}

define <5 x i1> @bit5() {
; CHECK-LABEL: bit5(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b8 [func_retval0+0], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+1], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+2], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+3], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+4], %rs1;
; CHECK-NEXT:    ret;
  ret <5 x i1> zeroinitializer
}

define <3 x i1> @bit3() {
; CHECK-LABEL: bit3(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b8 [func_retval0+0], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+1], %rs1;
; CHECK-NEXT:    st.param.b8 [func_retval0+2], %rs1;
; CHECK-NEXT:    ret;
  ret <3 x i1> zeroinitializer
}

define <1 x i1> @bit1() {
; CHECK-LABEL: bit1(
; CHECK:       {
; CHECK-NEXT:    .reg .b16 %rs<2>;
; CHECK-EMPTY:
; CHECK-NEXT:  // %bb.0:
; CHECK-NEXT:    mov.u16 %rs1, 0;
; CHECK-NEXT:    st.param.b8 [func_retval0+0], %rs1;
; CHECK-NEXT:    ret;
  ret <1 x i1> zeroinitializer
}
