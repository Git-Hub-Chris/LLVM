; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; Test 64-bit atomic stores. Expect libcall without natural alignment.
;
; RUN: llc < %s -mtriple=s390x-linux-gnu | FileCheck %s

define void @f1(i64 %val, ptr %src) {
; CHECK-LABEL: f1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    stg %r2, 0(%r3)
; CHECK-NEXT:    bcr 15, %r0
; CHECK-NEXT:    br %r14
  store atomic i64 %val, ptr %src seq_cst, align 8
  ret void
}

define void @f2(i64 %val, ptr %src) {
; CHECK-LABEL: f2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    stg %r2, 0(%r3)
; CHECK-NEXT:    br %r14
  store atomic i64 %val, ptr %src monotonic, align 8
  ret void
}

define void @f3(i64 %val, ptr %src) {
; CHECK-LABEL: f3:
; CHECK:       # %bb.0:
; CHECK-NEXT:    stmg %r14, %r15, 112(%r15)
; CHECK-NEXT:    .cfi_offset %r14, -48
; CHECK-NEXT:    .cfi_offset %r15, -40
; CHECK-NEXT:    aghi %r15, -168
; CHECK-NEXT:    .cfi_def_cfa_offset 328
; CHECK-NEXT:    stg %r2, 160(%r15)
; CHECK-NEXT:    la %r4, 160(%r15)
; CHECK-NEXT:    lghi %r2, 8
; CHECK-NEXT:    lhi %r5, 0
; CHECK-NEXT:    brasl %r14, __atomic_store@PLT
; CHECK-NEXT:    lmg %r14, %r15, 280(%r15)
; CHECK-NEXT:    br %r14
  store atomic i64 %val, ptr %src monotonic, align 4
  ret void
}
