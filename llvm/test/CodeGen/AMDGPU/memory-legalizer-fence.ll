; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx600 < %s | FileCheck --check-prefixes=GFX6 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx700 < %s | FileCheck --check-prefixes=GFX7 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 < %s | FileCheck --check-prefixes=GFX10-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX10-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdpal -stop-after=si-memory-legalizer -mcpu=gfx700 -amdgcn-skip-cache-invalidations < %s | FileCheck --check-prefixes=SKIP-CACHE-INV %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a < %s | FileCheck -check-prefixes=GFX90A-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX90A-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 < %s | FileCheck -check-prefixes=GFX940-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX940-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 < %s | FileCheck --check-prefixes=GFX11-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX11-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 < %s | FileCheck --check-prefixes=GFX12-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX12-CU %s

define amdgpu_kernel void @singlethread_acquire_fence() {
  ; GFX6-LABEL: name: singlethread_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread") acquire
  ret void
}

define amdgpu_kernel void @singlethread_release_fence() {
  ; GFX6-LABEL: name: singlethread_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread") release
  ret void
}

define amdgpu_kernel void @singlethread_acq_rel_fence() {
  ; GFX6-LABEL: name: singlethread_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread") acq_rel
  ret void
}

define amdgpu_kernel void @singlethread_seq_cst_fence() {
  ; GFX6-LABEL: name: singlethread_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread") seq_cst
  ret void
}

define amdgpu_kernel void @singlethread_one_as_acquire_fence() {
  ; GFX6-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_one_as_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_one_as_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread-one-as") acquire
  ret void
}

define amdgpu_kernel void @singlethread_one_as_release_fence() {
  ; GFX6-LABEL: name: singlethread_one_as_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_one_as_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_one_as_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_one_as_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_one_as_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_one_as_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_one_as_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_one_as_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_one_as_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_one_as_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_one_as_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_one_as_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_one_as_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread-one-as") release
  ret void
}

define amdgpu_kernel void @singlethread_one_as_acq_rel_fence() {
  ; GFX6-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_one_as_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_one_as_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @singlethread_one_as_seq_cst_fence() {
  ; GFX6-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: singlethread_one_as_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: singlethread_one_as_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("singlethread-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @wavefront_acquire_fence() {
  ; GFX6-LABEL: name: wavefront_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront") acquire
  ret void
}

define amdgpu_kernel void @wavefront_release_fence() {
  ; GFX6-LABEL: name: wavefront_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront") release
  ret void
}

define amdgpu_kernel void @wavefront_acq_rel_fence() {
  ; GFX6-LABEL: name: wavefront_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront") acq_rel
  ret void
}

define amdgpu_kernel void @wavefront_seq_cst_fence() {
  ; GFX6-LABEL: name: wavefront_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront") seq_cst
  ret void
}

define amdgpu_kernel void @wavefront_one_as_acquire_fence() {
  ; GFX6-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_one_as_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_one_as_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront-one-as") acquire
  ret void
}

define amdgpu_kernel void @wavefront_one_as_release_fence() {
  ; GFX6-LABEL: name: wavefront_one_as_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_one_as_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_one_as_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_one_as_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_one_as_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_one_as_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_one_as_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_one_as_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_one_as_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_one_as_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_one_as_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_one_as_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_one_as_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront-one-as") release
  ret void
}

define amdgpu_kernel void @wavefront_one_as_acq_rel_fence() {
  ; GFX6-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_one_as_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_one_as_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @wavefront_one_as_seq_cst_fence() {
  ; GFX6-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: wavefront_one_as_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: wavefront_one_as_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("wavefront-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @workgroup_acquire_fence() {
  ; GFX6-LABEL: name: workgroup_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup") acquire
  ret void
}

define amdgpu_kernel void @workgroup_release_fence() {
  ; GFX6-LABEL: name: workgroup_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup") release
  ret void
}

define amdgpu_kernel void @workgroup_acq_rel_fence() {
  ; GFX6-LABEL: name: workgroup_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup") acq_rel
  ret void
}

define amdgpu_kernel void @workgroup_seq_cst_fence() {
  ; GFX6-LABEL: name: workgroup_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup") seq_cst
  ret void
}

define amdgpu_kernel void @workgroup_one_as_acquire_fence() {
  ; GFX6-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_one_as_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_one_as_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup-one-as") acquire
  ret void
}

define amdgpu_kernel void @workgroup_one_as_release_fence() {
  ; GFX6-LABEL: name: workgroup_one_as_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_one_as_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_one_as_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_one_as_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_one_as_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_one_as_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_one_as_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_one_as_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_one_as_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_one_as_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_one_as_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_one_as_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_one_as_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup-one-as") release
  ret void
}

define amdgpu_kernel void @workgroup_one_as_acq_rel_fence() {
  ; GFX6-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_one_as_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_one_as_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @workgroup_one_as_seq_cst_fence() {
  ; GFX6-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: workgroup_one_as_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: workgroup_one_as_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("workgroup-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @agent_acquire_fence() {
  ; GFX6-LABEL: name: agent_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent") acquire
  ret void
}

define amdgpu_kernel void @agent_release_fence() {
  ; GFX6-LABEL: name: agent_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent") release
  ret void
}

define amdgpu_kernel void @agent_acq_rel_fence() {
  ; GFX6-LABEL: name: agent_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent") acq_rel
  ret void
}

define amdgpu_kernel void @agent_seq_cst_fence() {
  ; GFX6-LABEL: name: agent_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent") seq_cst
  ret void
}

define amdgpu_kernel void @agent_one_as_acquire_fence() {
  ; GFX6-LABEL: name: agent_one_as_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_one_as_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_one_as_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_one_as_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_one_as_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_one_as_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_one_as_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_one_as_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_one_as_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_one_as_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_one_as_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_one_as_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_one_as_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent-one-as") acquire
  ret void
}

define amdgpu_kernel void @agent_one_as_release_fence() {
  ; GFX6-LABEL: name: agent_one_as_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_one_as_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_one_as_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_one_as_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_one_as_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_one_as_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_one_as_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_one_as_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_one_as_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_one_as_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_one_as_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_one_as_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_one_as_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent-one-as") release
  ret void
}

define amdgpu_kernel void @agent_one_as_acq_rel_fence() {
  ; GFX6-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_one_as_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_one_as_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @agent_one_as_seq_cst_fence() {
  ; GFX6-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: agent_one_as_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: agent_one_as_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("agent-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @system_acquire_fence() {
  ; GFX6-LABEL: name: system_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence acquire
  ret void
}

define amdgpu_kernel void @system_release_fence() {
  ; GFX6-LABEL: name: system_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence release
  ret void
}

define amdgpu_kernel void @system_acq_rel_fence() {
  ; GFX6-LABEL: name: system_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence acq_rel
  ret void
}

define amdgpu_kernel void @system_seq_cst_fence() {
  ; GFX6-LABEL: name: system_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence seq_cst
  ret void
}

define amdgpu_kernel void @system_one_as_acquire_fence() {
  ; GFX6-LABEL: name: system_one_as_acquire_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_one_as_acquire_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_one_as_acquire_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_one_as_acquire_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_one_as_acquire_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_one_as_acquire_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_one_as_acquire_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_one_as_acquire_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_one_as_acquire_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_one_as_acquire_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_one_as_acquire_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_one_as_acquire_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_one_as_acquire_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("one-as") acquire
  ret void
}

define amdgpu_kernel void @system_one_as_release_fence() {
  ; GFX6-LABEL: name: system_one_as_release_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_one_as_release_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_one_as_release_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_one_as_release_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_one_as_release_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_one_as_release_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_one_as_release_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_one_as_release_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_one_as_release_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_one_as_release_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_one_as_release_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_one_as_release_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_one_as_release_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("one-as") release
  ret void
}

define amdgpu_kernel void @system_one_as_acq_rel_fence() {
  ; GFX6-LABEL: name: system_one_as_acq_rel_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_one_as_acq_rel_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_one_as_acq_rel_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_one_as_acq_rel_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_one_as_acq_rel_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_one_as_acq_rel_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_one_as_acq_rel_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_one_as_acq_rel_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_one_as_acq_rel_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_one_as_acq_rel_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_one_as_acq_rel_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_one_as_acq_rel_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_one_as_acq_rel_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("one-as") acq_rel
  ret void
}

define amdgpu_kernel void @system_one_as_seq_cst_fence() {
  ; GFX6-LABEL: name: system_one_as_seq_cst_fence
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: system_one_as_seq_cst_fence
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: system_one_as_seq_cst_fence
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: system_one_as_seq_cst_fence
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: system_one_as_seq_cst_fence
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: system_one_as_seq_cst_fence
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: system_one_as_seq_cst_fence
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_INVL2 implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: system_one_as_seq_cst_fence
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: system_one_as_seq_cst_fence
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 17, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: system_one_as_seq_cst_fence
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: system_one_as_seq_cst_fence
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: system_one_as_seq_cst_fence
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: system_one_as_seq_cst_fence
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 24, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
entry:
  fence syncscope("one-as") seq_cst
  ret void
}
