# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 3
# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx1031 -run-pass=machine-sink --aggressive-sink-insts-into-cycles=1 -o -  %s | FileCheck -check-prefixes=GFX10-SUNK %s
# RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx942 -run-pass=machine-sink --aggressive-sink-insts-into-cycles=1 -o -  %s | FileCheck -check-prefixes=GFX9-SUNK %s

---
name: latency_cycle_sink
tracksRegLiveness: true
body: |
  ; GFX10-SUNK-LABEL: name: latency_cycle_sink
  ; GFX10-SUNK: bb.0:
  ; GFX10-SUNK-NEXT:   successors: %bb.1(0x80000000)
  ; GFX10-SUNK-NEXT:   liveins: $vgpr4, $vgpr5
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT:   [[DEF:%[0-9]+]]:vgpr_32 = IMPLICIT_DEF
  ; GFX10-SUNK-NEXT:   [[V_PK_MUL_LO_U16_:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[DEF]], 8, [[DEF]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX10-SUNK-NEXT:   S_BRANCH %bb.1
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT: bb.1:
  ; GFX10-SUNK-NEXT:   successors: %bb.3(0x40000000), %bb.2(0x40000000)
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT:   S_CBRANCH_SCC1 %bb.3, implicit undef $scc
  ; GFX10-SUNK-NEXT:   S_BRANCH %bb.2
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT: bb.2:
  ; GFX10-SUNK-NEXT:   successors: %bb.4(0x80000000)
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT:   [[V_PK_MUL_LO_U16_1:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[V_PK_MUL_LO_U16_]], 8, [[V_PK_MUL_LO_U16_]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX10-SUNK-NEXT:   S_BRANCH %bb.4
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT: bb.3:
  ; GFX10-SUNK-NEXT:   successors: %bb.4(0x80000000)
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT:   [[V_PK_MUL_LO_U16_1:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[V_PK_MUL_LO_U16_]], 8, [[V_PK_MUL_LO_U16_]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX10-SUNK-NEXT:   S_BRANCH %bb.4
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT: bb.4:
  ; GFX10-SUNK-NEXT:   successors: %bb.1(0x40000000), %bb.5(0x40000000)
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT:   S_CBRANCH_SCC1 %bb.1, implicit undef $scc
  ; GFX10-SUNK-NEXT:   S_BRANCH %bb.5
  ; GFX10-SUNK-NEXT: {{  $}}
  ; GFX10-SUNK-NEXT: bb.5:
  ; GFX10-SUNK-NEXT:   S_ENDPGM 0
  ;
  ; GFX9-SUNK-LABEL: name: latency_cycle_sink
  ; GFX9-SUNK: bb.0:
  ; GFX9-SUNK-NEXT:   successors: %bb.1(0x80000000)
  ; GFX9-SUNK-NEXT:   liveins: $vgpr4, $vgpr5
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT:   [[DEF:%[0-9]+]]:vgpr_32 = IMPLICIT_DEF
  ; GFX9-SUNK-NEXT:   S_BRANCH %bb.1
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT: bb.1:
  ; GFX9-SUNK-NEXT:   successors: %bb.3(0x40000000), %bb.2(0x40000000)
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT:   S_CBRANCH_SCC1 %bb.3, implicit undef $scc
  ; GFX9-SUNK-NEXT:   S_BRANCH %bb.2
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT: bb.2:
  ; GFX9-SUNK-NEXT:   successors: %bb.4(0x80000000)
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT:   [[V_PK_MUL_LO_U16_:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[DEF]], 8, [[DEF]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX9-SUNK-NEXT:   [[V_PK_MUL_LO_U16_1:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[V_PK_MUL_LO_U16_]], 8, [[V_PK_MUL_LO_U16_]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX9-SUNK-NEXT:   S_BRANCH %bb.4
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT: bb.3:
  ; GFX9-SUNK-NEXT:   successors: %bb.4(0x80000000)
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT:   [[V_PK_MUL_LO_U16_2:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[DEF]], 8, [[DEF]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX9-SUNK-NEXT:   [[V_PK_MUL_LO_U16_1:%[0-9]+]]:vgpr_32 = V_PK_MUL_LO_U16 8, [[V_PK_MUL_LO_U16_2]], 8, [[V_PK_MUL_LO_U16_2]], 0, 0, 0, 0, 0, implicit $exec
  ; GFX9-SUNK-NEXT:   S_BRANCH %bb.4
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT: bb.4:
  ; GFX9-SUNK-NEXT:   successors: %bb.1(0x40000000), %bb.5(0x40000000)
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT:   S_CBRANCH_SCC1 %bb.1, implicit undef $scc
  ; GFX9-SUNK-NEXT:   S_BRANCH %bb.5
  ; GFX9-SUNK-NEXT: {{  $}}
  ; GFX9-SUNK-NEXT: bb.5:
  ; GFX9-SUNK-NEXT:   S_ENDPGM 0
  bb.0:
    successors: %bb.1(0x80000000)
    liveins: $vgpr4, $vgpr5
    %83:vgpr_32 = IMPLICIT_DEF
    %80:vgpr_32 = V_PK_MUL_LO_U16 8, %83, 8, %83, 0, 0, 0, 0, 0, implicit $exec
    S_BRANCH %bb.1

  bb.1:
    S_CBRANCH_SCC1 %bb.3, implicit undef $scc
    S_BRANCH %bb.2


  bb.2:
    %90:vgpr_32 = V_PK_MUL_LO_U16 8, %80, 8, %80, 0, 0, 0, 0, 0, implicit $exec
    S_BRANCH %bb.4

  bb.3:
    %90:vgpr_32 = V_PK_MUL_LO_U16 8, %80, 8, %80, 0, 0, 0, 0, 0, implicit $exec
    S_BRANCH %bb.4

  bb.4:
    S_CBRANCH_SCC1 %bb.1, implicit undef $scc
    S_BRANCH %bb.5

  bb.5:
    S_ENDPGM 0
...
