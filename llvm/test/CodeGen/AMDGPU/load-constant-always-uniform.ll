; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=amdgcn -mcpu=gfx1100 < %s | FileCheck %s -prefix=GFX11

define amdgpu_cs void @test_uniform_load_b96(i32 %arg) "amdgpu-flat-work-group-size"="1,1" {
; CHECK-LABEL: test_uniform_load_b96:
; CHECK:       ; %bb.0: ; %bb
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_delay_alu instid0(VALU_DEP_1) | instskip(NEXT) | instid1(VALU_DEP_1)
; CHECK-NEXT:    v_lshlrev_b64 v[0:1], 2, v[0:1]
; CHECK-NEXT:    v_readfirstlane_b32 s0, v0
; CHECK-NEXT:    s_delay_alu instid0(VALU_DEP_2)
; CHECK-NEXT:    v_readfirstlane_b32 s1, v1
; CHECK-NEXT:    v_mov_b32_e32 v0, 0
; CHECK-NEXT:    v_mov_b32_e32 v1, 0
; CHECK-NEXT:    s_clause 0x1
; CHECK-NEXT:    s_load_b64 s[2:3], s[0:1], 0x0
; CHECK-NEXT:    s_load_b32 s0, s[0:1], 0x8
; CHECK-NEXT:    s_waitcnt lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v2, s3
; CHECK-NEXT:    s_delay_alu instid0(VALU_DEP_1)
; CHECK-NEXT:    v_or3_b32 v2, s2, v2, s0
; CHECK-NEXT:    global_store_b32 v[0:1], v2, off
; CHECK-NEXT:    s_nop 0
; CHECK-NEXT:    s_sendmsg sendmsg(MSG_DEALLOC_VGPRS)
; CHECK-NEXT:    s_endpgm
bb:
  %i = zext i32 %arg to i64
  %i1 = getelementptr <{ [4294967295 x i32] }>, ptr addrspace(1) null, i64 0, i32 0, i64 %i
  %i2 = load i32, ptr addrspace(1) %i1, align 4
  %i3 = add nuw i32 %arg, 1
  %i4 = zext i32 %i3 to i64
  %i5 = getelementptr <{ [4294967295 x i32] }>, ptr addrspace(1) null, i64 0, i32 0, i64 %i4
  %i6 = load i32, ptr addrspace(1) %i5, align 4
  %i7 = add nuw i32 %arg, 2
  %i8 = zext i32 %i7 to i64
  %i9 = getelementptr <{ [4294967295 x i32] }>, ptr addrspace(1) null, i64 0, i32 0, i64 %i8
  %i10 = load i32, ptr addrspace(1) %i9, align 4
  %i11 = or i32 %i2, %i6
  %i12 = or i32 %i10, %i11
  store i32 %i12, ptr addrspace(1) null, align 4
  ret void
}
