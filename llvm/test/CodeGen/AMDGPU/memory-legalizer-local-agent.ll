; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx600 < %s | FileCheck --check-prefixes=GFX6 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx700 < %s | FileCheck --check-prefixes=GFX7 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 < %s | FileCheck --check-prefixes=GFX10-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX10-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdpal -stop-after=si-memory-legalizer -mcpu=gfx700 -amdgcn-skip-cache-invalidations < %s | FileCheck --check-prefixes=SKIP-CACHE-INV %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a < %s | FileCheck -check-prefixes=GFX90A-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX90A-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 < %s | FileCheck -check-prefixes=GFX940-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX940-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 < %s | FileCheck --check-prefixes=GFX11-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX11-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 < %s | FileCheck --check-prefixes=GFX12-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX12-CU %s

define amdgpu_kernel void @local_agent_unordered_load(
  ; GFX6-LABEL: name: local_agent_unordered_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_unordered_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_unordered_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_unordered_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_unordered_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_unordered_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_unordered_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_unordered_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_unordered_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_unordered_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_unordered_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_unordered_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_unordered_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") unordered (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent") unordered, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_load(
  ; GFX6-LABEL: name: local_agent_monotonic_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent") monotonic, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_acquire_load(
  ; GFX6-LABEL: name: local_agent_acquire_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") acquire (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent") acquire, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_load(
  ; GFX6-LABEL: name: local_agent_seq_cst_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent") seq_cst, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_unordered_store(
  ; GFX6-LABEL: name: local_agent_unordered_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_unordered_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_unordered_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_unordered_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_unordered_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_unordered_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_unordered_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_unordered_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_unordered_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_unordered_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_unordered_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_unordered_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_unordered_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent") unordered, align 4
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_store(
  ; GFX6-LABEL: name: local_agent_monotonic_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent") monotonic, align 4
  ret void
}

define amdgpu_kernel void @local_agent_release_store(
  ; GFX6-LABEL: name: local_agent_release_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent") release, align 4
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_store(
  ; GFX6-LABEL: name: local_agent_seq_cst_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent") seq_cst, align 4
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_atomicrmw(
  ; GFX6-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") monotonic
  ret void
}

define amdgpu_kernel void @local_agent_acquire_atomicrmw(
  ; GFX6-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") acquire
  ret void
}

define amdgpu_kernel void @local_agent_release_atomicrmw(
  ; GFX6-LABEL: name: local_agent_release_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") release
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_atomicrmw(
  ; GFX6-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") acq_rel
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_atomicrmw(
  ; GFX6-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_acquire_ret_atomicrmw(
  ; GFX6-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") acquire
  store i32 %val, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_ret_atomicrmw(
  ; GFX6-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") acq_rel
  store i32 %val, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_ret_atomicrmw(
  ; GFX6-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent") seq_cst
  store i32 %val, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") monotonic monotonic
  ret void
}

define amdgpu_kernel void @local_agent_acquire_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acquire monotonic
  ret void
}

define amdgpu_kernel void @local_agent_release_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") release monotonic
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acq_rel monotonic
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") seq_cst monotonic
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") monotonic acquire
  ret void
}

define amdgpu_kernel void @local_agent_acquire_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acquire acquire
  ret void
}

define amdgpu_kernel void @local_agent_release_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") release acquire
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acq_rel acquire
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") seq_cst acquire
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") monotonic seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_acquire_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acquire seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_release_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") release seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acq_rel seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") seq_cst seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") monotonic monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acquire_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acquire monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_release_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") release monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acq_rel monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") seq_cst monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") monotonic acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acquire_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acquire acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_release_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") release acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acq_rel acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") seq_cst acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_monotonic_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") monotonic seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acquire_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acquire seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_release_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_release_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") release seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_acq_rel_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") acq_rel seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_seq_cst_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_WAITCNT_soft 127
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_WAITCNT_soft 127
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 49279
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 127
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 49279
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 64519
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 8, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent") seq_cst seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_unordered_load(
  ; GFX6-LABEL: name: local_agent_one_as_unordered_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_unordered_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_unordered_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_unordered_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_unordered_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_unordered_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_unordered_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_unordered_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_unordered_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_unordered_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_unordered_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_unordered_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_unordered_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent-one-as") unordered, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_load(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent-one-as") monotonic, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_load(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent-one-as") acquire, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_load(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.in, addrspace 3)
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = DS_READ_B32 killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = DS_READ_B32_gfx9 killed renamable $vgpr0, 0, 0, implicit $exec :: (load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr1, killed renamable $vgpr0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %in, ptr addrspace(3) %out) {
entry:
  %val = load atomic i32, ptr addrspace(3) %in syncscope("agent-one-as") seq_cst, align 4
  store i32 %val, ptr addrspace(3) %out
  ret void
}

define amdgpu_kernel void @local_agent_one_as_unordered_store(
  ; GFX6-LABEL: name: local_agent_one_as_unordered_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_unordered_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_unordered_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_unordered_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_unordered_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_unordered_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_unordered_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_unordered_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_unordered_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_unordered_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_unordered_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_unordered_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_unordered_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent-one-as") unordered, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_store(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent-one-as") monotonic, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_store(
  ; GFX6-LABEL: name: local_agent_one_as_release_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent-one-as") release, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_store(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr1, killed $sgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(3) %out) {
entry:
  store atomic i32 %in, ptr addrspace(3) %out syncscope("agent-one-as") seq_cst, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") monotonic
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") acquire
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") release
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   dead renamable $vgpr0 = DS_WRXCHG_RTN_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_ret_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") acquire
  store i32 %val, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_ret_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") acq_rel
  store i32 %val, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_ret_atomicrmw(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64), align 16, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_WRXCHG_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(3) %out, i32 %in syncscope("agent-one-as") seq_cst
  store i32 %val, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic monotonic
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire monotonic
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") release monotonic
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel monotonic
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_monotonic_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst monotonic
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic acquire
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire acquire
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") release acquire
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel acquire
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_acquire_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst acquire
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") release seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   DS_CMPST_B32 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   DS_CMPST_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   DS_CMPSTORE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst seq_cst
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") release monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") release acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_monotonic_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acquire_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_release_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") release seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}

define amdgpu_kernel void @local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32), align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 1, 0 :: (dereferenceable invariant load (s64) from %ir.in.kernarg.offset, align 4, addrspace 4)
  ; GFX6-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX6-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX6-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.out, addrspace 3)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $m0 = S_MOV_B32 -1
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX7-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX10-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $m0 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $m0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   DS_WRITE_B32 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $m0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = DS_CMPST_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX11-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-WGP-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: local_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = DS_CMPSTORE_RTN_B32_gfx9 renamable $vgpr0, killed renamable $vgpr1, killed renamable $vgpr2, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 3)
  ; GFX12-CU-NEXT:   DS_WRITE_B32_gfx9 killed renamable $vgpr0, killed renamable $vgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.1, addrspace 3)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(3) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(3) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(3) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(3) %out, align 4
  ret void
}
