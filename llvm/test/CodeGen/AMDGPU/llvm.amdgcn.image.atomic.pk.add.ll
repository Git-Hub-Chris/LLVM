; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -march=amdgcn -mcpu=gfx1200 -verify-machineinstrs < %s | FileCheck -check-prefix=GFX12 %s
; RUN: llc -march=amdgcn -global-isel=1 -mcpu=gfx1200 -verify-machineinstrs < %s | FileCheck -check-prefix=GFX12 %s

define amdgpu_ps float @atomic_pk_add_f16_1d_v2(<8 x i32> inreg %rsrc, <2 x half> %data, i32 %s) {
; GFX12-LABEL: atomic_pk_add_f16_1d_v2:
; GFX12:       ; %bb.0: ; %main_body
; GFX12-NEXT:    image_atomic_pk_add_f16 v0, v1, s[0:7] dmask:0x1 dim:SQ_RSRC_IMG_1D th:TH_ATOMIC_RETURN
; GFX12-NEXT:    s_waitcnt vmcnt(0)
; GFX12-NEXT:    ; return to shader part epilog
main_body:
  %out = call <2 x half> @llvm.amdgcn.image.atomic.pk.add.f16.1d.v2f16.v2f16(<2 x half> %data, i32 %s, <8 x i32> %rsrc, i32 0, i32 0)
  %out_float = bitcast <2 x half> %out to float
  ret float %out_float
}

define amdgpu_ps float @atomic_pk_add_f16_1d_v4(<8 x i32> inreg %rsrc, <4 x half> %data, i32 %s) {
; GFX12-LABEL: atomic_pk_add_f16_1d_v4:
; GFX12:       ; %bb.0: ; %main_body
; GFX12-NEXT:    image_atomic_pk_add_f16 v[0:1], v2, s[0:7] dmask:0x3 dim:SQ_RSRC_IMG_1D th:TH_ATOMIC_RETURN
; GFX12-NEXT:    s_waitcnt vmcnt(0)
; GFX12-NEXT:    ; return to shader part epilog
main_body:
  %out = call <4 x half> @llvm.amdgcn.image.atomic.pk.add.f16.1d.v4f16.v4f16(<4 x half> %data, i32 %s, <8 x i32> %rsrc, i32 0, i32 0)
  %out_v2f32 = bitcast <4 x half> %out to <2 x float>
  %out0 = extractelement <2 x float> %out_v2f32, i32 0
  ret float %out0
}

define amdgpu_ps float @atomic_pk_add_bf16_1d_v2(<8 x i32> inreg %rsrc, <2 x i16> %data, i32 %s) {
; GFX12-LABEL: atomic_pk_add_bf16_1d_v2:
; GFX12:       ; %bb.0: ; %main_body
; GFX12-NEXT:    image_atomic_pk_add_bf16 v0, v1, s[0:7] dmask:0x1 dim:SQ_RSRC_IMG_1D th:TH_ATOMIC_RETURN
; GFX12-NEXT:    s_waitcnt vmcnt(0)
; GFX12-NEXT:    ; return to shader part epilog
main_body:
  %out = call <2 x i16> @llvm.amdgcn.image.atomic.pk.add.bf16.1d.v2i16.v2i16(<2 x i16> %data, i32 %s, <8 x i32> %rsrc, i32 0, i32 0)
  %out_i32 = bitcast <2 x i16> %out to i32
  %out_float = bitcast i32 %out_i32 to float
  ret float %out_float
}

define amdgpu_ps float @atomic_pk_add_bf16_1d_v4(<8 x i32> inreg %rsrc, <4 x i16> %data, i32 %s) {
; GFX12-LABEL: atomic_pk_add_bf16_1d_v4:
; GFX12:       ; %bb.0: ; %main_body
; GFX12-NEXT:    image_atomic_pk_add_bf16 v[0:1], v2, s[0:7] dmask:0x3 dim:SQ_RSRC_IMG_1D th:TH_ATOMIC_RETURN
; GFX12-NEXT:    s_waitcnt vmcnt(0)
; GFX12-NEXT:    ; return to shader part epilog
main_body:
  %out = call <4 x i16> @llvm.amdgcn.image.atomic.pk.add.bf16.1d.v4i16.v4i16(<4 x i16> %data, i32 %s, <8 x i32> %rsrc, i32 0, i32 0)
  %out_v2i32 = bitcast <4 x i16> %out to <2 x i32>
  %out0 = extractelement <2 x i32> %out_v2i32, i32 0
  %out_float = bitcast i32 %out0 to float
  ret float %out_float
}

declare <2 x half> @llvm.amdgcn.image.atomic.pk.add.f16.1d.v2f16.v2f16(<2 x half>, i32, <8 x i32>, i32, i32)
declare <4 x half> @llvm.amdgcn.image.atomic.pk.add.f16.1d.v4f16.v4f16(<4 x half>, i32, <8 x i32>, i32, i32)
declare <2 x i16> @llvm.amdgcn.image.atomic.pk.add.bf16.1d.v2i16.v2i16(<2 x i16>, i32, <8 x i32>, i32, i32)
declare <4 x i16> @llvm.amdgcn.image.atomic.pk.add.bf16.1d.v4i16.v4i16(<4 x i16>, i32, <8 x i32>, i32, i32)
