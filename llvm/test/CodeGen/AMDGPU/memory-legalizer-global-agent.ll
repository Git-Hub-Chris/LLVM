; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx600 < %s | FileCheck --check-prefixes=GFX6 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx700 < %s | FileCheck --check-prefixes=GFX7 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 < %s | FileCheck --check-prefixes=GFX10-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX10-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdpal -stop-after=si-memory-legalizer -mcpu=gfx700 -amdgcn-skip-cache-invalidations < %s | FileCheck --check-prefixes=SKIP-CACHE-INV %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a < %s | FileCheck -check-prefixes=GFX90A-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX90A-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 < %s | FileCheck -check-prefixes=GFX940-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX940-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 < %s | FileCheck --check-prefixes=GFX11-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX11-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 < %s | FileCheck --check-prefixes=GFX12-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX12-CU %s

define amdgpu_kernel void @global_agent_unordered_load(
  ; GFX6-LABEL: name: global_agent_unordered_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_unordered_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_unordered_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_unordered_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_unordered_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_unordered_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_unordered_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_unordered_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_unordered_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_unordered_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_unordered_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_unordered_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_unordered_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") unordered (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent") unordered, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_load(
  ; GFX6-LABEL: name: global_agent_monotonic_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent") monotonic, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_acquire_load(
  ; GFX6-LABEL: name: global_agent_acquire_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") acquire (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent") acquire, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_load(
  ; GFX6-LABEL: name: global_agent_seq_cst_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent") seq_cst, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_unordered_store(
  ; GFX6-LABEL: name: global_agent_unordered_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_unordered_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_unordered_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_unordered_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_unordered_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_unordered_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_unordered_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_unordered_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_unordered_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_unordered_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_unordered_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_unordered_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_unordered_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent") unordered, align 4
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_store(
  ; GFX6-LABEL: name: global_agent_monotonic_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent") monotonic, align 4
  ret void
}

define amdgpu_kernel void @global_agent_release_store(
  ; GFX6-LABEL: name: global_agent_release_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") release (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent") release, align 4
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_store(
  ; GFX6-LABEL: name: global_agent_seq_cst_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent") seq_cst, align 4
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_atomicrmw(
  ; GFX6-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") monotonic
  ret void
}

define amdgpu_kernel void @global_agent_acquire_atomicrmw(
  ; GFX6-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") acquire
  ret void
}

define amdgpu_kernel void @global_agent_release_atomicrmw(
  ; GFX6-LABEL: name: global_agent_release_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") release (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") release
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_atomicrmw(
  ; GFX6-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") acq_rel
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_atomicrmw(
  ; GFX6-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_acquire_ret_atomicrmw(
  ; GFX6-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_SWAP_RTN renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") acquire
  store i32 %val, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_ret_atomicrmw(
  ; GFX6-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_SWAP_RTN renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") acq_rel
  store i32 %val, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_ret_atomicrmw(
  ; GFX6-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_SWAP_RTN renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent") seq_cst
  store i32 %val, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") monotonic monotonic
  ret void
}

define amdgpu_kernel void @global_agent_acquire_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acquire monotonic
  ret void
}

define amdgpu_kernel void @global_agent_release_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") release monotonic
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acq_rel monotonic
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") seq_cst monotonic
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") monotonic acquire
  ret void
}

define amdgpu_kernel void @global_agent_acquire_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acquire acquire
  ret void
}

define amdgpu_kernel void @global_agent_release_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") release acquire
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acq_rel acquire
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") seq_cst acquire
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") monotonic seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_acquire_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acquire seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_release_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") release seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acq_rel seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") seq_cst seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") monotonic monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acquire_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acquire monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_release_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") release monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acq_rel monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") seq_cst monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") monotonic acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acquire_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acquire acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_release_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") release acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acq_rel acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") seq_cst acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_monotonic_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") monotonic seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acquire_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acquire_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acquire seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_release_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_release_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") release seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_acq_rel_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") acq_rel seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_seq_cst_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 112
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 112
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 112
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 112
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 112
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 112
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 7
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 7
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_DSCNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent") seq_cst seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_unordered_load(
  ; GFX6-LABEL: name: global_agent_one_as_unordered_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_unordered_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_unordered_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_unordered_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_unordered_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_unordered_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_unordered_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_unordered_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_unordered_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_unordered_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_unordered_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_unordered_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_unordered_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") unordered (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent-one-as") unordered, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_load(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") monotonic (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent-one-as") monotonic, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_load(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") acquire (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent-one-as") acquire, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_load(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 5, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_LOAD_DWORD_OFFSET renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 1, 0, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr2
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr3
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 16, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_LOAD_DWORD_SADDR killed renamable $sgpr0_sgpr1, renamable $vgpr0, 0, 1, implicit $exec :: ("amdgpu-noclobber" load syncscope("agent-one-as") seq_cst (s32) from %ir.1, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (store (s32) into %ir.2, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %in, ptr addrspace(1) %out) {
entry:
  %val = load atomic i32, ptr addrspace(1) %in syncscope("agent-one-as") seq_cst, align 4
  store i32 %val, ptr addrspace(1) %out
  ret void
}

define amdgpu_kernel void @global_agent_one_as_unordered_store(
  ; GFX6-LABEL: name: global_agent_one_as_unordered_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_unordered_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_unordered_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_unordered_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_unordered_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_unordered_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_unordered_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_unordered_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_unordered_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_unordered_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_unordered_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_unordered_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_unordered_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") unordered (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent-one-as") unordered, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_store(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") monotonic (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent-one-as") monotonic, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_store(
  ; GFX6-LABEL: name: global_agent_one_as_release_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") release (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent-one-as") release, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_store(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_store
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_store
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store syncscope("agent-one-as") seq_cst (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    i32 %in, ptr addrspace(1) %out) {
entry:
  store atomic i32 %in, ptr addrspace(1) %out syncscope("agent-one-as") seq_cst, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") monotonic
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") acquire
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") release
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") acq_rel
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_SWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_SWAP_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_SWAP_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_ret_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_SWAP_RTN renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") acquire
  store i32 %val, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_ret_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_SWAP_RTN renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") acq_rel
  store i32 %val, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_ret_atomicrmw(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr6 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr3 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr6, implicit $exec, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM killed renamable $sgpr4_sgpr5, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_SWAP_RTN renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 2, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr3 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr2 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = BUFFER_ATOMIC_SWAP_OFFSET_RTN killed renamable $vgpr0, renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr0_sgpr1_sgpr2_sgpr3, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr4_sgpr5, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr4 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr2_sgpr3 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr4, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr2_sgpr3, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr2_sgpr3, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr2 = S_LOAD_DWORD_IMM renamable $sgpr0_sgpr1, 8, 0 :: (dereferenceable invariant load (s32) from %ir.in.kernarg.offset, align 8, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1 = S_LOAD_DWORDX2_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s64) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_ret_atomicrmw
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2 = S_LOAD_DWORDX3_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s96) from %ir.out.kernarg.offset1, align 16, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 0, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr1 = GLOBAL_ATOMIC_SWAP_SADDR_RTN renamable $vgpr0, killed renamable $vgpr1, renamable $sgpr0_sgpr1, 0, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst (s32) on %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr0, killed renamable $vgpr1, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in) {
entry:
  %val = atomicrmw volatile xchg ptr addrspace(1) %out, i32 %in syncscope("agent-one-as") seq_cst
  store i32 %val, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic monotonic
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire monotonic
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") release monotonic
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel monotonic
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_monotonic_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_monotonic_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst monotonic
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic acquire
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire acquire
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") release acquire
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel acquire
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_acquire_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_acquire_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst acquire
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") release seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_seq_cst_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr0 = S_ADD_U32 killed renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr1 = S_ADDC_U32 killed renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   FLAT_ATOMIC_CMPSWAP killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_ATOMIC_CMPSWAP_OFFSET killed renamable $vgpr0_vgpr1, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_seq_cst_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_ATOMIC_CMPSWAP_SADDR killed renamable $vgpr2, killed renamable $vgpr0_vgpr1, killed renamable $sgpr0_sgpr1, 16, 0, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst seq_cst
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_monotonic_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_monotonic_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst monotonic (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst monotonic
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") release acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_acquire_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_acquire_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst acquire (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst acquire
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_monotonic_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_monotonic_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") monotonic seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") monotonic seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acquire_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acquire_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acquire seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acquire seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_release_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_release_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") release seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") release seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_acq_rel_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") acq_rel seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") acq_rel seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}

define amdgpu_kernel void @global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg(
  ; GFX6-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX6: bb.0.entry:
  ; GFX6-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX6-NEXT: {{  $}}
  ; GFX6-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX6-NEXT:   renamable $sgpr7 = S_MOV_B32 16838656
  ; GFX6-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; GFX6-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX6-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; GFX6-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; GFX6-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX6-NEXT:   S_WAITCNT_soft 3952
  ; GFX6-NEXT:   BUFFER_WBINVL1 implicit $exec
  ; GFX6-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX6-NEXT:   S_ENDPGM 0
  ;
  ; GFX7-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $sgpr4 = S_ADD_U32 renamable $sgpr0, 16, implicit-def $scc
  ; GFX7-NEXT:   renamable $sgpr5 = S_ADDC_U32 renamable $sgpr1, 0, implicit-def dead $scc, implicit killed $scc
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr4, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr4_sgpr5
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr2_vgpr3, implicit $sgpr2_sgpr3
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr5, implicit $exec, implicit $sgpr4_sgpr5, implicit $exec
  ; GFX7-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_ATOMIC_CMPSWAP_RTN killed renamable $vgpr0_vgpr1, killed renamable $vgpr2_vgpr3, 0, 1, implicit $exec, implicit $flat_scr :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr0, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr0_sgpr1
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $sgpr0_sgpr1, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX10-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX10-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX10-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr7 = S_MOV_B32 61440
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr6 = S_MOV_B32 -1
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 $sgpr2, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3
  ; SKIP-CACHE-INV-NEXT:   $sgpr4 = S_MOV_B32 killed $sgpr0
  ; SKIP-CACHE-INV-NEXT:   $sgpr5 = S_MOV_B32 killed $sgpr1
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0_vgpr1 = BUFFER_ATOMIC_CMPSWAP_OFFSET_RTN killed renamable $vgpr0_vgpr1, renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   BUFFER_STORE_DWORD_OFFSET killed renamable $vgpr0, killed renamable $sgpr4_sgpr5_sgpr6_sgpr7, 0, 0, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_PK_MOV_B32 8, killed $sgpr2_sgpr3, 12, $sgpr2_sgpr3, 0, 0, 0, 0, 0, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   BUFFER_WBINVL1_VOL implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr0_vgpr1 = V_MOV_B64_e32 killed $sgpr2_sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   BUFFER_WBL2 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   BUFFER_INV 16, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 17, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-WGP-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   S_WAITCNT_VSCNT_soft undef $sgpr_null, 0
  ; GFX11-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   BUFFER_GL1_INV implicit $exec
  ; GFX11-CU-NEXT:   BUFFER_GL0_INV implicit $exec
  ; GFX11-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-WGP-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: global_agent_one_as_seq_cst_seq_cst_ret_cmpxchg
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.out.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr2 = V_MOV_B32_e32 0, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit-def $vgpr0_vgpr1, implicit $sgpr2_sgpr3, implicit $exec, implicit $sgpr2_sgpr3, implicit $exec
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_STORECNT_soft 0
  ; GFX12-CU-NEXT:   renamable $vgpr0 = GLOBAL_ATOMIC_CMPSWAP_SADDR_RTN renamable $vgpr2, killed renamable $vgpr0_vgpr1, renamable $sgpr0_sgpr1, 16, 1, implicit $exec :: (volatile load store syncscope("agent-one-as") seq_cst seq_cst (s32) on %ir.gep, addrspace 1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   GLOBAL_INV 16, implicit $exec
  ; GFX12-CU-NEXT:   GLOBAL_STORE_DWORD_SADDR killed renamable $vgpr2, killed renamable $vgpr0, killed renamable $sgpr0_sgpr1, 0, 0, implicit $exec :: (store (s32) into %ir.out.load, addrspace 1)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr addrspace(1) %out, i32 %in, i32 %old) {
entry:
  %gep = getelementptr i32, ptr addrspace(1) %out, i32 4
  %val = cmpxchg volatile ptr addrspace(1) %gep, i32 %old, i32 %in syncscope("agent-one-as") seq_cst seq_cst
  %val0 = extractvalue { i32, i1 } %val, 0
  store i32 %val0, ptr addrspace(1) %out, align 4
  ret void
}
