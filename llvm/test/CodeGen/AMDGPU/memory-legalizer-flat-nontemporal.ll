; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx700 < %s | FileCheck --check-prefixes=GFX7 %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 < %s | FileCheck --check-prefixes=GFX10-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1010 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX10-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdpal -stop-after=si-memory-legalizer -mcpu=gfx700 -amdgcn-skip-cache-invalidations < %s | FileCheck --check-prefixes=SKIP-CACHE-INV %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a < %s | FileCheck -check-prefixes=GFX90A-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx90a -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX90A-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 < %s | FileCheck -check-prefixes=GFX940-NOTTGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx940 -mattr=+tgsplit < %s | FileCheck -check-prefixes=GFX940-TGSPLIT %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 < %s | FileCheck --check-prefixes=GFX11-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1100 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX11-CU %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 < %s | FileCheck --check-prefixes=GFX12-WGP %s
; RUN: llc -mtriple=amdgcn-amd-amdhsa -stop-after=si-memory-legalizer -mcpu=gfx1200 -mattr=+cumode < %s | FileCheck --check-prefixes=GFX12-CU %s

define amdgpu_kernel void @flat_nontemporal_load_0(
  ; GFX7-LABEL: name: flat_nontemporal_load_0
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: flat_nontemporal_load_0
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: flat_nontemporal_load_0
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: flat_nontemporal_load_0
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: flat_nontemporal_load_0
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: flat_nontemporal_load_0
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: flat_nontemporal_load_0
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 17, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: flat_nontemporal_load_0
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 17, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: flat_nontemporal_load_0
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 6, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: flat_nontemporal_load_0
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 6, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: flat_nontemporal_load_0
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: flat_nontemporal_load_0
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.1)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr %in, ptr %out) {
entry:
  %val = load i32, ptr %in, align 4, !nontemporal !0
  store i32 %val, ptr %out
  ret void
}

define amdgpu_kernel void @flat_nontemporal_load_1(
  ; GFX7-LABEL: name: flat_nontemporal_load_1
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr0, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: flat_nontemporal_load_1
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr0, killed $vgpr0, 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr1, dead renamable $sgpr0 = V_ADDC_U32_e64 killed $sgpr1, 0, killed $sgpr0, 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: flat_nontemporal_load_1
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr0, killed $vgpr0, 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr1, dead renamable $sgpr0 = V_ADDC_U32_e64 killed $sgpr1, 0, killed $sgpr0, 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: flat_nontemporal_load_1
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr0, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: flat_nontemporal_load_1
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr0, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: flat_nontemporal_load_1
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr0, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: flat_nontemporal_load_1
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0_vgpr1 = V_LSHL_ADD_U64_e64 killed $sgpr0_sgpr1, 0, killed $vgpr0_vgpr1, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 17, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: flat_nontemporal_load_1
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0_vgpr1 = V_LSHL_ADD_U64_e64 killed $sgpr0_sgpr1, 0, killed $vgpr0_vgpr1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 2, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 17, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: flat_nontemporal_load_1
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr0, killed $vgpr0, 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr1, 0, killed $sgpr0, 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 6, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX11-WGP-NEXT:   $vgpr1, $vgpr0 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr3, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: flat_nontemporal_load_1
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr0, killed $vgpr0, 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr1, 0, killed $sgpr0, 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 6, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX11-CU-NEXT:   $vgpr1, $vgpr0 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr3, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: flat_nontemporal_load_1
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr0, killed $vgpr0, 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr1, 0, killed $sgpr0, 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX12-WGP-NEXT:   $vgpr1, $vgpr0 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr3, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: flat_nontemporal_load_1
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr0, killed $vgpr0, 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr1, 0, killed $sgpr0, 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal load (s32) from %ir.val.gep)
  ; GFX12-CU-NEXT:   $vgpr1, $vgpr0 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr3, killed $sgpr2, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr %in, ptr %out) {
entry:
  %tid = call i32 @llvm.amdgcn.workitem.id.x()
  %val.gep = getelementptr inbounds i32, ptr %in, i32 %tid
  %val = load i32, ptr %val.gep, align 4, !nontemporal !0
  store i32 %val, ptr %out
  ret void
}

define amdgpu_kernel void @flat_nontemporal_store_0(
  ; GFX7-LABEL: name: flat_nontemporal_store_0
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: flat_nontemporal_store_0
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: flat_nontemporal_store_0
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: flat_nontemporal_store_0
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: flat_nontemporal_store_0
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: flat_nontemporal_store_0
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: flat_nontemporal_store_0
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 19, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: flat_nontemporal_store_0
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 19, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: flat_nontemporal_store_0
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 7, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: flat_nontemporal_store_0
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 7, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: flat_nontemporal_store_0
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: flat_nontemporal_store_0
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.2)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr %in, ptr %out) {
entry:
  %val = load i32, ptr %in, align 4
  store i32 %val, ptr %out, !nontemporal !0
  ret void
}

define amdgpu_kernel void @flat_nontemporal_store_1(
  ; GFX7-LABEL: name: flat_nontemporal_store_1
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr2, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: flat_nontemporal_store_1
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr2, killed $vgpr0, 0, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX10-WGP-NEXT:   renamable $vgpr1, dead renamable $sgpr0 = V_ADDC_U32_e64 killed $sgpr3, 0, killed $sgpr0, 0, implicit $exec
  ; GFX10-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: flat_nontemporal_store_1
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr2, killed $vgpr0, 0, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX10-CU-NEXT:   renamable $vgpr1, dead renamable $sgpr0 = V_ADDC_U32_e64 killed $sgpr3, 0, killed $sgpr0, 0, implicit $exec
  ; GFX10-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: flat_nontemporal_store_1
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr2, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: flat_nontemporal_store_1
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr2, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: flat_nontemporal_store_1
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $vgpr0, $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr0 = V_ADD_CO_U32_e32 killed $sgpr2, killed $vgpr0, implicit-def $vcc, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr1 = V_ADDC_U32_e32 0, killed $vgpr1, implicit-def dead $vcc, implicit killed $vcc, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 3, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: flat_nontemporal_store_1
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr1 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr0_vgpr1 = V_LSHL_ADD_U64_e64 killed $sgpr2_sgpr3, 0, killed $vgpr0_vgpr1, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 19, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: flat_nontemporal_store_1
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0 = nuw nsw V_LSHLREV_B32_e32 2, killed $vgpr0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr1 = V_MOV_B32_e32 0, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr3 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr2_vgpr3, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr0_vgpr1 = V_LSHL_ADD_U64_e64 killed $sgpr2_sgpr3, 0, killed $vgpr0_vgpr1, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 19, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: flat_nontemporal_store_1
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr1, renamable $vgpr0 = nuw nsw V_DUAL_MOV_B32_e32_X_LSHLREV_B32_e32_gfx11 killed $sgpr0, 2, killed $vgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr2, killed $vgpr0, 0, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX11-WGP-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr3, 0, killed $sgpr0, 0, implicit $exec
  ; GFX11-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 7, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: flat_nontemporal_store_1
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr1, renamable $vgpr0 = nuw nsw V_DUAL_MOV_B32_e32_X_LSHLREV_B32_e32_gfx11 killed $sgpr0, 2, killed $vgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr2, killed $vgpr0, 0, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX11-CU-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr3, 0, killed $sgpr0, 0, implicit $exec
  ; GFX11-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 7, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: flat_nontemporal_store_1
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr1, renamable $vgpr0 = nuw nsw V_DUAL_MOV_B32_e32_X_LSHLREV_B32_e32_gfx12 killed $sgpr0, 2, killed $vgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr2, killed $vgpr0, 0, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX12-WGP-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr3, 0, killed $sgpr0, 0, implicit $exec
  ; GFX12-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: flat_nontemporal_store_1
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $vgpr0, $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr1, renamable $vgpr0 = nuw nsw V_DUAL_MOV_B32_e32_X_LSHLREV_B32_e32_gfx12 killed $sgpr0, 2, killed $vgpr0, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   $vgpr2 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr0, renamable $sgpr0 = V_ADD_CO_U32_e64 killed $sgpr2, killed $vgpr0, 0, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr1_vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (load (s32) from %ir.1)
  ; GFX12-CU-NEXT:   renamable $vgpr1, dead $sgpr_null = V_ADDC_U32_e64 killed $sgpr3, 0, killed $sgpr0, 0, implicit $exec
  ; GFX12-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 1, implicit $exec, implicit $flat_scr :: (non-temporal store (s32) into %ir.out.gep)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr %in, ptr %out) {
entry:
  %tid = call i32 @llvm.amdgcn.workitem.id.x()
  %val = load i32, ptr %in, align 4
  %out.gep = getelementptr inbounds i32, ptr %out, i32 %tid
  store i32 %val, ptr %out.gep, !nontemporal !0
  ret void
}

define amdgpu_kernel void @flat_nontemporal_volatile_load(
  ; GFX7-LABEL: name: flat_nontemporal_volatile_load
  ; GFX7: bb.0.entry:
  ; GFX7-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX7-NEXT: {{  $}}
  ; GFX7-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX7-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX7-NEXT:   S_WAITCNT_soft 3952
  ; GFX7-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX7-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX7-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX7-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-WGP-LABEL: name: flat_nontemporal_volatile_load
  ; GFX10-WGP: bb.0.entry:
  ; GFX10-WGP-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-WGP-NEXT: {{  $}}
  ; GFX10-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 5, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX10-WGP-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-WGP-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX10-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX10-CU-LABEL: name: flat_nontemporal_volatile_load
  ; GFX10-CU: bb.0.entry:
  ; GFX10-CU-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX10-CU-NEXT: {{  $}}
  ; GFX10-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 5, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX10-CU-NEXT:   S_WAITCNT_soft 16240
  ; GFX10-CU-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX10-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX10-CU-NEXT:   S_ENDPGM 0
  ;
  ; SKIP-CACHE-INV-LABEL: name: flat_nontemporal_volatile_load
  ; SKIP-CACHE-INV: bb.0.entry:
  ; SKIP-CACHE-INV-NEXT:   liveins: $sgpr0_sgpr1
  ; SKIP-CACHE-INV-NEXT: {{  $}}
  ; SKIP-CACHE-INV-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; SKIP-CACHE-INV-NEXT:   S_WAITCNT_soft 3952
  ; SKIP-CACHE-INV-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; SKIP-CACHE-INV-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; SKIP-CACHE-INV-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-NOTTGSPLIT-LABEL: name: flat_nontemporal_volatile_load
  ; GFX90A-NOTTGSPLIT: bb.0.entry:
  ; GFX90A-NOTTGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX90A-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX90A-TGSPLIT-LABEL: name: flat_nontemporal_volatile_load
  ; GFX90A-TGSPLIT: bb.0.entry:
  ; GFX90A-TGSPLIT-NEXT:   liveins: $sgpr4_sgpr5
  ; GFX90A-TGSPLIT-NEXT: {{  $}}
  ; GFX90A-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr4_sgpr5, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 1, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX90A-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX90A-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX90A-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX90A-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-NOTTGSPLIT-LABEL: name: flat_nontemporal_volatile_load
  ; GFX940-NOTTGSPLIT: bb.0.entry:
  ; GFX940-NOTTGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-NOTTGSPLIT-NEXT: {{  $}}
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 17, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX940-NOTTGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-NOTTGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 17, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX940-NOTTGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX940-TGSPLIT-LABEL: name: flat_nontemporal_volatile_load
  ; GFX940-TGSPLIT: bb.0.entry:
  ; GFX940-TGSPLIT-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX940-TGSPLIT-NEXT: {{  $}}
  ; GFX940-TGSPLIT-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr0, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr1, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 17, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX940-TGSPLIT-NEXT:   S_WAITCNT_soft 3952
  ; GFX940-TGSPLIT-NEXT:   $vgpr0 = V_MOV_B32_e32 killed $sgpr2, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   $vgpr1 = V_MOV_B32_e32 killed $sgpr3, implicit $exec, implicit $exec
  ; GFX940-TGSPLIT-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 17, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX940-TGSPLIT-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-WGP-LABEL: name: flat_nontemporal_volatile_load
  ; GFX11-WGP: bb.0.entry:
  ; GFX11-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-WGP-NEXT: {{  $}}
  ; GFX11-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 5, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX11-WGP-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX11-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX11-CU-LABEL: name: flat_nontemporal_volatile_load
  ; GFX11-CU: bb.0.entry:
  ; GFX11-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX11-CU-NEXT: {{  $}}
  ; GFX11-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 5, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX11-CU-NEXT:   S_WAITCNT_soft 1015
  ; GFX11-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx11 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX11-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX11-CU-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-WGP-LABEL: name: flat_nontemporal_volatile_load
  ; GFX12-WGP: bb.0.entry:
  ; GFX12-WGP-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-WGP-NEXT: {{  $}}
  ; GFX12-WGP-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 25, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX12-WGP-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-WGP-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-WGP-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-WGP-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX12-WGP-NEXT:   S_ENDPGM 0
  ;
  ; GFX12-CU-LABEL: name: flat_nontemporal_volatile_load
  ; GFX12-CU: bb.0.entry:
  ; GFX12-CU-NEXT:   liveins: $sgpr0_sgpr1
  ; GFX12-CU-NEXT: {{  $}}
  ; GFX12-CU-NEXT:   renamable $sgpr0_sgpr1_sgpr2_sgpr3 = S_LOAD_DWORDX4_IMM killed renamable $sgpr0_sgpr1, 0, 0 :: (dereferenceable invariant load (s128) from %ir.in.kernarg.offset1, addrspace 4)
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr0, killed $sgpr1, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   renamable $vgpr2 = FLAT_LOAD_DWORD killed renamable $vgpr0_vgpr1, 0, 25, implicit $exec, implicit $flat_scr :: (volatile non-temporal load (s32) from %ir.1)
  ; GFX12-CU-NEXT:   S_WAIT_BVHCNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_SAMPLECNT_soft 0
  ; GFX12-CU-NEXT:   S_WAIT_LOADCNT_soft 0
  ; GFX12-CU-NEXT:   $vgpr0, $vgpr1 = V_DUAL_MOV_B32_e32_X_MOV_B32_e32_gfx12 killed $sgpr2, killed $sgpr3, implicit $exec, implicit $exec, implicit $exec, implicit $exec, implicit $exec
  ; GFX12-CU-NEXT:   FLAT_STORE_DWORD killed renamable $vgpr0_vgpr1, killed renamable $vgpr2, 0, 0, implicit $exec, implicit $flat_scr :: (store (s32) into %ir.2)
  ; GFX12-CU-NEXT:   S_ENDPGM 0
    ptr %in, ptr %out) {
entry:
  %val = load volatile i32, ptr %in, align 4, !nontemporal !0
  store i32 %val, ptr %out
  ret void
}

!0 = !{i32 1}
declare i32 @llvm.amdgcn.workitem.id.x()
