; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -verify-machineinstrs < %s -mcpu=ppc | FileCheck %s

target datalayout = "E-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v128:128:128-n32"
target triple = "powerpc-unknown-linux-gnu"

define ppc_fp128 @foo(ptr nocapture %n, ppc_fp128 %d) nounwind readonly {
; CHECK-LABEL: foo:
; CHECK-NOT: mtctr
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    mflr 0
; CHECK-NEXT:    stwu 1, -176(1)
; CHECK-NEXT:    stw 0, 180(1)
; CHECK-NEXT:    stfd 2, 128(1)
; CHECK-NEXT:    lwz 3, 132(1)
; CHECK-NEXT:    stfd 1, 136(1)
; CHECK-NEXT:    stw 3, 148(1)
; CHECK-NEXT:    lwz 3, 128(1)
; CHECK-NEXT:    stfd 31, 168(1) # 8-byte Folded Spill
; CHECK-NEXT:    stw 3, 144(1)
; CHECK-NEXT:    lwz 3, 140(1)
; CHECK-NEXT:    lfd 0, 144(1)
; CHECK-NEXT:    stw 3, 156(1)
; CHECK-NEXT:    lwz 3, 136(1)
; CHECK-NEXT:    stw 30, 160(1) # 4-byte Folded Spill
; CHECK-NEXT:    li 30, 2048
; CHECK-NEXT:    stw 3, 152(1)
; CHECK-NEXT:    lfd 31, 152(1)
; CHECK-NEXT:    fmr 1, 31
; CHECK-NEXT:  .LBB0_1: # %for.body
; CHECK-NEXT:    #
; CHECK-NEXT:    stfd 1, 64(1)
; CHECK-NEXT:    lwz 3, 68(1)
; CHECK-NEXT:    stfd 31, 88(1)
; CHECK-NEXT:    stw 3, 84(1)
; CHECK-NEXT:    lwz 3, 64(1)
; CHECK-NEXT:    stfd 0, 56(1)
; CHECK-NEXT:    stw 3, 80(1)
; CHECK-NEXT:    lwz 3, 92(1)
; CHECK-NEXT:    lfd 4, 96(1)
; CHECK-NEXT:    stw 3, 108(1)
; CHECK-NEXT:    lwz 3, 88(1)
; CHECK-NEXT:    lfd 1, 80(1)
; CHECK-NEXT:    stw 3, 104(1)
; CHECK-NEXT:    lwz 3, 60(1)
; CHECK-NEXT:    lfd 3, 104(1)
; CHECK-NEXT:    stw 3, 76(1)
; CHECK-NEXT:    lwz 3, 56(1)
; CHECK-NEXT:    stw 3, 72(1)
; CHECK-NEXT:    lfd 2, 72(1)
; CHECK-NEXT:    bl copysignl
; CHECK-NEXT:    stfd 2, 48(1)
; CHECK-NEXT:    addi 30, 30, -1
; CHECK-NEXT:    lwz 3, 52(1)
; CHECK-NEXT:    cmplwi 30, 0
; CHECK-NEXT:    stfd 1, 40(1)
; CHECK-NEXT:    stw 3, 116(1)
; CHECK-NEXT:    lwz 3, 48(1)
; CHECK-NEXT:    stw 3, 112(1)
; CHECK-NEXT:    lwz 3, 44(1)
; CHECK-NEXT:    lfd 0, 112(1)
; CHECK-NEXT:    stw 3, 124(1)
; CHECK-NEXT:    lwz 3, 40(1)
; CHECK-NEXT:    stw 3, 120(1)
; CHECK-NEXT:    lfd 1, 120(1)
; CHECK-NEXT:    bc 12, 1, .LBB0_1
; CHECK-NEXT:  # %bb.2: # %for.end
; CHECK-NEXT:    stfd 1, 16(1)
; CHECK-NEXT:    lwz 3, 20(1)
; CHECK-NEXT:    stfd 0, 8(1)
; CHECK-NEXT:    stw 3, 36(1)
; CHECK-NEXT:    lwz 3, 16(1)
; CHECK-NEXT:    lfd 31, 168(1) # 8-byte Folded Reload
; CHECK-NEXT:    stw 3, 32(1)
; CHECK-NEXT:    lwz 3, 12(1)
; CHECK-NEXT:    lfd 1, 32(1)
; CHECK-NEXT:    stw 3, 28(1)
; CHECK-NEXT:    lwz 3, 8(1)
; CHECK-NEXT:    lwz 30, 160(1) # 4-byte Folded Reload
; CHECK-NEXT:    stw 3, 24(1)
; CHECK-NEXT:    lfd 2, 24(1)
; CHECK-NEXT:    lwz 0, 180(1)
; CHECK-NEXT:    addi 1, 1, 176
; CHECK-NEXT:    mtlr 0
; CHECK-NEXT:    blr
entry:
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %i.06 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %x.05 = phi ppc_fp128 [ %d, %entry ], [ %conv, %for.body ]
  %arrayidx = getelementptr inbounds ppc_fp128, ptr %n, i32 %i.06
  %0 = load ppc_fp128, ptr %arrayidx, align 8
  %conv = tail call ppc_fp128 @copysignl(ppc_fp128 %x.05, ppc_fp128 %d) nounwind readonly
  %inc = add nsw i32 %i.06, 1
  %exitcond = icmp eq i32 %inc, 2048
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret ppc_fp128 %conv
}

declare ppc_fp128 @copysignl(ppc_fp128, ppc_fp128) #0

; CHECK-NOT: mtctr

