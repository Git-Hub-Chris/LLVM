; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-- -mcpu=emeraldrapids | FileCheck %s
; RUN: llc < %s -mtriple=x86_64-- -mcpu=sapphirerapids | FileCheck %s
; RUN: llc < %s -mtriple=x86_64-- -mcpu=znver4 | FileCheck %s

define i32 @shl(i32 %a0) {
; CHECK-LABEL: shl:
; CHECK:       # %bb.0:
; CHECK-NEXT:    kxnord %k0, %k0, %k0
; CHECK-NEXT:    kmovd %k0, %eax
; CHECK-NEXT:    retq
  %v0 = bitcast i32 %a0 to <32 x i1>
  %s = shl <32 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, %v0
  %r = bitcast <32 x i1> %s to i32
  ret i32 %r
}

define i32 @lshr(i32 %a0) {
; CHECK-LABEL: lshr:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movl $-1, %eax
; CHECK-NEXT:    retq
  %v0 = bitcast i32 %a0 to <32 x i1>
  %s = lshr <32 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, %v0
  %r = bitcast <32 x i1> %s to i32
  ret i32 %r
}


define i32 @ashr(i32 %a0) {
; CHECK-LABEL: ashr:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movl $-1, %eax
; CHECK-NEXT:    retq
  %v0 = bitcast i32 %a0 to <32 x i1>
  %s = ashr <32 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, %v0
  %r = bitcast <32 x i1> %s to i32
  ret i32 %r
}
