; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -enable-ipra < %s | FileCheck %s

target triple = "x86_64--"

define internal void @foo() norecurse {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0:
; CHECK-NEXT:    #APP
; CHECK-NEXT:    xorl %ebp, %ebp
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    retq
  call void asm sideeffect "xor	%ebp, %ebp", "~{ebp}"()
  ret void
}

define void @bar(i32 %X) "frame-pointer"="all" nounwind {
  ; When $rbp is clobbered by foo() and IPRA is enabled, $rbp should be spill/reload before/after call foo
; CHECK-LABEL: bar:
; CHECK:       # %bb.0:
; CHECK-NEXT:    pushq %rbp
; CHECK-NEXT:    movq %rsp, %rbp
; CHECK-NEXT:    subq $16, %rsp
; CHECK-NEXT:    pushq %rbp
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    callq foo
; CHECK-NEXT:    addq $8, %rsp
; CHECK-NEXT:    popq %rbp
; CHECK-NEXT:    movl $5, -4(%rbp)
; CHECK-NEXT:    addq $16, %rsp
; CHECK-NEXT:    popq %rbp
; CHECK-NEXT:    retq
  call void @foo()
  %addr = alloca i32, align 4
  store i32 5, ptr %addr, align 4
  ret void
}
