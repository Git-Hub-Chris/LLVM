; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+movdiri,+movdir64b,+egpr --show-mc-encoding | FileCheck %s

define void @test_movdiri(ptr %p, i32 %v) {
; CHECK-LABEL: test_movdiri:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movdiri %esi, (%rdi) # encoding: [0x62,0xf4,0x7c,0x08,0xf9,0x37]
; CHECK-NEXT:    retq # encoding: [0xc3]
entry:
  call void @llvm.x86.directstore32(ptr %p, i32 %v)
  ret void
}

declare void @llvm.x86.directstore32(ptr, i32)

define void @test_movdiri_64(ptr %p, i64 %v) {
; CHECK-LABEL: test_movdiri_64:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movdiri %rsi, (%rdi) # encoding: [0x62,0xf4,0xfc,0x08,0xf9,0x37]
; CHECK-NEXT:    retq # encoding: [0xc3]
entry:
  call void @llvm.x86.directstore64(ptr %p, i64 %v)
  ret void
}

declare void @llvm.x86.directstore64(ptr, i64)

define void @test_movdir64b(ptr %dst, ptr %src) {
; CHECK-LABEL: test_movdir64b:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    movdir64b (%rsi), %rdi # encoding: [0x62,0xf4,0x7d,0x08,0xf8,0x3e]
; CHECK-NEXT:    retq # encoding: [0xc3]
entry:
  call void @llvm.x86.movdir64b(ptr %dst, ptr %src)
  ret void
}

declare void @llvm.x86.movdir64b(ptr, ptr)
