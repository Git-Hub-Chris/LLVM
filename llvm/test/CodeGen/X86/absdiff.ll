; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=x86_64-linux-gnu -o - < %s | FileCheck %s

define i64 @absdiff(i64 %0, i64 %1) {
; CHECK-LABEL: absdiff:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movq %rdi, %rax
; CHECK-NEXT:    subq %rsi, %rax
; CHECK-NEXT:    negq %rax
; CHECK-NEXT:    subq %rsi, %rdi
; CHECK-NEXT:    cmovaeq %rdi, %rax
; CHECK-NEXT:    retq
  %3 = icmp ult i64 %0, %1
  %4 = sub i64 %0, %1
  %5 = sub i64 %1, %0
  %6 = select i1 %3, i64 %5, i64 %4
  ret i64 %6
}

define i64 @absdiff1(i64 %0, i64 %1) {
; CHECK-LABEL: absdiff1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    xorl %eax, %eax
; CHECK-NEXT:    movq %rdi, %rcx
; CHECK-NEXT:    subq %rsi, %rcx
; CHECK-NEXT:    setb %al
; CHECK-NEXT:    negq %rax
; CHECK-NEXT:    xorq %rcx, %rax
; CHECK-NEXT:    cmpq %rsi, %rdi
; CHECK-NEXT:    adcq $0, %rax
; CHECK-NEXT:    retq
  %3 = icmp ult i64 %0, %1
  %4 = sext i1 %3 to i64
  %5 = sub i64 %0, %1
  %6 = xor i64 %5, %4
  %7 = sub i64 %6, %4
  ret i64 %7
}

define i64 @absdiff2(i64 %0, i64 %1) {
; CHECK-LABEL: absdiff2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movq %rdi, %rax
; CHECK-NEXT:    subq %rsi, %rax
; CHECK-NEXT:    negq %rax
; CHECK-NEXT:    subq %rsi, %rdi
; CHECK-NEXT:    cmovaeq %rdi, %rax
; CHECK-NEXT:    retq
  %3 = icmp ult i64 %0, %1
  %4 = sub i64 %0, %1
  %5 = sub i64 0, %4
  %6 = select i1 %3, i64 %5, i64 %4
  ret i64 %6
}
