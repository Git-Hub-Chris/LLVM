; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt -S -passes=instcombine < %s | FileCheck %s

target datalayout = "p:64:64"

@tlsvar_align32 = thread_local global i32 3, align 32

define i1 @lowbits_zero() {
; CHECK-LABEL: define i1 @lowbits_zero() {
; CHECK-NEXT:    ret i1 true
;
  %p = call ptr @llvm.threadlocal.address(ptr @tlsvar_align32)
  %p_int = ptrtoint ptr %p to i64
  %lowbits = and i64 %p_int, 31
  %lowbits_zero = icmp eq i64 %lowbits, 0
  ret i1 %lowbits_zero
}

define i1 @lowbits_unknown() {
; CHECK-LABEL: define i1 @lowbits_unknown() {
; CHECK-NEXT:    [[P:%.*]] = call ptr @llvm.threadlocal.address.p0(ptr @tlsvar_align32)
; CHECK-NEXT:    [[P_INT:%.*]] = ptrtoint ptr [[P]] to i64
; CHECK-NEXT:    [[LOWBITS:%.*]] = and i64 [[P_INT]], 32
; CHECK-NEXT:    [[LOWBITS_ZERO:%.*]] = icmp eq i64 [[LOWBITS]], 0
; CHECK-NEXT:    ret i1 [[LOWBITS_ZERO]]
;
  %p = call ptr @llvm.threadlocal.address(ptr @tlsvar_align32)
  %p_int = ptrtoint ptr %p to i64
  %lowbits = and i64 %p_int, 63
  %lowbits_zero = icmp eq i64 %lowbits, 0
  ret i1 %lowbits_zero
}
