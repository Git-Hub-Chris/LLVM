# REQUIRES: arm
# RUN: rm -rf %t && split-file %s %t && cd %t
# RUN: llvm-mc -filetype=obj -triple=armv7-linux-gnueabi a.s -o a.o

## If we don't merge adjacent duplicate entries, __code_size will be negative and
## . += __code_size will trigger an error.
# RUN: not ld.lld -z norelro -T a.t a.o -o /dev/null --no-merge-exidx-entries 2>&1 | FileCheck %s --check-prefix=ERR

# ERR: a.t:10: unable to move location counter (0x4104) backward (0x4070) for section 'code.unused_space'

## If we merge adjacent duplicate entries, we will have enough space. Don't report
## a spurious error https://github.com/llvm/llvm-project/issues/66836
# RUN: ld.lld -z norelro -T a.t a.o -o a
# RUN: llvm-readelf -S a | FileCheck %s

# CHECK:       [Nr] Name              Type            Address  Off    Size   ES Flg Lk Inf Al
# CHECK-NEXT:  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
# CHECK-NEXT:  [ 1] .text             PROGBITS        00004000 004000 000054 00  AX  0   0  4
# CHECK-NEXT:  [ 2] .ARM.exidx        ARM_EXIDX       00004054 004054 000010 00  AL  1   0  4
# CHECK-NEXT:  [ 3] code.unused_space NOBITS          00004064 004064 00000c 00   A  0   0  1

#--- a.s
.globl _start
_start:
  bx lr

.macro A
.section .text.f\@,"ax"
.globl f\@
f\@:
.fnstart
  bx lr
.cantunwind
.fnend
.endm

.rept 20
  A
.endr

#--- a.t
MEMORY {
  CODE (RX) : ORIGIN = 0x4000, LENGTH = 0x70
}
__code_end = ORIGIN(CODE) + LENGTH(CODE);

SECTIONS {
  .text : { *(.text .text.*) } > CODE
  .ARM.exidx : { *(.ARM.exidx .ARM.exidx.*) } > CODE
  __code_size = __code_end - .;
  code.unused_space (NOLOAD) : { . += __code_size; } > CODE
}
